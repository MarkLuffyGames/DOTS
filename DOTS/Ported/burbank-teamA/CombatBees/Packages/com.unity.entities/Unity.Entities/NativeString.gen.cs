//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     TextTransform Samples/Packages/com.unity.entities/Unity.Entities/UnsafeList.tt
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// We have defined fixed-size NativeStrings, all of which are value types with zero allocation.
// You can copy them freely without ever generating garbage or needing to Dispose, but they are limited in size.
// If you want no size restrictions - if you want one type that works equally well for 1 character or 1,000,000,000 -
// you're better off using C#'s garbage-collected String type.
//
// NativeString32 - consumes 32 bytes of memory. suitable for short names. cacheline-sized on ARM
// NativeString64 - consumes 64 bytes of memory. suitable for names and descriptions. cacheline sized on non-ARM
// NativeString128 - consumes 128 bytes of memory. can hold a line of text.
// NativeString512 - consumes 512 bytes of memory. 
// NativeString4096 - consumes 4096 bytes of memory. can hold a printed page of text.

using System;
using System.Diagnostics;
using System.Runtime.InteropServices;
using Unity.Assertions;
using Unity.Collections;
using Unity.Collections.LowLevel.Unsafe;
using Unity.Mathematics;

namespace Unity.Entities
{   
    internal unsafe struct NativeString
    {
        public override String ToString()
        {
            var c = stackalloc char[Length * 2];
            int length = 0;
            Unicode.Utf8ToUtf16(data, Length, c, out length, Length * 2);
            return new String(c, 0, length);
        }

        public override int GetHashCode()
        {
            return (int) math.hash(data, Length);
        }
        
        public static unsafe int CompareTo(byte *a, int aa, byte* b, int bb)
        {
            int chars = aa < bb ? aa : bb;
            for (var i = 0; i < chars; ++i)
            {
                if (a[i] < b[i])
                    return -1;
                if (a[i] > b[i])
                    return 1;
            }
            if (aa < bb)
                return -1;
            if (aa > bb)
                return 1;
            return 0;            
        }        
        public static unsafe bool Equals(byte *a, int aa, byte* b, int bb)
        {
            if (aa != bb)
                return false;
            return UnsafeUtility.MemCmp(a, b, aa) == 0;
        }

        public static bool IsDigit(Unicode.Rune c)
        {
            return c.value >= '0' && c.value <= '9';
        }

        public int Length;
        public int Capacity;
        public byte* data;

        public Unicode.Rune Peek(int offset)
        {
            if (offset >= Length)
                return Unicode.BadRune;
            Unicode.Utf8ToUcs(out var rune, data, ref offset, Capacity);
            return rune;
        }
        public Unicode.Rune Read(ref int offset)
        {
            Unicode.Utf8ToUcs(out var rune, data, ref offset, Capacity);
            return rune;
        }

        public void Write(ref int offset, Unicode.Rune rune)
        {
            Unicode.UcsToUtf8(data, ref offset, Capacity, rune);
        }
        
        public ParseError Parse(ref int offset, ref int output)
        {
            long value = 0;
            int sign = 1;
            int digits = 0;
            if (offset < Length)
            {
                if (Peek(offset).value == '+')
                    Read(ref offset);
                else if (Peek(offset).value == '-')
                {
                    sign = -1;
                    Read(ref offset);
                }
            }
            while (offset < Length && IsDigit(Peek(offset)))
            {
                value *= 10;
                value += Read(ref offset).value - '0';
                if(value >> 32 != 0)
                    return ParseError.Overflow;
                ++digits;
            }
            if (digits == 0)
                return ParseError.Syntax;
            value = sign * value;
            if(value > Int32.MaxValue)
                return ParseError.Overflow;
            if (value < Int32.MinValue)
                return ParseError.Overflow;            
            output = (int)value;
            return ParseError.None;
        }
        
        [StructLayout(LayoutKind.Explicit)]
        internal struct UintFloatUnion
        {
            [FieldOffset(0)]
            public uint uintValue;
            [FieldOffset(0)]
            public float floatValue;
        }
        
        static ParseError Base10ToBase2(ref float output, ulong mantissa10, int exponent10)
        {
            if (mantissa10 == 0)
            {
                output = 0.0f;
                return ParseError.None;
            }
            if (exponent10 == 0)
            {
                output = mantissa10;
                return ParseError.None;
            }
            var exponent2 = exponent10;
            var mantissa2 = mantissa10;
            while (exponent10 > 0)
            {
                while ((mantissa2 & 0xe000000000000000U) != 0)
                {
                    mantissa2 >>= 1;
                    ++exponent2;
                }
                mantissa2 *= 5;
                --exponent10;
            }
            while(exponent10 < 0)
            {
                while ((mantissa2 & 0x8000000000000000U) == 0) 
                {
                    mantissa2 <<= 1;
                    --exponent2;
                }
                mantissa2 /= 5;
                ++exponent10;
            }
            // TODO: implement math.ldexpf (which presumably handles denormals (i don't))
            UintFloatUnion ufu = new UintFloatUnion();
            ufu.floatValue = mantissa2;
            var e = (int)((ufu.uintValue >> 23) & 0xFFU) - 127;
            e += exponent2;
            if (e > 128)
                return ParseError.Overflow;
            if (e < -127)
                return ParseError.Underflow;
            ufu.uintValue = (ufu.uintValue & ~(0xFFU<<23)) | ((uint)(e + 127) << 23);
            output = ufu.floatValue;
            return ParseError.None;
        }

        static int tzcnt(uint v)
        {
            uint c = 32; // c will be the number of zero bits on the right
            v &= (uint)-(int)v;
            if (0 != v) c--;
            if (0 != (v & 0x0000FFFF)) c -= 16;
            if (0 != (v & 0x00FF00FF)) c -= 8;
            if (0 != (v & 0x0F0F0F0F)) c -= 4;
            if (0 != (v & 0x33333333)) c -= 2;
            if (0 != (v & 0x55555555)) c -= 1;
            return (int)c;
        }        
        
        public static void Base2ToBase10(ref ulong mantissa10, ref int exponent10, float input)
        {          
            UintFloatUnion ufu = new UintFloatUnion();
            ufu.floatValue = input;
            if(ufu.uintValue == 0)
            {
                mantissa10 = 0;
                exponent10 = 0;
                return;
            }
            var mantissa2 = (ufu.uintValue & ((1<<23)-1)) | (1 << 23);
            var exponent2 = (int) (ufu.uintValue >> 23) - 127 - 23;
//            var tz = tzcnt((uint)mantissa2);
//            mantissa2 >>= tz;
//            exponent2 += tz;
            mantissa10 = mantissa2;
            exponent10 = exponent2;
            if (exponent2 > 0)
            {
                while (exponent2 > 0)
                {
                    // denormalize mantissa10 as much as you can, to minimize loss when doing /5 below.
                    while (mantissa10 <= UInt64.MaxValue/10)
                    {
                        mantissa10 *= 10;
                        --exponent10;
                    }
                    mantissa10 /= 5;
                    --exponent2;
                }
            }
            if (exponent2 < 0)
            {
                while (exponent2 < 0)
                {
                    // normalize mantissa10 just as much as you need, in order to make the *5 below not overflow.
                    while (mantissa10 > UInt64.MaxValue/5)
                    {
                        mantissa10 /= 10;
                        ++exponent10;
                    }
                    mantissa10 *= 5;
                    ++exponent2;
                }
            }
            // normalize mantissa10                
            while (mantissa10 > 9999999U || mantissa10 % 10 == 0) 
            {
                mantissa10 = (mantissa10 + 5) / 10;
                ++exponent10;
            }
        }
        
        public FormatError Format(char a)
        {
            if (Length >= Capacity)
                return FormatError.Overflow;
            Write(ref Length, new Unicode.Rune {value = a});
            return FormatError.None;
        }
        
        public FormatError Format(char a, char b)
        {
            if (Length >= Capacity)
                return FormatError.Overflow;
            Write(ref Length, new Unicode.Rune {value = a});
            if (Length >= Capacity)
                return FormatError.Overflow;
            Write(ref Length, new Unicode.Rune {value = b});
            return FormatError.None;
        }
        
        public FormatError Format(char a, char b, char c)
        {            
            if (Length >= Capacity)
                return FormatError.Overflow;
            Write(ref Length, new Unicode.Rune {value = a});
            if (Length >= Capacity)
                return FormatError.Overflow;
            Write(ref Length, new Unicode.Rune {value = b});
            if (Length >= Capacity)
                return FormatError.Overflow;
            Write(ref Length, new Unicode.Rune {value = c});
            return FormatError.None;
        }

        public FormatError Format(char a, char b, char c, char d, char e, char f, char g, char h)
        {            
            if (Length >= Capacity)
                return FormatError.Overflow;
            Write(ref Length, new Unicode.Rune {value = a});
            if (Length >= Capacity)
                return FormatError.Overflow;
            Write(ref Length, new Unicode.Rune {value = b});
            if (Length >= Capacity)
                return FormatError.Overflow;
            Write(ref Length, new Unicode.Rune {value = c});
            if (Length >= Capacity)
                return FormatError.Overflow;
            Write(ref Length, new Unicode.Rune {value = d});
            if (Length >= Capacity)
                return FormatError.Overflow;
            Write(ref Length, new Unicode.Rune {value = e});
            if (Length >= Capacity)
                return FormatError.Overflow;
            Write(ref Length, new Unicode.Rune {value = f});
            if (Length >= Capacity)
                return FormatError.Overflow;
            Write(ref Length, new Unicode.Rune {value = g});
            if (Length >= Capacity)
                return FormatError.Overflow;
            Write(ref Length, new Unicode.Rune {value = h});
            return FormatError.None;
        }

        public FormatError FormatScientific(char *source, int sourceLength, int decimalExponent, char decimalSeparator)
        {
            FormatError error;
            if ((error = Format(source[0])) != FormatError.None)
                return error;
            if (sourceLength > 1)
            {
                if ((error = Format(decimalSeparator)) != FormatError.None)
                    return error;
                for (var i = 1; i < sourceLength; ++i)
                {
                    if ((error = Format(source[i])) != FormatError.None)
                        return error;
                }
            }
            if ((error = Format('E')) != FormatError.None)
                return error;
            if (decimalExponent < 0)
            {
                if ((error = Format('-')) != FormatError.None)
                    return error;
                decimalExponent *= -1;
            }
            else
                if ((error = Format('+')) != FormatError.None)
                    return error;
            var ascii = stackalloc char[2];
            decimalExponent -= sourceLength - 1;
            const int decimalDigits = 2;
            for(var i = 0; i < decimalDigits; ++i)
            {
                var decimalDigit = decimalExponent % 10;
                ascii[1 - i] = (char)('0'+decimalDigit);
                decimalExponent /= 10;                        
            }
            for(var i = 0; i < decimalDigits; ++i)
                if ((error = Format(ascii[i])) != FormatError.None)
                    return error;            
            return FormatError.None;                       
        }
        
        public FormatError Format(float input, char decimalSeparator)
        {
            UintFloatUnion ufu = new UintFloatUnion();
            ufu.floatValue = input;
            if (ufu.uintValue == 4290772992U)
                return Format('N', 'a', 'N');
            var sign = ufu.uintValue >> 31;
            ufu.uintValue &= ~(1 << 31);
            FormatError error;
            if (sign != 0 && ufu.uintValue != 0) // C# prints -0 as 0
                if ((error = Format('-')) != FormatError.None)
                    return error;
            if(ufu.uintValue == 2139095040U)
                return Format( 'I', 'n', 'f', 'i', 'n', 'i', 't', 'y');
            ulong decimalMantissa = 0;
            int decimalExponent = 0;
            Base2ToBase10(ref decimalMantissa, ref decimalExponent, ufu.floatValue);
            var backwards = stackalloc char[9];
            int decimalDigits = 0;
            do
            {
                if (decimalDigits >= 9)
                    return FormatError.Overflow;
                var decimalDigit = decimalMantissa % 10;
                backwards[8-decimalDigits++] = (char) ('0' + decimalDigit);
                decimalMantissa /= 10;
            } while (decimalMantissa > 0);
            char *ascii = backwards + 9 - decimalDigits;
            var leadingZeroes = -decimalExponent - decimalDigits + 1;
            if (leadingZeroes > 0)
            {
                if (leadingZeroes > 4)
                    return FormatScientific(ascii, decimalDigits, decimalExponent, decimalSeparator);
                if ((error = Format('0', decimalSeparator)) != FormatError.None)
                    return error;
                --leadingZeroes;
                while (leadingZeroes > 0)
                {
                    if ((error = Format( '0')) != FormatError.None)
                        return error;
                    --leadingZeroes;
                }
                for (var i = 0; i < decimalDigits; ++i)
                {
                    if ((error = Format( ascii[i])) != FormatError.None)
                        return error;
                }
                return FormatError.None;
            }
            var trailingZeroes = decimalExponent;
            if (trailingZeroes > 0)
            {
                if (trailingZeroes > 4)
                    return FormatScientific(  ascii, decimalDigits, decimalExponent, decimalSeparator);                
                for (var i = 0; i < decimalDigits; ++i)
                {
                    if ((error = Format( ascii[i])) != FormatError.None)
                        return error;
                }
                while (trailingZeroes > 0)
                {
                    if ((error = Format( '0')) != FormatError.None)
                        return error;
                    --trailingZeroes;                    
                }                
                return FormatError.None;
            }
            var indexOfSeparator = decimalDigits + decimalExponent;
            for (var i = 0; i < decimalDigits; ++i)
            {
                if (i == indexOfSeparator)
                    if ((error = Format(decimalSeparator)) != FormatError.None)
                        return error;
                if ((error = Format( ascii[i])) != FormatError.None)
                    return error;
            }
            return FormatError.None;
        }

        public bool Found(ref int offset, char a, char b, char c)
        {
            int old = offset;
            if((Read(ref offset).value|32) == a
            && (Read(ref offset).value|32) == b
            && (Read(ref offset).value|32) == c)
                return true;
            offset = old;
            return false;
        }

        public bool Found(ref int offset, char a, char b, char c, char d, char e, char f, char g, char h)
        {
            int old = offset;
            if((Read(ref offset).value|32) == a
            && (Read(ref offset).value|32) == b
            && (Read(ref offset).value|32) == c
            && (Read(ref offset).value|32) == d
            && (Read(ref offset).value|32) == e
            && (Read(ref offset).value|32) == f
            && (Read(ref offset).value|32) == g
            && (Read(ref offset).value|32) == h)
                return true;
            offset = old;
            return false;
        }
        
        public ParseError Parse(ref int offset, ref float output, char decimalSeparator)
        {
            if(Found(ref offset, 'n', 'a', 'n'))
            {
                UintFloatUnion ufu = new UintFloatUnion();
                ufu.uintValue = 4290772992U;
                output = ufu.floatValue;
                return ParseError.None;
            }            
            int sign = 1;
            if (offset < Length)
            {
                if (Peek(offset).value == '+')
                    Read(ref offset);
                else if (Peek(offset).value == '-')
                {
                    sign = -1;
                    Read(ref offset);
                }
            }
            ulong decimalMantissa = 0;
            int significantDigits = 0;
            int digitsAfterDot = 0;
            int mantissaDigits = 0;
            if(Found(ref offset, 'i', 'n', 'f', 'i', 'n', 'i', 't', 'y'))
            {
                output = (sign == 1) ? Single.PositiveInfinity : Single.NegativeInfinity;
                return ParseError.None;
            }
            while (offset < Length && IsDigit(Peek(offset)))
            {
                ++mantissaDigits;
                if (significantDigits < 9)
                {
                    var temp = decimalMantissa * 10 + (ulong)(Peek(offset).value - '0');
                    if (temp > decimalMantissa)
                        ++significantDigits;
                    decimalMantissa = temp;
                }
                else
                    --digitsAfterDot;
                Read(ref offset);
            }
            if (offset < Length && Peek(offset).value == decimalSeparator)
            {
                Read(ref offset);
                while (offset < Length && IsDigit(Peek(offset)))
                {
                    ++mantissaDigits;
                    if (significantDigits < 9)
                    {
                        var temp = decimalMantissa * 10 + (ulong)(Peek(offset).value - '0');
                        if (temp > decimalMantissa)
                            ++significantDigits;
                        decimalMantissa = temp;
                        ++digitsAfterDot;
                    }
                    Read(ref offset);
                }
            }
            if (mantissaDigits == 0)
                return ParseError.Syntax;
            int decimalExponent = 0;
            int decimalExponentSign = 1;
            if (offset < Length && (Peek(offset).value|32) == 'e')
            {
                Read(ref offset);
                if (offset < Length)
                {
                    if (Peek(offset).value == '+')
                        Read(ref offset);
                    else if (Peek(offset).value == '-')
                    {
                        decimalExponentSign = -1;
                        Read(ref offset);
                    }
                }
                int exponentDigits = 0;
                while (offset < Length && IsDigit(Peek(offset)))
                {
                    ++exponentDigits;
                    decimalExponent = decimalExponent * 10 + (Peek(offset).value - '0');
                    if (decimalExponent > 38)
                        if(decimalExponentSign == 1)
                            return ParseError.Overflow;
                        else
                            return ParseError.Underflow;
                    Read(ref offset);
                }
                if (exponentDigits == 0)
                    return ParseError.Syntax;
            }
            decimalExponent = decimalExponent * decimalExponentSign - digitsAfterDot;            
            var error = Base10ToBase2(ref output, decimalMantissa, decimalExponent);
            if (error != ParseError.None)
                return error;
            output *= sign;
            return ParseError.None;
        }
        
        public static CopyError Copy(byte *dest, out int destLength, int destMaxLength, char *src, int srcLength)
        {
            if(ConversionError.None == Unicode.Utf16ToUtf8(src, srcLength, dest, out destLength, destMaxLength))
                return CopyError.None;
            return CopyError.Truncation;
        }
        public static CopyError Copy(byte *dest, out int destLength, int destMaxLength, byte *src, int srcLength)
        {
            destLength = srcLength > destMaxLength ? destMaxLength : srcLength;
            UnsafeUtility.MemCpy(dest, src, destLength);
            return destLength == srcLength ? CopyError.None : CopyError.Truncation;
        }
        public static CopyError Copy(char *dest, out int destLength, int destMaxLength, byte *src, int srcLength)
        {
            if(ConversionError.None == Unicode.Utf8ToUtf16(src, srcLength, dest, out destLength, destMaxLength))
                return CopyError.None;
            return CopyError.Truncation;
        }
        
        public static CopyError Copy(byte *dest, out ushort destLength, ushort destMaxLength, char *src, ushort srcLength)
        {
            var error = Unicode.Utf16ToUtf8(src, srcLength, dest, out var temp, destMaxLength);
            destLength = (ushort)temp;
            if(error == ConversionError.None) 
                return CopyError.None;
            return CopyError.Truncation;
        }
        public static CopyError Copy(byte *dest, out ushort destLength, ushort destMaxLength, byte *src, ushort srcLength)
        {
            destLength = srcLength > destMaxLength ? destMaxLength : srcLength;
            UnsafeUtility.MemCpy(dest, src, destLength);
            return destLength == srcLength ? CopyError.None : CopyError.Truncation;
        }
        public static CopyError Copy(char *dest, out ushort destLength, ushort destMaxLength, byte *src, ushort srcLength)
        {
            var error = Unicode.Utf8ToUtf16(src, srcLength, dest, out var temp, destMaxLength);
            destLength = (ushort)temp;
            if(error == ConversionError.None)
                return CopyError.None;
            return CopyError.Truncation;
        }
        
        
    }


    [StructLayout(LayoutKind.Explicit, Size=30)]
    public struct Bytes30
    {
        [FieldOffset(0)] public byte byte0000;            
        [FieldOffset(1)] public byte byte0001;            
        [FieldOffset(2)] public byte byte0002;            
        [FieldOffset(3)] public byte byte0003;            
        [FieldOffset(4)] public byte byte0004;            
        [FieldOffset(5)] public byte byte0005;            
        [FieldOffset(6)] public byte byte0006;            
        [FieldOffset(7)] public byte byte0007;            
        [FieldOffset(8)] public byte byte0008;            
        [FieldOffset(9)] public byte byte0009;            
        [FieldOffset(10)] public byte byte0010;            
        [FieldOffset(11)] public byte byte0011;            
        [FieldOffset(12)] public byte byte0012;            
        [FieldOffset(13)] public byte byte0013;            
        [FieldOffset(14)] public byte byte0014;            
        [FieldOffset(15)] public byte byte0015;            
        [FieldOffset(16)] public byte byte0016;            
        [FieldOffset(17)] public byte byte0017;            
        [FieldOffset(18)] public byte byte0018;            
        [FieldOffset(19)] public byte byte0019;            
        [FieldOffset(20)] public byte byte0020;            
        [FieldOffset(21)] public byte byte0021;            
        [FieldOffset(22)] public byte byte0022;            
        [FieldOffset(23)] public byte byte0023;            
        [FieldOffset(24)] public byte byte0024;            
        [FieldOffset(25)] public byte byte0025;            
        [FieldOffset(26)] public byte byte0026;            
        [FieldOffset(27)] public byte byte0027;            
        [FieldOffset(28)] public byte byte0028;            
        [FieldOffset(29)] public byte byte0029;            
    }
    
    [StructLayout(LayoutKind.Explicit, Size=32)]
    public struct NativeString32 : IComparable<NativeString32>, IEquatable<NativeString32>
    {
        public const int MaxLength = 30;
        [FieldOffset(0)] public ushort LengthInBytes;
        [FieldOffset(2)] public Bytes30 buffer;        
                
        public ParseError Parse(ref int offset, ref int output)
        {
            unsafe
            {
                fixed (byte* b = &buffer.byte0000)
                {
                    NativeString temp = new NativeString{data = b, Length = LengthInBytes, Capacity = MaxLength};
                    return temp.Parse(ref offset, ref output);                    
                }
            }
        }
        public ParseError Parse(ref int offset, ref float output, char decimalSeparator = '.')
        {
            unsafe
            {
                fixed (byte* b = &buffer.byte0000)
                {
                    NativeString temp = new NativeString {data = b, Length = LengthInBytes, Capacity = MaxLength};
                    return temp.Parse(ref offset, ref output, decimalSeparator);
                }
            }
        }

        public FormatError Format(float input, char decimalSeparator = '.')
        {
            unsafe
            {
                fixed (byte* b = &buffer.byte0000)
                {
                    NativeString temp = new NativeString {data = b, Length = LengthInBytes, Capacity = MaxLength};
                    var error = temp.Format(input, decimalSeparator);
                    LengthInBytes = (ushort)temp.Length;
                    return error;
                }
            }
        }

        public unsafe CopyError CopyFrom(NativeString32 source)
        {
            fixed (byte* b = &buffer.byte0000)
                return source.CopyTo(b, out LengthInBytes, MaxLength);
        }
        
        
        public unsafe CopyError CopyFrom(NativeString64 source)
        {
            fixed (byte* b = &buffer.byte0000)
                return source.CopyTo(b, out LengthInBytes, MaxLength);
        }

        public NativeString32(ref NativeString64 source)
        {
            LengthInBytes = 0;
            buffer = new Bytes30{};
            var error = CopyFrom(source);
            if(error != CopyError.None)
                throw new ArgumentException($"NativeString32: {error} while copying \"{source}\"");             
        }
        
        
        public unsafe CopyError CopyFrom(NativeString128 source)
        {
            fixed (byte* b = &buffer.byte0000)
                return source.CopyTo(b, out LengthInBytes, MaxLength);
        }

        public NativeString32(ref NativeString128 source)
        {
            LengthInBytes = 0;
            buffer = new Bytes30{};
            var error = CopyFrom(source);
            if(error != CopyError.None)
                throw new ArgumentException($"NativeString32: {error} while copying \"{source}\"");             
        }
        
        
        public unsafe CopyError CopyFrom(NativeString512 source)
        {
            fixed (byte* b = &buffer.byte0000)
                return source.CopyTo(b, out LengthInBytes, MaxLength);
        }

        public NativeString32(ref NativeString512 source)
        {
            LengthInBytes = 0;
            buffer = new Bytes30{};
            var error = CopyFrom(source);
            if(error != CopyError.None)
                throw new ArgumentException($"NativeString32: {error} while copying \"{source}\"");             
        }
        
        
        public unsafe CopyError CopyFrom(NativeString4096 source)
        {
            fixed (byte* b = &buffer.byte0000)
                return source.CopyTo(b, out LengthInBytes, MaxLength);
        }

        public NativeString32(ref NativeString4096 source)
        {
            LengthInBytes = 0;
            buffer = new Bytes30{};
            var error = CopyFrom(source);
            if(error != CopyError.None)
                throw new ArgumentException($"NativeString32: {error} while copying \"{source}\"");             
        }
        
        
        public unsafe CopyError CopyFrom(char* s, ushort length)
        {
            fixed (byte* b = &buffer.byte0000)
                return NativeString.Copy(b, out LengthInBytes, MaxLength, s, length);
        }
        public unsafe CopyError CopyFrom(String source)
        {
            if (string.IsNullOrEmpty(source))
            {
                LengthInBytes = 0;
                return CopyError.None;
            }        
            fixed(char *c = source)
                return CopyFrom(c, (ushort)source.Length);
        }        
        public unsafe CopyError CopyTo(byte* d, out ushort length, ushort maxLength)
        {
            fixed (byte* b = &buffer.byte0000)
                return NativeString.Copy(d, out length, maxLength, b, LengthInBytes);
        }
        public unsafe CopyError CopyTo(char* d, out ushort length, ushort maxLength)
        {
            fixed (byte* b = &buffer.byte0000)
                return NativeString.Copy(d, out length, maxLength, b, LengthInBytes);
        }


        public NativeString32(String source)
        {
            LengthInBytes = 0;
            buffer = new Bytes30{};
            var error = CopyFrom(source);
            if(error != CopyError.None)
                throw new ArgumentException($"NativeString32: {error} while copying \"{source}\"");             
        }
                
        public static implicit operator NativeString32(string b) => new NativeString32(b);        
                
        public override String ToString()
        {
            unsafe
            {
                fixed (byte* b = &buffer.byte0000)
                {
                    return new NativeString {data = b, Length = LengthInBytes, Capacity = MaxLength}.ToString();
                }
            }
        }
        public override int GetHashCode()
        {
            unsafe
            {
                fixed (byte* b = &buffer.byte0000)
                {
                    return new NativeString {data = b, Length = LengthInBytes, Capacity = MaxLength}.GetHashCode();
                }
            }
        }

        
        public int CompareTo(NativeString32 other)
        {
            unsafe
            {
                fixed (byte* b = &buffer.byte0000)
                {
                    return NativeString.CompareTo(b, LengthInBytes, &other.buffer.byte0000, other.LengthInBytes);
                }
            }
        }

        public bool Equals(NativeString32 other)
        {
            unsafe
            {
                fixed (byte* b = &buffer.byte0000)
                {
                    return NativeString.Equals(b, LengthInBytes, &other.buffer.byte0000, other.LengthInBytes);
                }
            }
        }

        public override bool Equals(object obj)
        {
            if (ReferenceEquals(null, obj)) return false;
            return obj is NativeString32 other && Equals(other);
        }
    }

    [StructLayout(LayoutKind.Explicit, Size=62)]
    public struct Bytes62
    {
        [FieldOffset(0)] public byte byte0000;            
        [FieldOffset(1)] public byte byte0001;            
        [FieldOffset(2)] public byte byte0002;            
        [FieldOffset(3)] public byte byte0003;            
        [FieldOffset(4)] public byte byte0004;            
        [FieldOffset(5)] public byte byte0005;            
        [FieldOffset(6)] public byte byte0006;            
        [FieldOffset(7)] public byte byte0007;            
        [FieldOffset(8)] public byte byte0008;            
        [FieldOffset(9)] public byte byte0009;            
        [FieldOffset(10)] public byte byte0010;            
        [FieldOffset(11)] public byte byte0011;            
        [FieldOffset(12)] public byte byte0012;            
        [FieldOffset(13)] public byte byte0013;            
        [FieldOffset(14)] public byte byte0014;            
        [FieldOffset(15)] public byte byte0015;            
        [FieldOffset(16)] public byte byte0016;            
        [FieldOffset(17)] public byte byte0017;            
        [FieldOffset(18)] public byte byte0018;            
        [FieldOffset(19)] public byte byte0019;            
        [FieldOffset(20)] public byte byte0020;            
        [FieldOffset(21)] public byte byte0021;            
        [FieldOffset(22)] public byte byte0022;            
        [FieldOffset(23)] public byte byte0023;            
        [FieldOffset(24)] public byte byte0024;            
        [FieldOffset(25)] public byte byte0025;            
        [FieldOffset(26)] public byte byte0026;            
        [FieldOffset(27)] public byte byte0027;            
        [FieldOffset(28)] public byte byte0028;            
        [FieldOffset(29)] public byte byte0029;            
        [FieldOffset(30)] public byte byte0030;            
        [FieldOffset(31)] public byte byte0031;            
        [FieldOffset(32)] public byte byte0032;            
        [FieldOffset(33)] public byte byte0033;            
        [FieldOffset(34)] public byte byte0034;            
        [FieldOffset(35)] public byte byte0035;            
        [FieldOffset(36)] public byte byte0036;            
        [FieldOffset(37)] public byte byte0037;            
        [FieldOffset(38)] public byte byte0038;            
        [FieldOffset(39)] public byte byte0039;            
        [FieldOffset(40)] public byte byte0040;            
        [FieldOffset(41)] public byte byte0041;            
        [FieldOffset(42)] public byte byte0042;            
        [FieldOffset(43)] public byte byte0043;            
        [FieldOffset(44)] public byte byte0044;            
        [FieldOffset(45)] public byte byte0045;            
        [FieldOffset(46)] public byte byte0046;            
        [FieldOffset(47)] public byte byte0047;            
        [FieldOffset(48)] public byte byte0048;            
        [FieldOffset(49)] public byte byte0049;            
        [FieldOffset(50)] public byte byte0050;            
        [FieldOffset(51)] public byte byte0051;            
        [FieldOffset(52)] public byte byte0052;            
        [FieldOffset(53)] public byte byte0053;            
        [FieldOffset(54)] public byte byte0054;            
        [FieldOffset(55)] public byte byte0055;            
        [FieldOffset(56)] public byte byte0056;            
        [FieldOffset(57)] public byte byte0057;            
        [FieldOffset(58)] public byte byte0058;            
        [FieldOffset(59)] public byte byte0059;            
        [FieldOffset(60)] public byte byte0060;            
        [FieldOffset(61)] public byte byte0061;            
    }
    
    [StructLayout(LayoutKind.Explicit, Size=64)]
    public struct NativeString64 : IComparable<NativeString64>, IEquatable<NativeString64>
    {
        public const int MaxLength = 62;
        [FieldOffset(0)] public ushort LengthInBytes;
        [FieldOffset(2)] public Bytes62 buffer;        
                
        public ParseError Parse(ref int offset, ref int output)
        {
            unsafe
            {
                fixed (byte* b = &buffer.byte0000)
                {
                    NativeString temp = new NativeString{data = b, Length = LengthInBytes, Capacity = MaxLength};
                    return temp.Parse(ref offset, ref output);                    
                }
            }
        }
        public ParseError Parse(ref int offset, ref float output, char decimalSeparator = '.')
        {
            unsafe
            {
                fixed (byte* b = &buffer.byte0000)
                {
                    NativeString temp = new NativeString {data = b, Length = LengthInBytes, Capacity = MaxLength};
                    return temp.Parse(ref offset, ref output, decimalSeparator);
                }
            }
        }

        public FormatError Format(float input, char decimalSeparator = '.')
        {
            unsafe
            {
                fixed (byte* b = &buffer.byte0000)
                {
                    NativeString temp = new NativeString {data = b, Length = LengthInBytes, Capacity = MaxLength};
                    var error = temp.Format(input, decimalSeparator);
                    LengthInBytes = (ushort)temp.Length;
                    return error;
                }
            }
        }

        public unsafe CopyError CopyFrom(NativeString64 source)
        {
            fixed (byte* b = &buffer.byte0000)
                return source.CopyTo(b, out LengthInBytes, MaxLength);
        }
        
        
        public unsafe CopyError CopyFrom(NativeString32 source)
        {
            fixed (byte* b = &buffer.byte0000)
                return source.CopyTo(b, out LengthInBytes, MaxLength);
        }

        public NativeString64(ref NativeString32 source)
        {
            LengthInBytes = 0;
            buffer = new Bytes62{};
            var error = CopyFrom(source);
            if(error != CopyError.None)
                throw new ArgumentException($"NativeString64: {error} while copying \"{source}\"");             
        }
        
        
        public unsafe CopyError CopyFrom(NativeString128 source)
        {
            fixed (byte* b = &buffer.byte0000)
                return source.CopyTo(b, out LengthInBytes, MaxLength);
        }

        public NativeString64(ref NativeString128 source)
        {
            LengthInBytes = 0;
            buffer = new Bytes62{};
            var error = CopyFrom(source);
            if(error != CopyError.None)
                throw new ArgumentException($"NativeString64: {error} while copying \"{source}\"");             
        }
        
        
        public unsafe CopyError CopyFrom(NativeString512 source)
        {
            fixed (byte* b = &buffer.byte0000)
                return source.CopyTo(b, out LengthInBytes, MaxLength);
        }

        public NativeString64(ref NativeString512 source)
        {
            LengthInBytes = 0;
            buffer = new Bytes62{};
            var error = CopyFrom(source);
            if(error != CopyError.None)
                throw new ArgumentException($"NativeString64: {error} while copying \"{source}\"");             
        }
        
        
        public unsafe CopyError CopyFrom(NativeString4096 source)
        {
            fixed (byte* b = &buffer.byte0000)
                return source.CopyTo(b, out LengthInBytes, MaxLength);
        }

        public NativeString64(ref NativeString4096 source)
        {
            LengthInBytes = 0;
            buffer = new Bytes62{};
            var error = CopyFrom(source);
            if(error != CopyError.None)
                throw new ArgumentException($"NativeString64: {error} while copying \"{source}\"");             
        }
        
        
        public unsafe CopyError CopyFrom(char* s, ushort length)
        {
            fixed (byte* b = &buffer.byte0000)
                return NativeString.Copy(b, out LengthInBytes, MaxLength, s, length);
        }
        public unsafe CopyError CopyFrom(String source)
        {
            if (string.IsNullOrEmpty(source))
            {
                LengthInBytes = 0;
                return CopyError.None;
            }        
            fixed(char *c = source)
                return CopyFrom(c, (ushort)source.Length);
        }        
        public unsafe CopyError CopyTo(byte* d, out ushort length, ushort maxLength)
        {
            fixed (byte* b = &buffer.byte0000)
                return NativeString.Copy(d, out length, maxLength, b, LengthInBytes);
        }
        public unsafe CopyError CopyTo(char* d, out ushort length, ushort maxLength)
        {
            fixed (byte* b = &buffer.byte0000)
                return NativeString.Copy(d, out length, maxLength, b, LengthInBytes);
        }


        public NativeString64(String source)
        {
            LengthInBytes = 0;
            buffer = new Bytes62{};
            var error = CopyFrom(source);
            if(error != CopyError.None)
                throw new ArgumentException($"NativeString64: {error} while copying \"{source}\"");             
        }
                
        public static implicit operator NativeString64(string b) => new NativeString64(b);        
                
        public override String ToString()
        {
            unsafe
            {
                fixed (byte* b = &buffer.byte0000)
                {
                    return new NativeString {data = b, Length = LengthInBytes, Capacity = MaxLength}.ToString();
                }
            }
        }
        public override int GetHashCode()
        {
            unsafe
            {
                fixed (byte* b = &buffer.byte0000)
                {
                    return new NativeString {data = b, Length = LengthInBytes, Capacity = MaxLength}.GetHashCode();
                }
            }
        }

        
        public int CompareTo(NativeString64 other)
        {
            unsafe
            {
                fixed (byte* b = &buffer.byte0000)
                {
                    return NativeString.CompareTo(b, LengthInBytes, &other.buffer.byte0000, other.LengthInBytes);
                }
            }
        }

        public bool Equals(NativeString64 other)
        {
            unsafe
            {
                fixed (byte* b = &buffer.byte0000)
                {
                    return NativeString.Equals(b, LengthInBytes, &other.buffer.byte0000, other.LengthInBytes);
                }
            }
        }

        public override bool Equals(object obj)
        {
            if (ReferenceEquals(null, obj)) return false;
            return obj is NativeString64 other && Equals(other);
        }
    }

    [StructLayout(LayoutKind.Explicit, Size=126)]
    public struct Bytes126
    {
        [FieldOffset(0)] public byte byte0000;            
        [FieldOffset(1)] public byte byte0001;            
        [FieldOffset(2)] public byte byte0002;            
        [FieldOffset(3)] public byte byte0003;            
        [FieldOffset(4)] public byte byte0004;            
        [FieldOffset(5)] public byte byte0005;            
        [FieldOffset(6)] public byte byte0006;            
        [FieldOffset(7)] public byte byte0007;            
        [FieldOffset(8)] public byte byte0008;            
        [FieldOffset(9)] public byte byte0009;            
        [FieldOffset(10)] public byte byte0010;            
        [FieldOffset(11)] public byte byte0011;            
        [FieldOffset(12)] public byte byte0012;            
        [FieldOffset(13)] public byte byte0013;            
        [FieldOffset(14)] public byte byte0014;            
        [FieldOffset(15)] public byte byte0015;            
        [FieldOffset(16)] public byte byte0016;            
        [FieldOffset(17)] public byte byte0017;            
        [FieldOffset(18)] public byte byte0018;            
        [FieldOffset(19)] public byte byte0019;            
        [FieldOffset(20)] public byte byte0020;            
        [FieldOffset(21)] public byte byte0021;            
        [FieldOffset(22)] public byte byte0022;            
        [FieldOffset(23)] public byte byte0023;            
        [FieldOffset(24)] public byte byte0024;            
        [FieldOffset(25)] public byte byte0025;            
        [FieldOffset(26)] public byte byte0026;            
        [FieldOffset(27)] public byte byte0027;            
        [FieldOffset(28)] public byte byte0028;            
        [FieldOffset(29)] public byte byte0029;            
        [FieldOffset(30)] public byte byte0030;            
        [FieldOffset(31)] public byte byte0031;            
        [FieldOffset(32)] public byte byte0032;            
        [FieldOffset(33)] public byte byte0033;            
        [FieldOffset(34)] public byte byte0034;            
        [FieldOffset(35)] public byte byte0035;            
        [FieldOffset(36)] public byte byte0036;            
        [FieldOffset(37)] public byte byte0037;            
        [FieldOffset(38)] public byte byte0038;            
        [FieldOffset(39)] public byte byte0039;            
        [FieldOffset(40)] public byte byte0040;            
        [FieldOffset(41)] public byte byte0041;            
        [FieldOffset(42)] public byte byte0042;            
        [FieldOffset(43)] public byte byte0043;            
        [FieldOffset(44)] public byte byte0044;            
        [FieldOffset(45)] public byte byte0045;            
        [FieldOffset(46)] public byte byte0046;            
        [FieldOffset(47)] public byte byte0047;            
        [FieldOffset(48)] public byte byte0048;            
        [FieldOffset(49)] public byte byte0049;            
        [FieldOffset(50)] public byte byte0050;            
        [FieldOffset(51)] public byte byte0051;            
        [FieldOffset(52)] public byte byte0052;            
        [FieldOffset(53)] public byte byte0053;            
        [FieldOffset(54)] public byte byte0054;            
        [FieldOffset(55)] public byte byte0055;            
        [FieldOffset(56)] public byte byte0056;            
        [FieldOffset(57)] public byte byte0057;            
        [FieldOffset(58)] public byte byte0058;            
        [FieldOffset(59)] public byte byte0059;            
        [FieldOffset(60)] public byte byte0060;            
        [FieldOffset(61)] public byte byte0061;            
        [FieldOffset(62)] public byte byte0062;            
        [FieldOffset(63)] public byte byte0063;            
        [FieldOffset(64)] public byte byte0064;            
        [FieldOffset(65)] public byte byte0065;            
        [FieldOffset(66)] public byte byte0066;            
        [FieldOffset(67)] public byte byte0067;            
        [FieldOffset(68)] public byte byte0068;            
        [FieldOffset(69)] public byte byte0069;            
        [FieldOffset(70)] public byte byte0070;            
        [FieldOffset(71)] public byte byte0071;            
        [FieldOffset(72)] public byte byte0072;            
        [FieldOffset(73)] public byte byte0073;            
        [FieldOffset(74)] public byte byte0074;            
        [FieldOffset(75)] public byte byte0075;            
        [FieldOffset(76)] public byte byte0076;            
        [FieldOffset(77)] public byte byte0077;            
        [FieldOffset(78)] public byte byte0078;            
        [FieldOffset(79)] public byte byte0079;            
        [FieldOffset(80)] public byte byte0080;            
        [FieldOffset(81)] public byte byte0081;            
        [FieldOffset(82)] public byte byte0082;            
        [FieldOffset(83)] public byte byte0083;            
        [FieldOffset(84)] public byte byte0084;            
        [FieldOffset(85)] public byte byte0085;            
        [FieldOffset(86)] public byte byte0086;            
        [FieldOffset(87)] public byte byte0087;            
        [FieldOffset(88)] public byte byte0088;            
        [FieldOffset(89)] public byte byte0089;            
        [FieldOffset(90)] public byte byte0090;            
        [FieldOffset(91)] public byte byte0091;            
        [FieldOffset(92)] public byte byte0092;            
        [FieldOffset(93)] public byte byte0093;            
        [FieldOffset(94)] public byte byte0094;            
        [FieldOffset(95)] public byte byte0095;            
        [FieldOffset(96)] public byte byte0096;            
        [FieldOffset(97)] public byte byte0097;            
        [FieldOffset(98)] public byte byte0098;            
        [FieldOffset(99)] public byte byte0099;            
        [FieldOffset(100)] public byte byte0100;            
        [FieldOffset(101)] public byte byte0101;            
        [FieldOffset(102)] public byte byte0102;            
        [FieldOffset(103)] public byte byte0103;            
        [FieldOffset(104)] public byte byte0104;            
        [FieldOffset(105)] public byte byte0105;            
        [FieldOffset(106)] public byte byte0106;            
        [FieldOffset(107)] public byte byte0107;            
        [FieldOffset(108)] public byte byte0108;            
        [FieldOffset(109)] public byte byte0109;            
        [FieldOffset(110)] public byte byte0110;            
        [FieldOffset(111)] public byte byte0111;            
        [FieldOffset(112)] public byte byte0112;            
        [FieldOffset(113)] public byte byte0113;            
        [FieldOffset(114)] public byte byte0114;            
        [FieldOffset(115)] public byte byte0115;            
        [FieldOffset(116)] public byte byte0116;            
        [FieldOffset(117)] public byte byte0117;            
        [FieldOffset(118)] public byte byte0118;            
        [FieldOffset(119)] public byte byte0119;            
        [FieldOffset(120)] public byte byte0120;            
        [FieldOffset(121)] public byte byte0121;            
        [FieldOffset(122)] public byte byte0122;            
        [FieldOffset(123)] public byte byte0123;            
        [FieldOffset(124)] public byte byte0124;            
        [FieldOffset(125)] public byte byte0125;            
    }
    
    [StructLayout(LayoutKind.Explicit, Size=128)]
    public struct NativeString128 : IComparable<NativeString128>, IEquatable<NativeString128>
    {
        public const int MaxLength = 126;
        [FieldOffset(0)] public ushort LengthInBytes;
        [FieldOffset(2)] public Bytes126 buffer;        
                
        public ParseError Parse(ref int offset, ref int output)
        {
            unsafe
            {
                fixed (byte* b = &buffer.byte0000)
                {
                    NativeString temp = new NativeString{data = b, Length = LengthInBytes, Capacity = MaxLength};
                    return temp.Parse(ref offset, ref output);                    
                }
            }
        }
        public ParseError Parse(ref int offset, ref float output, char decimalSeparator = '.')
        {
            unsafe
            {
                fixed (byte* b = &buffer.byte0000)
                {
                    NativeString temp = new NativeString {data = b, Length = LengthInBytes, Capacity = MaxLength};
                    return temp.Parse(ref offset, ref output, decimalSeparator);
                }
            }
        }

        public FormatError Format(float input, char decimalSeparator = '.')
        {
            unsafe
            {
                fixed (byte* b = &buffer.byte0000)
                {
                    NativeString temp = new NativeString {data = b, Length = LengthInBytes, Capacity = MaxLength};
                    var error = temp.Format(input, decimalSeparator);
                    LengthInBytes = (ushort)temp.Length;
                    return error;
                }
            }
        }

        public unsafe CopyError CopyFrom(NativeString128 source)
        {
            fixed (byte* b = &buffer.byte0000)
                return source.CopyTo(b, out LengthInBytes, MaxLength);
        }
        
        
        public unsafe CopyError CopyFrom(NativeString32 source)
        {
            fixed (byte* b = &buffer.byte0000)
                return source.CopyTo(b, out LengthInBytes, MaxLength);
        }

        public NativeString128(ref NativeString32 source)
        {
            LengthInBytes = 0;
            buffer = new Bytes126{};
            var error = CopyFrom(source);
            if(error != CopyError.None)
                throw new ArgumentException($"NativeString128: {error} while copying \"{source}\"");             
        }
        
        
        public unsafe CopyError CopyFrom(NativeString64 source)
        {
            fixed (byte* b = &buffer.byte0000)
                return source.CopyTo(b, out LengthInBytes, MaxLength);
        }

        public NativeString128(ref NativeString64 source)
        {
            LengthInBytes = 0;
            buffer = new Bytes126{};
            var error = CopyFrom(source);
            if(error != CopyError.None)
                throw new ArgumentException($"NativeString128: {error} while copying \"{source}\"");             
        }
        
        
        public unsafe CopyError CopyFrom(NativeString512 source)
        {
            fixed (byte* b = &buffer.byte0000)
                return source.CopyTo(b, out LengthInBytes, MaxLength);
        }

        public NativeString128(ref NativeString512 source)
        {
            LengthInBytes = 0;
            buffer = new Bytes126{};
            var error = CopyFrom(source);
            if(error != CopyError.None)
                throw new ArgumentException($"NativeString128: {error} while copying \"{source}\"");             
        }
        
        
        public unsafe CopyError CopyFrom(NativeString4096 source)
        {
            fixed (byte* b = &buffer.byte0000)
                return source.CopyTo(b, out LengthInBytes, MaxLength);
        }

        public NativeString128(ref NativeString4096 source)
        {
            LengthInBytes = 0;
            buffer = new Bytes126{};
            var error = CopyFrom(source);
            if(error != CopyError.None)
                throw new ArgumentException($"NativeString128: {error} while copying \"{source}\"");             
        }
        
        
        public unsafe CopyError CopyFrom(char* s, ushort length)
        {
            fixed (byte* b = &buffer.byte0000)
                return NativeString.Copy(b, out LengthInBytes, MaxLength, s, length);
        }
        public unsafe CopyError CopyFrom(String source)
        {
            if (string.IsNullOrEmpty(source))
            {
                LengthInBytes = 0;
                return CopyError.None;
            }        
            fixed(char *c = source)
                return CopyFrom(c, (ushort)source.Length);
        }        
        public unsafe CopyError CopyTo(byte* d, out ushort length, ushort maxLength)
        {
            fixed (byte* b = &buffer.byte0000)
                return NativeString.Copy(d, out length, maxLength, b, LengthInBytes);
        }
        public unsafe CopyError CopyTo(char* d, out ushort length, ushort maxLength)
        {
            fixed (byte* b = &buffer.byte0000)
                return NativeString.Copy(d, out length, maxLength, b, LengthInBytes);
        }


        public NativeString128(String source)
        {
            LengthInBytes = 0;
            buffer = new Bytes126{};
            var error = CopyFrom(source);
            if(error != CopyError.None)
                throw new ArgumentException($"NativeString128: {error} while copying \"{source}\"");             
        }
                
        public static implicit operator NativeString128(string b) => new NativeString128(b);        
                
        public override String ToString()
        {
            unsafe
            {
                fixed (byte* b = &buffer.byte0000)
                {
                    return new NativeString {data = b, Length = LengthInBytes, Capacity = MaxLength}.ToString();
                }
            }
        }
        public override int GetHashCode()
        {
            unsafe
            {
                fixed (byte* b = &buffer.byte0000)
                {
                    return new NativeString {data = b, Length = LengthInBytes, Capacity = MaxLength}.GetHashCode();
                }
            }
        }

        
        public int CompareTo(NativeString128 other)
        {
            unsafe
            {
                fixed (byte* b = &buffer.byte0000)
                {
                    return NativeString.CompareTo(b, LengthInBytes, &other.buffer.byte0000, other.LengthInBytes);
                }
            }
        }

        public bool Equals(NativeString128 other)
        {
            unsafe
            {
                fixed (byte* b = &buffer.byte0000)
                {
                    return NativeString.Equals(b, LengthInBytes, &other.buffer.byte0000, other.LengthInBytes);
                }
            }
        }

        public override bool Equals(object obj)
        {
            if (ReferenceEquals(null, obj)) return false;
            return obj is NativeString128 other && Equals(other);
        }
    }

    [StructLayout(LayoutKind.Explicit, Size=510)]
    public struct Bytes510
    {
        [FieldOffset(0)] public byte byte0000;            
        [FieldOffset(1)] public byte byte0001;            
        [FieldOffset(2)] public byte byte0002;            
        [FieldOffset(3)] public byte byte0003;            
        [FieldOffset(4)] public byte byte0004;            
        [FieldOffset(5)] public byte byte0005;            
        [FieldOffset(6)] public byte byte0006;            
        [FieldOffset(7)] public byte byte0007;            
        [FieldOffset(8)] public byte byte0008;            
        [FieldOffset(9)] public byte byte0009;            
        [FieldOffset(10)] public byte byte0010;            
        [FieldOffset(11)] public byte byte0011;            
        [FieldOffset(12)] public byte byte0012;            
        [FieldOffset(13)] public byte byte0013;            
        [FieldOffset(14)] public byte byte0014;            
        [FieldOffset(15)] public byte byte0015;            
        [FieldOffset(16)] public byte byte0016;            
        [FieldOffset(17)] public byte byte0017;            
        [FieldOffset(18)] public byte byte0018;            
        [FieldOffset(19)] public byte byte0019;            
        [FieldOffset(20)] public byte byte0020;            
        [FieldOffset(21)] public byte byte0021;            
        [FieldOffset(22)] public byte byte0022;            
        [FieldOffset(23)] public byte byte0023;            
        [FieldOffset(24)] public byte byte0024;            
        [FieldOffset(25)] public byte byte0025;            
        [FieldOffset(26)] public byte byte0026;            
        [FieldOffset(27)] public byte byte0027;            
        [FieldOffset(28)] public byte byte0028;            
        [FieldOffset(29)] public byte byte0029;            
        [FieldOffset(30)] public byte byte0030;            
        [FieldOffset(31)] public byte byte0031;            
        [FieldOffset(32)] public byte byte0032;            
        [FieldOffset(33)] public byte byte0033;            
        [FieldOffset(34)] public byte byte0034;            
        [FieldOffset(35)] public byte byte0035;            
        [FieldOffset(36)] public byte byte0036;            
        [FieldOffset(37)] public byte byte0037;            
        [FieldOffset(38)] public byte byte0038;            
        [FieldOffset(39)] public byte byte0039;            
        [FieldOffset(40)] public byte byte0040;            
        [FieldOffset(41)] public byte byte0041;            
        [FieldOffset(42)] public byte byte0042;            
        [FieldOffset(43)] public byte byte0043;            
        [FieldOffset(44)] public byte byte0044;            
        [FieldOffset(45)] public byte byte0045;            
        [FieldOffset(46)] public byte byte0046;            
        [FieldOffset(47)] public byte byte0047;            
        [FieldOffset(48)] public byte byte0048;            
        [FieldOffset(49)] public byte byte0049;            
        [FieldOffset(50)] public byte byte0050;            
        [FieldOffset(51)] public byte byte0051;            
        [FieldOffset(52)] public byte byte0052;            
        [FieldOffset(53)] public byte byte0053;            
        [FieldOffset(54)] public byte byte0054;            
        [FieldOffset(55)] public byte byte0055;            
        [FieldOffset(56)] public byte byte0056;            
        [FieldOffset(57)] public byte byte0057;            
        [FieldOffset(58)] public byte byte0058;            
        [FieldOffset(59)] public byte byte0059;            
        [FieldOffset(60)] public byte byte0060;            
        [FieldOffset(61)] public byte byte0061;            
        [FieldOffset(62)] public byte byte0062;            
        [FieldOffset(63)] public byte byte0063;            
        [FieldOffset(64)] public byte byte0064;            
        [FieldOffset(65)] public byte byte0065;            
        [FieldOffset(66)] public byte byte0066;            
        [FieldOffset(67)] public byte byte0067;            
        [FieldOffset(68)] public byte byte0068;            
        [FieldOffset(69)] public byte byte0069;            
        [FieldOffset(70)] public byte byte0070;            
        [FieldOffset(71)] public byte byte0071;            
        [FieldOffset(72)] public byte byte0072;            
        [FieldOffset(73)] public byte byte0073;            
        [FieldOffset(74)] public byte byte0074;            
        [FieldOffset(75)] public byte byte0075;            
        [FieldOffset(76)] public byte byte0076;            
        [FieldOffset(77)] public byte byte0077;            
        [FieldOffset(78)] public byte byte0078;            
        [FieldOffset(79)] public byte byte0079;            
        [FieldOffset(80)] public byte byte0080;            
        [FieldOffset(81)] public byte byte0081;            
        [FieldOffset(82)] public byte byte0082;            
        [FieldOffset(83)] public byte byte0083;            
        [FieldOffset(84)] public byte byte0084;            
        [FieldOffset(85)] public byte byte0085;            
        [FieldOffset(86)] public byte byte0086;            
        [FieldOffset(87)] public byte byte0087;            
        [FieldOffset(88)] public byte byte0088;            
        [FieldOffset(89)] public byte byte0089;            
        [FieldOffset(90)] public byte byte0090;            
        [FieldOffset(91)] public byte byte0091;            
        [FieldOffset(92)] public byte byte0092;            
        [FieldOffset(93)] public byte byte0093;            
        [FieldOffset(94)] public byte byte0094;            
        [FieldOffset(95)] public byte byte0095;            
        [FieldOffset(96)] public byte byte0096;            
        [FieldOffset(97)] public byte byte0097;            
        [FieldOffset(98)] public byte byte0098;            
        [FieldOffset(99)] public byte byte0099;            
        [FieldOffset(100)] public byte byte0100;            
        [FieldOffset(101)] public byte byte0101;            
        [FieldOffset(102)] public byte byte0102;            
        [FieldOffset(103)] public byte byte0103;            
        [FieldOffset(104)] public byte byte0104;            
        [FieldOffset(105)] public byte byte0105;            
        [FieldOffset(106)] public byte byte0106;            
        [FieldOffset(107)] public byte byte0107;            
        [FieldOffset(108)] public byte byte0108;            
        [FieldOffset(109)] public byte byte0109;            
        [FieldOffset(110)] public byte byte0110;            
        [FieldOffset(111)] public byte byte0111;            
        [FieldOffset(112)] public byte byte0112;            
        [FieldOffset(113)] public byte byte0113;            
        [FieldOffset(114)] public byte byte0114;            
        [FieldOffset(115)] public byte byte0115;            
        [FieldOffset(116)] public byte byte0116;            
        [FieldOffset(117)] public byte byte0117;            
        [FieldOffset(118)] public byte byte0118;            
        [FieldOffset(119)] public byte byte0119;            
        [FieldOffset(120)] public byte byte0120;            
        [FieldOffset(121)] public byte byte0121;            
        [FieldOffset(122)] public byte byte0122;            
        [FieldOffset(123)] public byte byte0123;            
        [FieldOffset(124)] public byte byte0124;            
        [FieldOffset(125)] public byte byte0125;            
        [FieldOffset(126)] public byte byte0126;            
        [FieldOffset(127)] public byte byte0127;            
        [FieldOffset(128)] public byte byte0128;            
        [FieldOffset(129)] public byte byte0129;            
        [FieldOffset(130)] public byte byte0130;            
        [FieldOffset(131)] public byte byte0131;            
        [FieldOffset(132)] public byte byte0132;            
        [FieldOffset(133)] public byte byte0133;            
        [FieldOffset(134)] public byte byte0134;            
        [FieldOffset(135)] public byte byte0135;            
        [FieldOffset(136)] public byte byte0136;            
        [FieldOffset(137)] public byte byte0137;            
        [FieldOffset(138)] public byte byte0138;            
        [FieldOffset(139)] public byte byte0139;            
        [FieldOffset(140)] public byte byte0140;            
        [FieldOffset(141)] public byte byte0141;            
        [FieldOffset(142)] public byte byte0142;            
        [FieldOffset(143)] public byte byte0143;            
        [FieldOffset(144)] public byte byte0144;            
        [FieldOffset(145)] public byte byte0145;            
        [FieldOffset(146)] public byte byte0146;            
        [FieldOffset(147)] public byte byte0147;            
        [FieldOffset(148)] public byte byte0148;            
        [FieldOffset(149)] public byte byte0149;            
        [FieldOffset(150)] public byte byte0150;            
        [FieldOffset(151)] public byte byte0151;            
        [FieldOffset(152)] public byte byte0152;            
        [FieldOffset(153)] public byte byte0153;            
        [FieldOffset(154)] public byte byte0154;            
        [FieldOffset(155)] public byte byte0155;            
        [FieldOffset(156)] public byte byte0156;            
        [FieldOffset(157)] public byte byte0157;            
        [FieldOffset(158)] public byte byte0158;            
        [FieldOffset(159)] public byte byte0159;            
        [FieldOffset(160)] public byte byte0160;            
        [FieldOffset(161)] public byte byte0161;            
        [FieldOffset(162)] public byte byte0162;            
        [FieldOffset(163)] public byte byte0163;            
        [FieldOffset(164)] public byte byte0164;            
        [FieldOffset(165)] public byte byte0165;            
        [FieldOffset(166)] public byte byte0166;            
        [FieldOffset(167)] public byte byte0167;            
        [FieldOffset(168)] public byte byte0168;            
        [FieldOffset(169)] public byte byte0169;            
        [FieldOffset(170)] public byte byte0170;            
        [FieldOffset(171)] public byte byte0171;            
        [FieldOffset(172)] public byte byte0172;            
        [FieldOffset(173)] public byte byte0173;            
        [FieldOffset(174)] public byte byte0174;            
        [FieldOffset(175)] public byte byte0175;            
        [FieldOffset(176)] public byte byte0176;            
        [FieldOffset(177)] public byte byte0177;            
        [FieldOffset(178)] public byte byte0178;            
        [FieldOffset(179)] public byte byte0179;            
        [FieldOffset(180)] public byte byte0180;            
        [FieldOffset(181)] public byte byte0181;            
        [FieldOffset(182)] public byte byte0182;            
        [FieldOffset(183)] public byte byte0183;            
        [FieldOffset(184)] public byte byte0184;            
        [FieldOffset(185)] public byte byte0185;            
        [FieldOffset(186)] public byte byte0186;            
        [FieldOffset(187)] public byte byte0187;            
        [FieldOffset(188)] public byte byte0188;            
        [FieldOffset(189)] public byte byte0189;            
        [FieldOffset(190)] public byte byte0190;            
        [FieldOffset(191)] public byte byte0191;            
        [FieldOffset(192)] public byte byte0192;            
        [FieldOffset(193)] public byte byte0193;            
        [FieldOffset(194)] public byte byte0194;            
        [FieldOffset(195)] public byte byte0195;            
        [FieldOffset(196)] public byte byte0196;            
        [FieldOffset(197)] public byte byte0197;            
        [FieldOffset(198)] public byte byte0198;            
        [FieldOffset(199)] public byte byte0199;            
        [FieldOffset(200)] public byte byte0200;            
        [FieldOffset(201)] public byte byte0201;            
        [FieldOffset(202)] public byte byte0202;            
        [FieldOffset(203)] public byte byte0203;            
        [FieldOffset(204)] public byte byte0204;            
        [FieldOffset(205)] public byte byte0205;            
        [FieldOffset(206)] public byte byte0206;            
        [FieldOffset(207)] public byte byte0207;            
        [FieldOffset(208)] public byte byte0208;            
        [FieldOffset(209)] public byte byte0209;            
        [FieldOffset(210)] public byte byte0210;            
        [FieldOffset(211)] public byte byte0211;            
        [FieldOffset(212)] public byte byte0212;            
        [FieldOffset(213)] public byte byte0213;            
        [FieldOffset(214)] public byte byte0214;            
        [FieldOffset(215)] public byte byte0215;            
        [FieldOffset(216)] public byte byte0216;            
        [FieldOffset(217)] public byte byte0217;            
        [FieldOffset(218)] public byte byte0218;            
        [FieldOffset(219)] public byte byte0219;            
        [FieldOffset(220)] public byte byte0220;            
        [FieldOffset(221)] public byte byte0221;            
        [FieldOffset(222)] public byte byte0222;            
        [FieldOffset(223)] public byte byte0223;            
        [FieldOffset(224)] public byte byte0224;            
        [FieldOffset(225)] public byte byte0225;            
        [FieldOffset(226)] public byte byte0226;            
        [FieldOffset(227)] public byte byte0227;            
        [FieldOffset(228)] public byte byte0228;            
        [FieldOffset(229)] public byte byte0229;            
        [FieldOffset(230)] public byte byte0230;            
        [FieldOffset(231)] public byte byte0231;            
        [FieldOffset(232)] public byte byte0232;            
        [FieldOffset(233)] public byte byte0233;            
        [FieldOffset(234)] public byte byte0234;            
        [FieldOffset(235)] public byte byte0235;            
        [FieldOffset(236)] public byte byte0236;            
        [FieldOffset(237)] public byte byte0237;            
        [FieldOffset(238)] public byte byte0238;            
        [FieldOffset(239)] public byte byte0239;            
        [FieldOffset(240)] public byte byte0240;            
        [FieldOffset(241)] public byte byte0241;            
        [FieldOffset(242)] public byte byte0242;            
        [FieldOffset(243)] public byte byte0243;            
        [FieldOffset(244)] public byte byte0244;            
        [FieldOffset(245)] public byte byte0245;            
        [FieldOffset(246)] public byte byte0246;            
        [FieldOffset(247)] public byte byte0247;            
        [FieldOffset(248)] public byte byte0248;            
        [FieldOffset(249)] public byte byte0249;            
        [FieldOffset(250)] public byte byte0250;            
        [FieldOffset(251)] public byte byte0251;            
        [FieldOffset(252)] public byte byte0252;            
        [FieldOffset(253)] public byte byte0253;            
        [FieldOffset(254)] public byte byte0254;            
        [FieldOffset(255)] public byte byte0255;            
        [FieldOffset(256)] public byte byte0256;            
        [FieldOffset(257)] public byte byte0257;            
        [FieldOffset(258)] public byte byte0258;            
        [FieldOffset(259)] public byte byte0259;            
        [FieldOffset(260)] public byte byte0260;            
        [FieldOffset(261)] public byte byte0261;            
        [FieldOffset(262)] public byte byte0262;            
        [FieldOffset(263)] public byte byte0263;            
        [FieldOffset(264)] public byte byte0264;            
        [FieldOffset(265)] public byte byte0265;            
        [FieldOffset(266)] public byte byte0266;            
        [FieldOffset(267)] public byte byte0267;            
        [FieldOffset(268)] public byte byte0268;            
        [FieldOffset(269)] public byte byte0269;            
        [FieldOffset(270)] public byte byte0270;            
        [FieldOffset(271)] public byte byte0271;            
        [FieldOffset(272)] public byte byte0272;            
        [FieldOffset(273)] public byte byte0273;            
        [FieldOffset(274)] public byte byte0274;            
        [FieldOffset(275)] public byte byte0275;            
        [FieldOffset(276)] public byte byte0276;            
        [FieldOffset(277)] public byte byte0277;            
        [FieldOffset(278)] public byte byte0278;            
        [FieldOffset(279)] public byte byte0279;            
        [FieldOffset(280)] public byte byte0280;            
        [FieldOffset(281)] public byte byte0281;            
        [FieldOffset(282)] public byte byte0282;            
        [FieldOffset(283)] public byte byte0283;            
        [FieldOffset(284)] public byte byte0284;            
        [FieldOffset(285)] public byte byte0285;            
        [FieldOffset(286)] public byte byte0286;            
        [FieldOffset(287)] public byte byte0287;            
        [FieldOffset(288)] public byte byte0288;            
        [FieldOffset(289)] public byte byte0289;            
        [FieldOffset(290)] public byte byte0290;            
        [FieldOffset(291)] public byte byte0291;            
        [FieldOffset(292)] public byte byte0292;            
        [FieldOffset(293)] public byte byte0293;            
        [FieldOffset(294)] public byte byte0294;            
        [FieldOffset(295)] public byte byte0295;            
        [FieldOffset(296)] public byte byte0296;            
        [FieldOffset(297)] public byte byte0297;            
        [FieldOffset(298)] public byte byte0298;            
        [FieldOffset(299)] public byte byte0299;            
        [FieldOffset(300)] public byte byte0300;            
        [FieldOffset(301)] public byte byte0301;            
        [FieldOffset(302)] public byte byte0302;            
        [FieldOffset(303)] public byte byte0303;            
        [FieldOffset(304)] public byte byte0304;            
        [FieldOffset(305)] public byte byte0305;            
        [FieldOffset(306)] public byte byte0306;            
        [FieldOffset(307)] public byte byte0307;            
        [FieldOffset(308)] public byte byte0308;            
        [FieldOffset(309)] public byte byte0309;            
        [FieldOffset(310)] public byte byte0310;            
        [FieldOffset(311)] public byte byte0311;            
        [FieldOffset(312)] public byte byte0312;            
        [FieldOffset(313)] public byte byte0313;            
        [FieldOffset(314)] public byte byte0314;            
        [FieldOffset(315)] public byte byte0315;            
        [FieldOffset(316)] public byte byte0316;            
        [FieldOffset(317)] public byte byte0317;            
        [FieldOffset(318)] public byte byte0318;            
        [FieldOffset(319)] public byte byte0319;            
        [FieldOffset(320)] public byte byte0320;            
        [FieldOffset(321)] public byte byte0321;            
        [FieldOffset(322)] public byte byte0322;            
        [FieldOffset(323)] public byte byte0323;            
        [FieldOffset(324)] public byte byte0324;            
        [FieldOffset(325)] public byte byte0325;            
        [FieldOffset(326)] public byte byte0326;            
        [FieldOffset(327)] public byte byte0327;            
        [FieldOffset(328)] public byte byte0328;            
        [FieldOffset(329)] public byte byte0329;            
        [FieldOffset(330)] public byte byte0330;            
        [FieldOffset(331)] public byte byte0331;            
        [FieldOffset(332)] public byte byte0332;            
        [FieldOffset(333)] public byte byte0333;            
        [FieldOffset(334)] public byte byte0334;            
        [FieldOffset(335)] public byte byte0335;            
        [FieldOffset(336)] public byte byte0336;            
        [FieldOffset(337)] public byte byte0337;            
        [FieldOffset(338)] public byte byte0338;            
        [FieldOffset(339)] public byte byte0339;            
        [FieldOffset(340)] public byte byte0340;            
        [FieldOffset(341)] public byte byte0341;            
        [FieldOffset(342)] public byte byte0342;            
        [FieldOffset(343)] public byte byte0343;            
        [FieldOffset(344)] public byte byte0344;            
        [FieldOffset(345)] public byte byte0345;            
        [FieldOffset(346)] public byte byte0346;            
        [FieldOffset(347)] public byte byte0347;            
        [FieldOffset(348)] public byte byte0348;            
        [FieldOffset(349)] public byte byte0349;            
        [FieldOffset(350)] public byte byte0350;            
        [FieldOffset(351)] public byte byte0351;            
        [FieldOffset(352)] public byte byte0352;            
        [FieldOffset(353)] public byte byte0353;            
        [FieldOffset(354)] public byte byte0354;            
        [FieldOffset(355)] public byte byte0355;            
        [FieldOffset(356)] public byte byte0356;            
        [FieldOffset(357)] public byte byte0357;            
        [FieldOffset(358)] public byte byte0358;            
        [FieldOffset(359)] public byte byte0359;            
        [FieldOffset(360)] public byte byte0360;            
        [FieldOffset(361)] public byte byte0361;            
        [FieldOffset(362)] public byte byte0362;            
        [FieldOffset(363)] public byte byte0363;            
        [FieldOffset(364)] public byte byte0364;            
        [FieldOffset(365)] public byte byte0365;            
        [FieldOffset(366)] public byte byte0366;            
        [FieldOffset(367)] public byte byte0367;            
        [FieldOffset(368)] public byte byte0368;            
        [FieldOffset(369)] public byte byte0369;            
        [FieldOffset(370)] public byte byte0370;            
        [FieldOffset(371)] public byte byte0371;            
        [FieldOffset(372)] public byte byte0372;            
        [FieldOffset(373)] public byte byte0373;            
        [FieldOffset(374)] public byte byte0374;            
        [FieldOffset(375)] public byte byte0375;            
        [FieldOffset(376)] public byte byte0376;            
        [FieldOffset(377)] public byte byte0377;            
        [FieldOffset(378)] public byte byte0378;            
        [FieldOffset(379)] public byte byte0379;            
        [FieldOffset(380)] public byte byte0380;            
        [FieldOffset(381)] public byte byte0381;            
        [FieldOffset(382)] public byte byte0382;            
        [FieldOffset(383)] public byte byte0383;            
        [FieldOffset(384)] public byte byte0384;            
        [FieldOffset(385)] public byte byte0385;            
        [FieldOffset(386)] public byte byte0386;            
        [FieldOffset(387)] public byte byte0387;            
        [FieldOffset(388)] public byte byte0388;            
        [FieldOffset(389)] public byte byte0389;            
        [FieldOffset(390)] public byte byte0390;            
        [FieldOffset(391)] public byte byte0391;            
        [FieldOffset(392)] public byte byte0392;            
        [FieldOffset(393)] public byte byte0393;            
        [FieldOffset(394)] public byte byte0394;            
        [FieldOffset(395)] public byte byte0395;            
        [FieldOffset(396)] public byte byte0396;            
        [FieldOffset(397)] public byte byte0397;            
        [FieldOffset(398)] public byte byte0398;            
        [FieldOffset(399)] public byte byte0399;            
        [FieldOffset(400)] public byte byte0400;            
        [FieldOffset(401)] public byte byte0401;            
        [FieldOffset(402)] public byte byte0402;            
        [FieldOffset(403)] public byte byte0403;            
        [FieldOffset(404)] public byte byte0404;            
        [FieldOffset(405)] public byte byte0405;            
        [FieldOffset(406)] public byte byte0406;            
        [FieldOffset(407)] public byte byte0407;            
        [FieldOffset(408)] public byte byte0408;            
        [FieldOffset(409)] public byte byte0409;            
        [FieldOffset(410)] public byte byte0410;            
        [FieldOffset(411)] public byte byte0411;            
        [FieldOffset(412)] public byte byte0412;            
        [FieldOffset(413)] public byte byte0413;            
        [FieldOffset(414)] public byte byte0414;            
        [FieldOffset(415)] public byte byte0415;            
        [FieldOffset(416)] public byte byte0416;            
        [FieldOffset(417)] public byte byte0417;            
        [FieldOffset(418)] public byte byte0418;            
        [FieldOffset(419)] public byte byte0419;            
        [FieldOffset(420)] public byte byte0420;            
        [FieldOffset(421)] public byte byte0421;            
        [FieldOffset(422)] public byte byte0422;            
        [FieldOffset(423)] public byte byte0423;            
        [FieldOffset(424)] public byte byte0424;            
        [FieldOffset(425)] public byte byte0425;            
        [FieldOffset(426)] public byte byte0426;            
        [FieldOffset(427)] public byte byte0427;            
        [FieldOffset(428)] public byte byte0428;            
        [FieldOffset(429)] public byte byte0429;            
        [FieldOffset(430)] public byte byte0430;            
        [FieldOffset(431)] public byte byte0431;            
        [FieldOffset(432)] public byte byte0432;            
        [FieldOffset(433)] public byte byte0433;            
        [FieldOffset(434)] public byte byte0434;            
        [FieldOffset(435)] public byte byte0435;            
        [FieldOffset(436)] public byte byte0436;            
        [FieldOffset(437)] public byte byte0437;            
        [FieldOffset(438)] public byte byte0438;            
        [FieldOffset(439)] public byte byte0439;            
        [FieldOffset(440)] public byte byte0440;            
        [FieldOffset(441)] public byte byte0441;            
        [FieldOffset(442)] public byte byte0442;            
        [FieldOffset(443)] public byte byte0443;            
        [FieldOffset(444)] public byte byte0444;            
        [FieldOffset(445)] public byte byte0445;            
        [FieldOffset(446)] public byte byte0446;            
        [FieldOffset(447)] public byte byte0447;            
        [FieldOffset(448)] public byte byte0448;            
        [FieldOffset(449)] public byte byte0449;            
        [FieldOffset(450)] public byte byte0450;            
        [FieldOffset(451)] public byte byte0451;            
        [FieldOffset(452)] public byte byte0452;            
        [FieldOffset(453)] public byte byte0453;            
        [FieldOffset(454)] public byte byte0454;            
        [FieldOffset(455)] public byte byte0455;            
        [FieldOffset(456)] public byte byte0456;            
        [FieldOffset(457)] public byte byte0457;            
        [FieldOffset(458)] public byte byte0458;            
        [FieldOffset(459)] public byte byte0459;            
        [FieldOffset(460)] public byte byte0460;            
        [FieldOffset(461)] public byte byte0461;            
        [FieldOffset(462)] public byte byte0462;            
        [FieldOffset(463)] public byte byte0463;            
        [FieldOffset(464)] public byte byte0464;            
        [FieldOffset(465)] public byte byte0465;            
        [FieldOffset(466)] public byte byte0466;            
        [FieldOffset(467)] public byte byte0467;            
        [FieldOffset(468)] public byte byte0468;            
        [FieldOffset(469)] public byte byte0469;            
        [FieldOffset(470)] public byte byte0470;            
        [FieldOffset(471)] public byte byte0471;            
        [FieldOffset(472)] public byte byte0472;            
        [FieldOffset(473)] public byte byte0473;            
        [FieldOffset(474)] public byte byte0474;            
        [FieldOffset(475)] public byte byte0475;            
        [FieldOffset(476)] public byte byte0476;            
        [FieldOffset(477)] public byte byte0477;            
        [FieldOffset(478)] public byte byte0478;            
        [FieldOffset(479)] public byte byte0479;            
        [FieldOffset(480)] public byte byte0480;            
        [FieldOffset(481)] public byte byte0481;            
        [FieldOffset(482)] public byte byte0482;            
        [FieldOffset(483)] public byte byte0483;            
        [FieldOffset(484)] public byte byte0484;            
        [FieldOffset(485)] public byte byte0485;            
        [FieldOffset(486)] public byte byte0486;            
        [FieldOffset(487)] public byte byte0487;            
        [FieldOffset(488)] public byte byte0488;            
        [FieldOffset(489)] public byte byte0489;            
        [FieldOffset(490)] public byte byte0490;            
        [FieldOffset(491)] public byte byte0491;            
        [FieldOffset(492)] public byte byte0492;            
        [FieldOffset(493)] public byte byte0493;            
        [FieldOffset(494)] public byte byte0494;            
        [FieldOffset(495)] public byte byte0495;            
        [FieldOffset(496)] public byte byte0496;            
        [FieldOffset(497)] public byte byte0497;            
        [FieldOffset(498)] public byte byte0498;            
        [FieldOffset(499)] public byte byte0499;            
        [FieldOffset(500)] public byte byte0500;            
        [FieldOffset(501)] public byte byte0501;            
        [FieldOffset(502)] public byte byte0502;            
        [FieldOffset(503)] public byte byte0503;            
        [FieldOffset(504)] public byte byte0504;            
        [FieldOffset(505)] public byte byte0505;            
        [FieldOffset(506)] public byte byte0506;            
        [FieldOffset(507)] public byte byte0507;            
        [FieldOffset(508)] public byte byte0508;            
        [FieldOffset(509)] public byte byte0509;            
    }
    
    [StructLayout(LayoutKind.Explicit, Size=512)]
    public struct NativeString512 : IComparable<NativeString512>, IEquatable<NativeString512>
    {
        public const int MaxLength = 510;
        [FieldOffset(0)] public ushort LengthInBytes;
        [FieldOffset(2)] public Bytes510 buffer;        
                
        public ParseError Parse(ref int offset, ref int output)
        {
            unsafe
            {
                fixed (byte* b = &buffer.byte0000)
                {
                    NativeString temp = new NativeString{data = b, Length = LengthInBytes, Capacity = MaxLength};
                    return temp.Parse(ref offset, ref output);                    
                }
            }
        }
        public ParseError Parse(ref int offset, ref float output, char decimalSeparator = '.')
        {
            unsafe
            {
                fixed (byte* b = &buffer.byte0000)
                {
                    NativeString temp = new NativeString {data = b, Length = LengthInBytes, Capacity = MaxLength};
                    return temp.Parse(ref offset, ref output, decimalSeparator);
                }
            }
        }

        public FormatError Format(float input, char decimalSeparator = '.')
        {
            unsafe
            {
                fixed (byte* b = &buffer.byte0000)
                {
                    NativeString temp = new NativeString {data = b, Length = LengthInBytes, Capacity = MaxLength};
                    var error = temp.Format(input, decimalSeparator);
                    LengthInBytes = (ushort)temp.Length;
                    return error;
                }
            }
        }

        public unsafe CopyError CopyFrom(NativeString512 source)
        {
            fixed (byte* b = &buffer.byte0000)
                return source.CopyTo(b, out LengthInBytes, MaxLength);
        }
        
        
        public unsafe CopyError CopyFrom(NativeString32 source)
        {
            fixed (byte* b = &buffer.byte0000)
                return source.CopyTo(b, out LengthInBytes, MaxLength);
        }

        public NativeString512(ref NativeString32 source)
        {
            LengthInBytes = 0;
            buffer = new Bytes510{};
            var error = CopyFrom(source);
            if(error != CopyError.None)
                throw new ArgumentException($"NativeString512: {error} while copying \"{source}\"");             
        }
        
        
        public unsafe CopyError CopyFrom(NativeString64 source)
        {
            fixed (byte* b = &buffer.byte0000)
                return source.CopyTo(b, out LengthInBytes, MaxLength);
        }

        public NativeString512(ref NativeString64 source)
        {
            LengthInBytes = 0;
            buffer = new Bytes510{};
            var error = CopyFrom(source);
            if(error != CopyError.None)
                throw new ArgumentException($"NativeString512: {error} while copying \"{source}\"");             
        }
        
        
        public unsafe CopyError CopyFrom(NativeString128 source)
        {
            fixed (byte* b = &buffer.byte0000)
                return source.CopyTo(b, out LengthInBytes, MaxLength);
        }

        public NativeString512(ref NativeString128 source)
        {
            LengthInBytes = 0;
            buffer = new Bytes510{};
            var error = CopyFrom(source);
            if(error != CopyError.None)
                throw new ArgumentException($"NativeString512: {error} while copying \"{source}\"");             
        }
        
        
        public unsafe CopyError CopyFrom(NativeString4096 source)
        {
            fixed (byte* b = &buffer.byte0000)
                return source.CopyTo(b, out LengthInBytes, MaxLength);
        }

        public NativeString512(ref NativeString4096 source)
        {
            LengthInBytes = 0;
            buffer = new Bytes510{};
            var error = CopyFrom(source);
            if(error != CopyError.None)
                throw new ArgumentException($"NativeString512: {error} while copying \"{source}\"");             
        }
        
        
        public unsafe CopyError CopyFrom(char* s, ushort length)
        {
            fixed (byte* b = &buffer.byte0000)
                return NativeString.Copy(b, out LengthInBytes, MaxLength, s, length);
        }
        public unsafe CopyError CopyFrom(String source)
        {
            if (string.IsNullOrEmpty(source))
            {
                LengthInBytes = 0;
                return CopyError.None;
            }        
            fixed(char *c = source)
                return CopyFrom(c, (ushort)source.Length);
        }        
        public unsafe CopyError CopyTo(byte* d, out ushort length, ushort maxLength)
        {
            fixed (byte* b = &buffer.byte0000)
                return NativeString.Copy(d, out length, maxLength, b, LengthInBytes);
        }
        public unsafe CopyError CopyTo(char* d, out ushort length, ushort maxLength)
        {
            fixed (byte* b = &buffer.byte0000)
                return NativeString.Copy(d, out length, maxLength, b, LengthInBytes);
        }


        public NativeString512(String source)
        {
            LengthInBytes = 0;
            buffer = new Bytes510{};
            var error = CopyFrom(source);
            if(error != CopyError.None)
                throw new ArgumentException($"NativeString512: {error} while copying \"{source}\"");             
        }
                
        public static implicit operator NativeString512(string b) => new NativeString512(b);        
                
        public override String ToString()
        {
            unsafe
            {
                fixed (byte* b = &buffer.byte0000)
                {
                    return new NativeString {data = b, Length = LengthInBytes, Capacity = MaxLength}.ToString();
                }
            }
        }
        public override int GetHashCode()
        {
            unsafe
            {
                fixed (byte* b = &buffer.byte0000)
                {
                    return new NativeString {data = b, Length = LengthInBytes, Capacity = MaxLength}.GetHashCode();
                }
            }
        }

        
        public int CompareTo(NativeString512 other)
        {
            unsafe
            {
                fixed (byte* b = &buffer.byte0000)
                {
                    return NativeString.CompareTo(b, LengthInBytes, &other.buffer.byte0000, other.LengthInBytes);
                }
            }
        }

        public bool Equals(NativeString512 other)
        {
            unsafe
            {
                fixed (byte* b = &buffer.byte0000)
                {
                    return NativeString.Equals(b, LengthInBytes, &other.buffer.byte0000, other.LengthInBytes);
                }
            }
        }

        public override bool Equals(object obj)
        {
            if (ReferenceEquals(null, obj)) return false;
            return obj is NativeString512 other && Equals(other);
        }
    }

    [StructLayout(LayoutKind.Explicit, Size=4094)]
    public struct Bytes4094
    {
        [FieldOffset(0)] public byte byte0000;            
        [FieldOffset(1)] public byte byte0001;            
        [FieldOffset(2)] public byte byte0002;            
        [FieldOffset(3)] public byte byte0003;            
        [FieldOffset(4)] public byte byte0004;            
        [FieldOffset(5)] public byte byte0005;            
        [FieldOffset(6)] public byte byte0006;            
        [FieldOffset(7)] public byte byte0007;            
        [FieldOffset(8)] public byte byte0008;            
        [FieldOffset(9)] public byte byte0009;            
        [FieldOffset(10)] public byte byte0010;            
        [FieldOffset(11)] public byte byte0011;            
        [FieldOffset(12)] public byte byte0012;            
        [FieldOffset(13)] public byte byte0013;            
        [FieldOffset(14)] public byte byte0014;            
        [FieldOffset(15)] public byte byte0015;            
        [FieldOffset(16)] public byte byte0016;            
        [FieldOffset(17)] public byte byte0017;            
        [FieldOffset(18)] public byte byte0018;            
        [FieldOffset(19)] public byte byte0019;            
        [FieldOffset(20)] public byte byte0020;            
        [FieldOffset(21)] public byte byte0021;            
        [FieldOffset(22)] public byte byte0022;            
        [FieldOffset(23)] public byte byte0023;            
        [FieldOffset(24)] public byte byte0024;            
        [FieldOffset(25)] public byte byte0025;            
        [FieldOffset(26)] public byte byte0026;            
        [FieldOffset(27)] public byte byte0027;            
        [FieldOffset(28)] public byte byte0028;            
        [FieldOffset(29)] public byte byte0029;            
        [FieldOffset(30)] public byte byte0030;            
        [FieldOffset(31)] public byte byte0031;            
        [FieldOffset(32)] public byte byte0032;            
        [FieldOffset(33)] public byte byte0033;            
        [FieldOffset(34)] public byte byte0034;            
        [FieldOffset(35)] public byte byte0035;            
        [FieldOffset(36)] public byte byte0036;            
        [FieldOffset(37)] public byte byte0037;            
        [FieldOffset(38)] public byte byte0038;            
        [FieldOffset(39)] public byte byte0039;            
        [FieldOffset(40)] public byte byte0040;            
        [FieldOffset(41)] public byte byte0041;            
        [FieldOffset(42)] public byte byte0042;            
        [FieldOffset(43)] public byte byte0043;            
        [FieldOffset(44)] public byte byte0044;            
        [FieldOffset(45)] public byte byte0045;            
        [FieldOffset(46)] public byte byte0046;            
        [FieldOffset(47)] public byte byte0047;            
        [FieldOffset(48)] public byte byte0048;            
        [FieldOffset(49)] public byte byte0049;            
        [FieldOffset(50)] public byte byte0050;            
        [FieldOffset(51)] public byte byte0051;            
        [FieldOffset(52)] public byte byte0052;            
        [FieldOffset(53)] public byte byte0053;            
        [FieldOffset(54)] public byte byte0054;            
        [FieldOffset(55)] public byte byte0055;            
        [FieldOffset(56)] public byte byte0056;            
        [FieldOffset(57)] public byte byte0057;            
        [FieldOffset(58)] public byte byte0058;            
        [FieldOffset(59)] public byte byte0059;            
        [FieldOffset(60)] public byte byte0060;            
        [FieldOffset(61)] public byte byte0061;            
        [FieldOffset(62)] public byte byte0062;            
        [FieldOffset(63)] public byte byte0063;            
        [FieldOffset(64)] public byte byte0064;            
        [FieldOffset(65)] public byte byte0065;            
        [FieldOffset(66)] public byte byte0066;            
        [FieldOffset(67)] public byte byte0067;            
        [FieldOffset(68)] public byte byte0068;            
        [FieldOffset(69)] public byte byte0069;            
        [FieldOffset(70)] public byte byte0070;            
        [FieldOffset(71)] public byte byte0071;            
        [FieldOffset(72)] public byte byte0072;            
        [FieldOffset(73)] public byte byte0073;            
        [FieldOffset(74)] public byte byte0074;            
        [FieldOffset(75)] public byte byte0075;            
        [FieldOffset(76)] public byte byte0076;            
        [FieldOffset(77)] public byte byte0077;            
        [FieldOffset(78)] public byte byte0078;            
        [FieldOffset(79)] public byte byte0079;            
        [FieldOffset(80)] public byte byte0080;            
        [FieldOffset(81)] public byte byte0081;            
        [FieldOffset(82)] public byte byte0082;            
        [FieldOffset(83)] public byte byte0083;            
        [FieldOffset(84)] public byte byte0084;            
        [FieldOffset(85)] public byte byte0085;            
        [FieldOffset(86)] public byte byte0086;            
        [FieldOffset(87)] public byte byte0087;            
        [FieldOffset(88)] public byte byte0088;            
        [FieldOffset(89)] public byte byte0089;            
        [FieldOffset(90)] public byte byte0090;            
        [FieldOffset(91)] public byte byte0091;            
        [FieldOffset(92)] public byte byte0092;            
        [FieldOffset(93)] public byte byte0093;            
        [FieldOffset(94)] public byte byte0094;            
        [FieldOffset(95)] public byte byte0095;            
        [FieldOffset(96)] public byte byte0096;            
        [FieldOffset(97)] public byte byte0097;            
        [FieldOffset(98)] public byte byte0098;            
        [FieldOffset(99)] public byte byte0099;            
        [FieldOffset(100)] public byte byte0100;            
        [FieldOffset(101)] public byte byte0101;            
        [FieldOffset(102)] public byte byte0102;            
        [FieldOffset(103)] public byte byte0103;            
        [FieldOffset(104)] public byte byte0104;            
        [FieldOffset(105)] public byte byte0105;            
        [FieldOffset(106)] public byte byte0106;            
        [FieldOffset(107)] public byte byte0107;            
        [FieldOffset(108)] public byte byte0108;            
        [FieldOffset(109)] public byte byte0109;            
        [FieldOffset(110)] public byte byte0110;            
        [FieldOffset(111)] public byte byte0111;            
        [FieldOffset(112)] public byte byte0112;            
        [FieldOffset(113)] public byte byte0113;            
        [FieldOffset(114)] public byte byte0114;            
        [FieldOffset(115)] public byte byte0115;            
        [FieldOffset(116)] public byte byte0116;            
        [FieldOffset(117)] public byte byte0117;            
        [FieldOffset(118)] public byte byte0118;            
        [FieldOffset(119)] public byte byte0119;            
        [FieldOffset(120)] public byte byte0120;            
        [FieldOffset(121)] public byte byte0121;            
        [FieldOffset(122)] public byte byte0122;            
        [FieldOffset(123)] public byte byte0123;            
        [FieldOffset(124)] public byte byte0124;            
        [FieldOffset(125)] public byte byte0125;            
        [FieldOffset(126)] public byte byte0126;            
        [FieldOffset(127)] public byte byte0127;            
        [FieldOffset(128)] public byte byte0128;            
        [FieldOffset(129)] public byte byte0129;            
        [FieldOffset(130)] public byte byte0130;            
        [FieldOffset(131)] public byte byte0131;            
        [FieldOffset(132)] public byte byte0132;            
        [FieldOffset(133)] public byte byte0133;            
        [FieldOffset(134)] public byte byte0134;            
        [FieldOffset(135)] public byte byte0135;            
        [FieldOffset(136)] public byte byte0136;            
        [FieldOffset(137)] public byte byte0137;            
        [FieldOffset(138)] public byte byte0138;            
        [FieldOffset(139)] public byte byte0139;            
        [FieldOffset(140)] public byte byte0140;            
        [FieldOffset(141)] public byte byte0141;            
        [FieldOffset(142)] public byte byte0142;            
        [FieldOffset(143)] public byte byte0143;            
        [FieldOffset(144)] public byte byte0144;            
        [FieldOffset(145)] public byte byte0145;            
        [FieldOffset(146)] public byte byte0146;            
        [FieldOffset(147)] public byte byte0147;            
        [FieldOffset(148)] public byte byte0148;            
        [FieldOffset(149)] public byte byte0149;            
        [FieldOffset(150)] public byte byte0150;            
        [FieldOffset(151)] public byte byte0151;            
        [FieldOffset(152)] public byte byte0152;            
        [FieldOffset(153)] public byte byte0153;            
        [FieldOffset(154)] public byte byte0154;            
        [FieldOffset(155)] public byte byte0155;            
        [FieldOffset(156)] public byte byte0156;            
        [FieldOffset(157)] public byte byte0157;            
        [FieldOffset(158)] public byte byte0158;            
        [FieldOffset(159)] public byte byte0159;            
        [FieldOffset(160)] public byte byte0160;            
        [FieldOffset(161)] public byte byte0161;            
        [FieldOffset(162)] public byte byte0162;            
        [FieldOffset(163)] public byte byte0163;            
        [FieldOffset(164)] public byte byte0164;            
        [FieldOffset(165)] public byte byte0165;            
        [FieldOffset(166)] public byte byte0166;            
        [FieldOffset(167)] public byte byte0167;            
        [FieldOffset(168)] public byte byte0168;            
        [FieldOffset(169)] public byte byte0169;            
        [FieldOffset(170)] public byte byte0170;            
        [FieldOffset(171)] public byte byte0171;            
        [FieldOffset(172)] public byte byte0172;            
        [FieldOffset(173)] public byte byte0173;            
        [FieldOffset(174)] public byte byte0174;            
        [FieldOffset(175)] public byte byte0175;            
        [FieldOffset(176)] public byte byte0176;            
        [FieldOffset(177)] public byte byte0177;            
        [FieldOffset(178)] public byte byte0178;            
        [FieldOffset(179)] public byte byte0179;            
        [FieldOffset(180)] public byte byte0180;            
        [FieldOffset(181)] public byte byte0181;            
        [FieldOffset(182)] public byte byte0182;            
        [FieldOffset(183)] public byte byte0183;            
        [FieldOffset(184)] public byte byte0184;            
        [FieldOffset(185)] public byte byte0185;            
        [FieldOffset(186)] public byte byte0186;            
        [FieldOffset(187)] public byte byte0187;            
        [FieldOffset(188)] public byte byte0188;            
        [FieldOffset(189)] public byte byte0189;            
        [FieldOffset(190)] public byte byte0190;            
        [FieldOffset(191)] public byte byte0191;            
        [FieldOffset(192)] public byte byte0192;            
        [FieldOffset(193)] public byte byte0193;            
        [FieldOffset(194)] public byte byte0194;            
        [FieldOffset(195)] public byte byte0195;            
        [FieldOffset(196)] public byte byte0196;            
        [FieldOffset(197)] public byte byte0197;            
        [FieldOffset(198)] public byte byte0198;            
        [FieldOffset(199)] public byte byte0199;            
        [FieldOffset(200)] public byte byte0200;            
        [FieldOffset(201)] public byte byte0201;            
        [FieldOffset(202)] public byte byte0202;            
        [FieldOffset(203)] public byte byte0203;            
        [FieldOffset(204)] public byte byte0204;            
        [FieldOffset(205)] public byte byte0205;            
        [FieldOffset(206)] public byte byte0206;            
        [FieldOffset(207)] public byte byte0207;            
        [FieldOffset(208)] public byte byte0208;            
        [FieldOffset(209)] public byte byte0209;            
        [FieldOffset(210)] public byte byte0210;            
        [FieldOffset(211)] public byte byte0211;            
        [FieldOffset(212)] public byte byte0212;            
        [FieldOffset(213)] public byte byte0213;            
        [FieldOffset(214)] public byte byte0214;            
        [FieldOffset(215)] public byte byte0215;            
        [FieldOffset(216)] public byte byte0216;            
        [FieldOffset(217)] public byte byte0217;            
        [FieldOffset(218)] public byte byte0218;            
        [FieldOffset(219)] public byte byte0219;            
        [FieldOffset(220)] public byte byte0220;            
        [FieldOffset(221)] public byte byte0221;            
        [FieldOffset(222)] public byte byte0222;            
        [FieldOffset(223)] public byte byte0223;            
        [FieldOffset(224)] public byte byte0224;            
        [FieldOffset(225)] public byte byte0225;            
        [FieldOffset(226)] public byte byte0226;            
        [FieldOffset(227)] public byte byte0227;            
        [FieldOffset(228)] public byte byte0228;            
        [FieldOffset(229)] public byte byte0229;            
        [FieldOffset(230)] public byte byte0230;            
        [FieldOffset(231)] public byte byte0231;            
        [FieldOffset(232)] public byte byte0232;            
        [FieldOffset(233)] public byte byte0233;            
        [FieldOffset(234)] public byte byte0234;            
        [FieldOffset(235)] public byte byte0235;            
        [FieldOffset(236)] public byte byte0236;            
        [FieldOffset(237)] public byte byte0237;            
        [FieldOffset(238)] public byte byte0238;            
        [FieldOffset(239)] public byte byte0239;            
        [FieldOffset(240)] public byte byte0240;            
        [FieldOffset(241)] public byte byte0241;            
        [FieldOffset(242)] public byte byte0242;            
        [FieldOffset(243)] public byte byte0243;            
        [FieldOffset(244)] public byte byte0244;            
        [FieldOffset(245)] public byte byte0245;            
        [FieldOffset(246)] public byte byte0246;            
        [FieldOffset(247)] public byte byte0247;            
        [FieldOffset(248)] public byte byte0248;            
        [FieldOffset(249)] public byte byte0249;            
        [FieldOffset(250)] public byte byte0250;            
        [FieldOffset(251)] public byte byte0251;            
        [FieldOffset(252)] public byte byte0252;            
        [FieldOffset(253)] public byte byte0253;            
        [FieldOffset(254)] public byte byte0254;            
        [FieldOffset(255)] public byte byte0255;            
        [FieldOffset(256)] public byte byte0256;            
        [FieldOffset(257)] public byte byte0257;            
        [FieldOffset(258)] public byte byte0258;            
        [FieldOffset(259)] public byte byte0259;            
        [FieldOffset(260)] public byte byte0260;            
        [FieldOffset(261)] public byte byte0261;            
        [FieldOffset(262)] public byte byte0262;            
        [FieldOffset(263)] public byte byte0263;            
        [FieldOffset(264)] public byte byte0264;            
        [FieldOffset(265)] public byte byte0265;            
        [FieldOffset(266)] public byte byte0266;            
        [FieldOffset(267)] public byte byte0267;            
        [FieldOffset(268)] public byte byte0268;            
        [FieldOffset(269)] public byte byte0269;            
        [FieldOffset(270)] public byte byte0270;            
        [FieldOffset(271)] public byte byte0271;            
        [FieldOffset(272)] public byte byte0272;            
        [FieldOffset(273)] public byte byte0273;            
        [FieldOffset(274)] public byte byte0274;            
        [FieldOffset(275)] public byte byte0275;            
        [FieldOffset(276)] public byte byte0276;            
        [FieldOffset(277)] public byte byte0277;            
        [FieldOffset(278)] public byte byte0278;            
        [FieldOffset(279)] public byte byte0279;            
        [FieldOffset(280)] public byte byte0280;            
        [FieldOffset(281)] public byte byte0281;            
        [FieldOffset(282)] public byte byte0282;            
        [FieldOffset(283)] public byte byte0283;            
        [FieldOffset(284)] public byte byte0284;            
        [FieldOffset(285)] public byte byte0285;            
        [FieldOffset(286)] public byte byte0286;            
        [FieldOffset(287)] public byte byte0287;            
        [FieldOffset(288)] public byte byte0288;            
        [FieldOffset(289)] public byte byte0289;            
        [FieldOffset(290)] public byte byte0290;            
        [FieldOffset(291)] public byte byte0291;            
        [FieldOffset(292)] public byte byte0292;            
        [FieldOffset(293)] public byte byte0293;            
        [FieldOffset(294)] public byte byte0294;            
        [FieldOffset(295)] public byte byte0295;            
        [FieldOffset(296)] public byte byte0296;            
        [FieldOffset(297)] public byte byte0297;            
        [FieldOffset(298)] public byte byte0298;            
        [FieldOffset(299)] public byte byte0299;            
        [FieldOffset(300)] public byte byte0300;            
        [FieldOffset(301)] public byte byte0301;            
        [FieldOffset(302)] public byte byte0302;            
        [FieldOffset(303)] public byte byte0303;            
        [FieldOffset(304)] public byte byte0304;            
        [FieldOffset(305)] public byte byte0305;            
        [FieldOffset(306)] public byte byte0306;            
        [FieldOffset(307)] public byte byte0307;            
        [FieldOffset(308)] public byte byte0308;            
        [FieldOffset(309)] public byte byte0309;            
        [FieldOffset(310)] public byte byte0310;            
        [FieldOffset(311)] public byte byte0311;            
        [FieldOffset(312)] public byte byte0312;            
        [FieldOffset(313)] public byte byte0313;            
        [FieldOffset(314)] public byte byte0314;            
        [FieldOffset(315)] public byte byte0315;            
        [FieldOffset(316)] public byte byte0316;            
        [FieldOffset(317)] public byte byte0317;            
        [FieldOffset(318)] public byte byte0318;            
        [FieldOffset(319)] public byte byte0319;            
        [FieldOffset(320)] public byte byte0320;            
        [FieldOffset(321)] public byte byte0321;            
        [FieldOffset(322)] public byte byte0322;            
        [FieldOffset(323)] public byte byte0323;            
        [FieldOffset(324)] public byte byte0324;            
        [FieldOffset(325)] public byte byte0325;            
        [FieldOffset(326)] public byte byte0326;            
        [FieldOffset(327)] public byte byte0327;            
        [FieldOffset(328)] public byte byte0328;            
        [FieldOffset(329)] public byte byte0329;            
        [FieldOffset(330)] public byte byte0330;            
        [FieldOffset(331)] public byte byte0331;            
        [FieldOffset(332)] public byte byte0332;            
        [FieldOffset(333)] public byte byte0333;            
        [FieldOffset(334)] public byte byte0334;            
        [FieldOffset(335)] public byte byte0335;            
        [FieldOffset(336)] public byte byte0336;            
        [FieldOffset(337)] public byte byte0337;            
        [FieldOffset(338)] public byte byte0338;            
        [FieldOffset(339)] public byte byte0339;            
        [FieldOffset(340)] public byte byte0340;            
        [FieldOffset(341)] public byte byte0341;            
        [FieldOffset(342)] public byte byte0342;            
        [FieldOffset(343)] public byte byte0343;            
        [FieldOffset(344)] public byte byte0344;            
        [FieldOffset(345)] public byte byte0345;            
        [FieldOffset(346)] public byte byte0346;            
        [FieldOffset(347)] public byte byte0347;            
        [FieldOffset(348)] public byte byte0348;            
        [FieldOffset(349)] public byte byte0349;            
        [FieldOffset(350)] public byte byte0350;            
        [FieldOffset(351)] public byte byte0351;            
        [FieldOffset(352)] public byte byte0352;            
        [FieldOffset(353)] public byte byte0353;            
        [FieldOffset(354)] public byte byte0354;            
        [FieldOffset(355)] public byte byte0355;            
        [FieldOffset(356)] public byte byte0356;            
        [FieldOffset(357)] public byte byte0357;            
        [FieldOffset(358)] public byte byte0358;            
        [FieldOffset(359)] public byte byte0359;            
        [FieldOffset(360)] public byte byte0360;            
        [FieldOffset(361)] public byte byte0361;            
        [FieldOffset(362)] public byte byte0362;            
        [FieldOffset(363)] public byte byte0363;            
        [FieldOffset(364)] public byte byte0364;            
        [FieldOffset(365)] public byte byte0365;            
        [FieldOffset(366)] public byte byte0366;            
        [FieldOffset(367)] public byte byte0367;            
        [FieldOffset(368)] public byte byte0368;            
        [FieldOffset(369)] public byte byte0369;            
        [FieldOffset(370)] public byte byte0370;            
        [FieldOffset(371)] public byte byte0371;            
        [FieldOffset(372)] public byte byte0372;            
        [FieldOffset(373)] public byte byte0373;            
        [FieldOffset(374)] public byte byte0374;            
        [FieldOffset(375)] public byte byte0375;            
        [FieldOffset(376)] public byte byte0376;            
        [FieldOffset(377)] public byte byte0377;            
        [FieldOffset(378)] public byte byte0378;            
        [FieldOffset(379)] public byte byte0379;            
        [FieldOffset(380)] public byte byte0380;            
        [FieldOffset(381)] public byte byte0381;            
        [FieldOffset(382)] public byte byte0382;            
        [FieldOffset(383)] public byte byte0383;            
        [FieldOffset(384)] public byte byte0384;            
        [FieldOffset(385)] public byte byte0385;            
        [FieldOffset(386)] public byte byte0386;            
        [FieldOffset(387)] public byte byte0387;            
        [FieldOffset(388)] public byte byte0388;            
        [FieldOffset(389)] public byte byte0389;            
        [FieldOffset(390)] public byte byte0390;            
        [FieldOffset(391)] public byte byte0391;            
        [FieldOffset(392)] public byte byte0392;            
        [FieldOffset(393)] public byte byte0393;            
        [FieldOffset(394)] public byte byte0394;            
        [FieldOffset(395)] public byte byte0395;            
        [FieldOffset(396)] public byte byte0396;            
        [FieldOffset(397)] public byte byte0397;            
        [FieldOffset(398)] public byte byte0398;            
        [FieldOffset(399)] public byte byte0399;            
        [FieldOffset(400)] public byte byte0400;            
        [FieldOffset(401)] public byte byte0401;            
        [FieldOffset(402)] public byte byte0402;            
        [FieldOffset(403)] public byte byte0403;            
        [FieldOffset(404)] public byte byte0404;            
        [FieldOffset(405)] public byte byte0405;            
        [FieldOffset(406)] public byte byte0406;            
        [FieldOffset(407)] public byte byte0407;            
        [FieldOffset(408)] public byte byte0408;            
        [FieldOffset(409)] public byte byte0409;            
        [FieldOffset(410)] public byte byte0410;            
        [FieldOffset(411)] public byte byte0411;            
        [FieldOffset(412)] public byte byte0412;            
        [FieldOffset(413)] public byte byte0413;            
        [FieldOffset(414)] public byte byte0414;            
        [FieldOffset(415)] public byte byte0415;            
        [FieldOffset(416)] public byte byte0416;            
        [FieldOffset(417)] public byte byte0417;            
        [FieldOffset(418)] public byte byte0418;            
        [FieldOffset(419)] public byte byte0419;            
        [FieldOffset(420)] public byte byte0420;            
        [FieldOffset(421)] public byte byte0421;            
        [FieldOffset(422)] public byte byte0422;            
        [FieldOffset(423)] public byte byte0423;            
        [FieldOffset(424)] public byte byte0424;            
        [FieldOffset(425)] public byte byte0425;            
        [FieldOffset(426)] public byte byte0426;            
        [FieldOffset(427)] public byte byte0427;            
        [FieldOffset(428)] public byte byte0428;            
        [FieldOffset(429)] public byte byte0429;            
        [FieldOffset(430)] public byte byte0430;            
        [FieldOffset(431)] public byte byte0431;            
        [FieldOffset(432)] public byte byte0432;            
        [FieldOffset(433)] public byte byte0433;            
        [FieldOffset(434)] public byte byte0434;            
        [FieldOffset(435)] public byte byte0435;            
        [FieldOffset(436)] public byte byte0436;            
        [FieldOffset(437)] public byte byte0437;            
        [FieldOffset(438)] public byte byte0438;            
        [FieldOffset(439)] public byte byte0439;            
        [FieldOffset(440)] public byte byte0440;            
        [FieldOffset(441)] public byte byte0441;            
        [FieldOffset(442)] public byte byte0442;            
        [FieldOffset(443)] public byte byte0443;            
        [FieldOffset(444)] public byte byte0444;            
        [FieldOffset(445)] public byte byte0445;            
        [FieldOffset(446)] public byte byte0446;            
        [FieldOffset(447)] public byte byte0447;            
        [FieldOffset(448)] public byte byte0448;            
        [FieldOffset(449)] public byte byte0449;            
        [FieldOffset(450)] public byte byte0450;            
        [FieldOffset(451)] public byte byte0451;            
        [FieldOffset(452)] public byte byte0452;            
        [FieldOffset(453)] public byte byte0453;            
        [FieldOffset(454)] public byte byte0454;            
        [FieldOffset(455)] public byte byte0455;            
        [FieldOffset(456)] public byte byte0456;            
        [FieldOffset(457)] public byte byte0457;            
        [FieldOffset(458)] public byte byte0458;            
        [FieldOffset(459)] public byte byte0459;            
        [FieldOffset(460)] public byte byte0460;            
        [FieldOffset(461)] public byte byte0461;            
        [FieldOffset(462)] public byte byte0462;            
        [FieldOffset(463)] public byte byte0463;            
        [FieldOffset(464)] public byte byte0464;            
        [FieldOffset(465)] public byte byte0465;            
        [FieldOffset(466)] public byte byte0466;            
        [FieldOffset(467)] public byte byte0467;            
        [FieldOffset(468)] public byte byte0468;            
        [FieldOffset(469)] public byte byte0469;            
        [FieldOffset(470)] public byte byte0470;            
        [FieldOffset(471)] public byte byte0471;            
        [FieldOffset(472)] public byte byte0472;            
        [FieldOffset(473)] public byte byte0473;            
        [FieldOffset(474)] public byte byte0474;            
        [FieldOffset(475)] public byte byte0475;            
        [FieldOffset(476)] public byte byte0476;            
        [FieldOffset(477)] public byte byte0477;            
        [FieldOffset(478)] public byte byte0478;            
        [FieldOffset(479)] public byte byte0479;            
        [FieldOffset(480)] public byte byte0480;            
        [FieldOffset(481)] public byte byte0481;            
        [FieldOffset(482)] public byte byte0482;            
        [FieldOffset(483)] public byte byte0483;            
        [FieldOffset(484)] public byte byte0484;            
        [FieldOffset(485)] public byte byte0485;            
        [FieldOffset(486)] public byte byte0486;            
        [FieldOffset(487)] public byte byte0487;            
        [FieldOffset(488)] public byte byte0488;            
        [FieldOffset(489)] public byte byte0489;            
        [FieldOffset(490)] public byte byte0490;            
        [FieldOffset(491)] public byte byte0491;            
        [FieldOffset(492)] public byte byte0492;            
        [FieldOffset(493)] public byte byte0493;            
        [FieldOffset(494)] public byte byte0494;            
        [FieldOffset(495)] public byte byte0495;            
        [FieldOffset(496)] public byte byte0496;            
        [FieldOffset(497)] public byte byte0497;            
        [FieldOffset(498)] public byte byte0498;            
        [FieldOffset(499)] public byte byte0499;            
        [FieldOffset(500)] public byte byte0500;            
        [FieldOffset(501)] public byte byte0501;            
        [FieldOffset(502)] public byte byte0502;            
        [FieldOffset(503)] public byte byte0503;            
        [FieldOffset(504)] public byte byte0504;            
        [FieldOffset(505)] public byte byte0505;            
        [FieldOffset(506)] public byte byte0506;            
        [FieldOffset(507)] public byte byte0507;            
        [FieldOffset(508)] public byte byte0508;            
        [FieldOffset(509)] public byte byte0509;            
        [FieldOffset(510)] public byte byte0510;            
        [FieldOffset(511)] public byte byte0511;            
        [FieldOffset(512)] public byte byte0512;            
        [FieldOffset(513)] public byte byte0513;            
        [FieldOffset(514)] public byte byte0514;            
        [FieldOffset(515)] public byte byte0515;            
        [FieldOffset(516)] public byte byte0516;            
        [FieldOffset(517)] public byte byte0517;            
        [FieldOffset(518)] public byte byte0518;            
        [FieldOffset(519)] public byte byte0519;            
        [FieldOffset(520)] public byte byte0520;            
        [FieldOffset(521)] public byte byte0521;            
        [FieldOffset(522)] public byte byte0522;            
        [FieldOffset(523)] public byte byte0523;            
        [FieldOffset(524)] public byte byte0524;            
        [FieldOffset(525)] public byte byte0525;            
        [FieldOffset(526)] public byte byte0526;            
        [FieldOffset(527)] public byte byte0527;            
        [FieldOffset(528)] public byte byte0528;            
        [FieldOffset(529)] public byte byte0529;            
        [FieldOffset(530)] public byte byte0530;            
        [FieldOffset(531)] public byte byte0531;            
        [FieldOffset(532)] public byte byte0532;            
        [FieldOffset(533)] public byte byte0533;            
        [FieldOffset(534)] public byte byte0534;            
        [FieldOffset(535)] public byte byte0535;            
        [FieldOffset(536)] public byte byte0536;            
        [FieldOffset(537)] public byte byte0537;            
        [FieldOffset(538)] public byte byte0538;            
        [FieldOffset(539)] public byte byte0539;            
        [FieldOffset(540)] public byte byte0540;            
        [FieldOffset(541)] public byte byte0541;            
        [FieldOffset(542)] public byte byte0542;            
        [FieldOffset(543)] public byte byte0543;            
        [FieldOffset(544)] public byte byte0544;            
        [FieldOffset(545)] public byte byte0545;            
        [FieldOffset(546)] public byte byte0546;            
        [FieldOffset(547)] public byte byte0547;            
        [FieldOffset(548)] public byte byte0548;            
        [FieldOffset(549)] public byte byte0549;            
        [FieldOffset(550)] public byte byte0550;            
        [FieldOffset(551)] public byte byte0551;            
        [FieldOffset(552)] public byte byte0552;            
        [FieldOffset(553)] public byte byte0553;            
        [FieldOffset(554)] public byte byte0554;            
        [FieldOffset(555)] public byte byte0555;            
        [FieldOffset(556)] public byte byte0556;            
        [FieldOffset(557)] public byte byte0557;            
        [FieldOffset(558)] public byte byte0558;            
        [FieldOffset(559)] public byte byte0559;            
        [FieldOffset(560)] public byte byte0560;            
        [FieldOffset(561)] public byte byte0561;            
        [FieldOffset(562)] public byte byte0562;            
        [FieldOffset(563)] public byte byte0563;            
        [FieldOffset(564)] public byte byte0564;            
        [FieldOffset(565)] public byte byte0565;            
        [FieldOffset(566)] public byte byte0566;            
        [FieldOffset(567)] public byte byte0567;            
        [FieldOffset(568)] public byte byte0568;            
        [FieldOffset(569)] public byte byte0569;            
        [FieldOffset(570)] public byte byte0570;            
        [FieldOffset(571)] public byte byte0571;            
        [FieldOffset(572)] public byte byte0572;            
        [FieldOffset(573)] public byte byte0573;            
        [FieldOffset(574)] public byte byte0574;            
        [FieldOffset(575)] public byte byte0575;            
        [FieldOffset(576)] public byte byte0576;            
        [FieldOffset(577)] public byte byte0577;            
        [FieldOffset(578)] public byte byte0578;            
        [FieldOffset(579)] public byte byte0579;            
        [FieldOffset(580)] public byte byte0580;            
        [FieldOffset(581)] public byte byte0581;            
        [FieldOffset(582)] public byte byte0582;            
        [FieldOffset(583)] public byte byte0583;            
        [FieldOffset(584)] public byte byte0584;            
        [FieldOffset(585)] public byte byte0585;            
        [FieldOffset(586)] public byte byte0586;            
        [FieldOffset(587)] public byte byte0587;            
        [FieldOffset(588)] public byte byte0588;            
        [FieldOffset(589)] public byte byte0589;            
        [FieldOffset(590)] public byte byte0590;            
        [FieldOffset(591)] public byte byte0591;            
        [FieldOffset(592)] public byte byte0592;            
        [FieldOffset(593)] public byte byte0593;            
        [FieldOffset(594)] public byte byte0594;            
        [FieldOffset(595)] public byte byte0595;            
        [FieldOffset(596)] public byte byte0596;            
        [FieldOffset(597)] public byte byte0597;            
        [FieldOffset(598)] public byte byte0598;            
        [FieldOffset(599)] public byte byte0599;            
        [FieldOffset(600)] public byte byte0600;            
        [FieldOffset(601)] public byte byte0601;            
        [FieldOffset(602)] public byte byte0602;            
        [FieldOffset(603)] public byte byte0603;            
        [FieldOffset(604)] public byte byte0604;            
        [FieldOffset(605)] public byte byte0605;            
        [FieldOffset(606)] public byte byte0606;            
        [FieldOffset(607)] public byte byte0607;            
        [FieldOffset(608)] public byte byte0608;            
        [FieldOffset(609)] public byte byte0609;            
        [FieldOffset(610)] public byte byte0610;            
        [FieldOffset(611)] public byte byte0611;            
        [FieldOffset(612)] public byte byte0612;            
        [FieldOffset(613)] public byte byte0613;            
        [FieldOffset(614)] public byte byte0614;            
        [FieldOffset(615)] public byte byte0615;            
        [FieldOffset(616)] public byte byte0616;            
        [FieldOffset(617)] public byte byte0617;            
        [FieldOffset(618)] public byte byte0618;            
        [FieldOffset(619)] public byte byte0619;            
        [FieldOffset(620)] public byte byte0620;            
        [FieldOffset(621)] public byte byte0621;            
        [FieldOffset(622)] public byte byte0622;            
        [FieldOffset(623)] public byte byte0623;            
        [FieldOffset(624)] public byte byte0624;            
        [FieldOffset(625)] public byte byte0625;            
        [FieldOffset(626)] public byte byte0626;            
        [FieldOffset(627)] public byte byte0627;            
        [FieldOffset(628)] public byte byte0628;            
        [FieldOffset(629)] public byte byte0629;            
        [FieldOffset(630)] public byte byte0630;            
        [FieldOffset(631)] public byte byte0631;            
        [FieldOffset(632)] public byte byte0632;            
        [FieldOffset(633)] public byte byte0633;            
        [FieldOffset(634)] public byte byte0634;            
        [FieldOffset(635)] public byte byte0635;            
        [FieldOffset(636)] public byte byte0636;            
        [FieldOffset(637)] public byte byte0637;            
        [FieldOffset(638)] public byte byte0638;            
        [FieldOffset(639)] public byte byte0639;            
        [FieldOffset(640)] public byte byte0640;            
        [FieldOffset(641)] public byte byte0641;            
        [FieldOffset(642)] public byte byte0642;            
        [FieldOffset(643)] public byte byte0643;            
        [FieldOffset(644)] public byte byte0644;            
        [FieldOffset(645)] public byte byte0645;            
        [FieldOffset(646)] public byte byte0646;            
        [FieldOffset(647)] public byte byte0647;            
        [FieldOffset(648)] public byte byte0648;            
        [FieldOffset(649)] public byte byte0649;            
        [FieldOffset(650)] public byte byte0650;            
        [FieldOffset(651)] public byte byte0651;            
        [FieldOffset(652)] public byte byte0652;            
        [FieldOffset(653)] public byte byte0653;            
        [FieldOffset(654)] public byte byte0654;            
        [FieldOffset(655)] public byte byte0655;            
        [FieldOffset(656)] public byte byte0656;            
        [FieldOffset(657)] public byte byte0657;            
        [FieldOffset(658)] public byte byte0658;            
        [FieldOffset(659)] public byte byte0659;            
        [FieldOffset(660)] public byte byte0660;            
        [FieldOffset(661)] public byte byte0661;            
        [FieldOffset(662)] public byte byte0662;            
        [FieldOffset(663)] public byte byte0663;            
        [FieldOffset(664)] public byte byte0664;            
        [FieldOffset(665)] public byte byte0665;            
        [FieldOffset(666)] public byte byte0666;            
        [FieldOffset(667)] public byte byte0667;            
        [FieldOffset(668)] public byte byte0668;            
        [FieldOffset(669)] public byte byte0669;            
        [FieldOffset(670)] public byte byte0670;            
        [FieldOffset(671)] public byte byte0671;            
        [FieldOffset(672)] public byte byte0672;            
        [FieldOffset(673)] public byte byte0673;            
        [FieldOffset(674)] public byte byte0674;            
        [FieldOffset(675)] public byte byte0675;            
        [FieldOffset(676)] public byte byte0676;            
        [FieldOffset(677)] public byte byte0677;            
        [FieldOffset(678)] public byte byte0678;            
        [FieldOffset(679)] public byte byte0679;            
        [FieldOffset(680)] public byte byte0680;            
        [FieldOffset(681)] public byte byte0681;            
        [FieldOffset(682)] public byte byte0682;            
        [FieldOffset(683)] public byte byte0683;            
        [FieldOffset(684)] public byte byte0684;            
        [FieldOffset(685)] public byte byte0685;            
        [FieldOffset(686)] public byte byte0686;            
        [FieldOffset(687)] public byte byte0687;            
        [FieldOffset(688)] public byte byte0688;            
        [FieldOffset(689)] public byte byte0689;            
        [FieldOffset(690)] public byte byte0690;            
        [FieldOffset(691)] public byte byte0691;            
        [FieldOffset(692)] public byte byte0692;            
        [FieldOffset(693)] public byte byte0693;            
        [FieldOffset(694)] public byte byte0694;            
        [FieldOffset(695)] public byte byte0695;            
        [FieldOffset(696)] public byte byte0696;            
        [FieldOffset(697)] public byte byte0697;            
        [FieldOffset(698)] public byte byte0698;            
        [FieldOffset(699)] public byte byte0699;            
        [FieldOffset(700)] public byte byte0700;            
        [FieldOffset(701)] public byte byte0701;            
        [FieldOffset(702)] public byte byte0702;            
        [FieldOffset(703)] public byte byte0703;            
        [FieldOffset(704)] public byte byte0704;            
        [FieldOffset(705)] public byte byte0705;            
        [FieldOffset(706)] public byte byte0706;            
        [FieldOffset(707)] public byte byte0707;            
        [FieldOffset(708)] public byte byte0708;            
        [FieldOffset(709)] public byte byte0709;            
        [FieldOffset(710)] public byte byte0710;            
        [FieldOffset(711)] public byte byte0711;            
        [FieldOffset(712)] public byte byte0712;            
        [FieldOffset(713)] public byte byte0713;            
        [FieldOffset(714)] public byte byte0714;            
        [FieldOffset(715)] public byte byte0715;            
        [FieldOffset(716)] public byte byte0716;            
        [FieldOffset(717)] public byte byte0717;            
        [FieldOffset(718)] public byte byte0718;            
        [FieldOffset(719)] public byte byte0719;            
        [FieldOffset(720)] public byte byte0720;            
        [FieldOffset(721)] public byte byte0721;            
        [FieldOffset(722)] public byte byte0722;            
        [FieldOffset(723)] public byte byte0723;            
        [FieldOffset(724)] public byte byte0724;            
        [FieldOffset(725)] public byte byte0725;            
        [FieldOffset(726)] public byte byte0726;            
        [FieldOffset(727)] public byte byte0727;            
        [FieldOffset(728)] public byte byte0728;            
        [FieldOffset(729)] public byte byte0729;            
        [FieldOffset(730)] public byte byte0730;            
        [FieldOffset(731)] public byte byte0731;            
        [FieldOffset(732)] public byte byte0732;            
        [FieldOffset(733)] public byte byte0733;            
        [FieldOffset(734)] public byte byte0734;            
        [FieldOffset(735)] public byte byte0735;            
        [FieldOffset(736)] public byte byte0736;            
        [FieldOffset(737)] public byte byte0737;            
        [FieldOffset(738)] public byte byte0738;            
        [FieldOffset(739)] public byte byte0739;            
        [FieldOffset(740)] public byte byte0740;            
        [FieldOffset(741)] public byte byte0741;            
        [FieldOffset(742)] public byte byte0742;            
        [FieldOffset(743)] public byte byte0743;            
        [FieldOffset(744)] public byte byte0744;            
        [FieldOffset(745)] public byte byte0745;            
        [FieldOffset(746)] public byte byte0746;            
        [FieldOffset(747)] public byte byte0747;            
        [FieldOffset(748)] public byte byte0748;            
        [FieldOffset(749)] public byte byte0749;            
        [FieldOffset(750)] public byte byte0750;            
        [FieldOffset(751)] public byte byte0751;            
        [FieldOffset(752)] public byte byte0752;            
        [FieldOffset(753)] public byte byte0753;            
        [FieldOffset(754)] public byte byte0754;            
        [FieldOffset(755)] public byte byte0755;            
        [FieldOffset(756)] public byte byte0756;            
        [FieldOffset(757)] public byte byte0757;            
        [FieldOffset(758)] public byte byte0758;            
        [FieldOffset(759)] public byte byte0759;            
        [FieldOffset(760)] public byte byte0760;            
        [FieldOffset(761)] public byte byte0761;            
        [FieldOffset(762)] public byte byte0762;            
        [FieldOffset(763)] public byte byte0763;            
        [FieldOffset(764)] public byte byte0764;            
        [FieldOffset(765)] public byte byte0765;            
        [FieldOffset(766)] public byte byte0766;            
        [FieldOffset(767)] public byte byte0767;            
        [FieldOffset(768)] public byte byte0768;            
        [FieldOffset(769)] public byte byte0769;            
        [FieldOffset(770)] public byte byte0770;            
        [FieldOffset(771)] public byte byte0771;            
        [FieldOffset(772)] public byte byte0772;            
        [FieldOffset(773)] public byte byte0773;            
        [FieldOffset(774)] public byte byte0774;            
        [FieldOffset(775)] public byte byte0775;            
        [FieldOffset(776)] public byte byte0776;            
        [FieldOffset(777)] public byte byte0777;            
        [FieldOffset(778)] public byte byte0778;            
        [FieldOffset(779)] public byte byte0779;            
        [FieldOffset(780)] public byte byte0780;            
        [FieldOffset(781)] public byte byte0781;            
        [FieldOffset(782)] public byte byte0782;            
        [FieldOffset(783)] public byte byte0783;            
        [FieldOffset(784)] public byte byte0784;            
        [FieldOffset(785)] public byte byte0785;            
        [FieldOffset(786)] public byte byte0786;            
        [FieldOffset(787)] public byte byte0787;            
        [FieldOffset(788)] public byte byte0788;            
        [FieldOffset(789)] public byte byte0789;            
        [FieldOffset(790)] public byte byte0790;            
        [FieldOffset(791)] public byte byte0791;            
        [FieldOffset(792)] public byte byte0792;            
        [FieldOffset(793)] public byte byte0793;            
        [FieldOffset(794)] public byte byte0794;            
        [FieldOffset(795)] public byte byte0795;            
        [FieldOffset(796)] public byte byte0796;            
        [FieldOffset(797)] public byte byte0797;            
        [FieldOffset(798)] public byte byte0798;            
        [FieldOffset(799)] public byte byte0799;            
        [FieldOffset(800)] public byte byte0800;            
        [FieldOffset(801)] public byte byte0801;            
        [FieldOffset(802)] public byte byte0802;            
        [FieldOffset(803)] public byte byte0803;            
        [FieldOffset(804)] public byte byte0804;            
        [FieldOffset(805)] public byte byte0805;            
        [FieldOffset(806)] public byte byte0806;            
        [FieldOffset(807)] public byte byte0807;            
        [FieldOffset(808)] public byte byte0808;            
        [FieldOffset(809)] public byte byte0809;            
        [FieldOffset(810)] public byte byte0810;            
        [FieldOffset(811)] public byte byte0811;            
        [FieldOffset(812)] public byte byte0812;            
        [FieldOffset(813)] public byte byte0813;            
        [FieldOffset(814)] public byte byte0814;            
        [FieldOffset(815)] public byte byte0815;            
        [FieldOffset(816)] public byte byte0816;            
        [FieldOffset(817)] public byte byte0817;            
        [FieldOffset(818)] public byte byte0818;            
        [FieldOffset(819)] public byte byte0819;            
        [FieldOffset(820)] public byte byte0820;            
        [FieldOffset(821)] public byte byte0821;            
        [FieldOffset(822)] public byte byte0822;            
        [FieldOffset(823)] public byte byte0823;            
        [FieldOffset(824)] public byte byte0824;            
        [FieldOffset(825)] public byte byte0825;            
        [FieldOffset(826)] public byte byte0826;            
        [FieldOffset(827)] public byte byte0827;            
        [FieldOffset(828)] public byte byte0828;            
        [FieldOffset(829)] public byte byte0829;            
        [FieldOffset(830)] public byte byte0830;            
        [FieldOffset(831)] public byte byte0831;            
        [FieldOffset(832)] public byte byte0832;            
        [FieldOffset(833)] public byte byte0833;            
        [FieldOffset(834)] public byte byte0834;            
        [FieldOffset(835)] public byte byte0835;            
        [FieldOffset(836)] public byte byte0836;            
        [FieldOffset(837)] public byte byte0837;            
        [FieldOffset(838)] public byte byte0838;            
        [FieldOffset(839)] public byte byte0839;            
        [FieldOffset(840)] public byte byte0840;            
        [FieldOffset(841)] public byte byte0841;            
        [FieldOffset(842)] public byte byte0842;            
        [FieldOffset(843)] public byte byte0843;            
        [FieldOffset(844)] public byte byte0844;            
        [FieldOffset(845)] public byte byte0845;            
        [FieldOffset(846)] public byte byte0846;            
        [FieldOffset(847)] public byte byte0847;            
        [FieldOffset(848)] public byte byte0848;            
        [FieldOffset(849)] public byte byte0849;            
        [FieldOffset(850)] public byte byte0850;            
        [FieldOffset(851)] public byte byte0851;            
        [FieldOffset(852)] public byte byte0852;            
        [FieldOffset(853)] public byte byte0853;            
        [FieldOffset(854)] public byte byte0854;            
        [FieldOffset(855)] public byte byte0855;            
        [FieldOffset(856)] public byte byte0856;            
        [FieldOffset(857)] public byte byte0857;            
        [FieldOffset(858)] public byte byte0858;            
        [FieldOffset(859)] public byte byte0859;            
        [FieldOffset(860)] public byte byte0860;            
        [FieldOffset(861)] public byte byte0861;            
        [FieldOffset(862)] public byte byte0862;            
        [FieldOffset(863)] public byte byte0863;            
        [FieldOffset(864)] public byte byte0864;            
        [FieldOffset(865)] public byte byte0865;            
        [FieldOffset(866)] public byte byte0866;            
        [FieldOffset(867)] public byte byte0867;            
        [FieldOffset(868)] public byte byte0868;            
        [FieldOffset(869)] public byte byte0869;            
        [FieldOffset(870)] public byte byte0870;            
        [FieldOffset(871)] public byte byte0871;            
        [FieldOffset(872)] public byte byte0872;            
        [FieldOffset(873)] public byte byte0873;            
        [FieldOffset(874)] public byte byte0874;            
        [FieldOffset(875)] public byte byte0875;            
        [FieldOffset(876)] public byte byte0876;            
        [FieldOffset(877)] public byte byte0877;            
        [FieldOffset(878)] public byte byte0878;            
        [FieldOffset(879)] public byte byte0879;            
        [FieldOffset(880)] public byte byte0880;            
        [FieldOffset(881)] public byte byte0881;            
        [FieldOffset(882)] public byte byte0882;            
        [FieldOffset(883)] public byte byte0883;            
        [FieldOffset(884)] public byte byte0884;            
        [FieldOffset(885)] public byte byte0885;            
        [FieldOffset(886)] public byte byte0886;            
        [FieldOffset(887)] public byte byte0887;            
        [FieldOffset(888)] public byte byte0888;            
        [FieldOffset(889)] public byte byte0889;            
        [FieldOffset(890)] public byte byte0890;            
        [FieldOffset(891)] public byte byte0891;            
        [FieldOffset(892)] public byte byte0892;            
        [FieldOffset(893)] public byte byte0893;            
        [FieldOffset(894)] public byte byte0894;            
        [FieldOffset(895)] public byte byte0895;            
        [FieldOffset(896)] public byte byte0896;            
        [FieldOffset(897)] public byte byte0897;            
        [FieldOffset(898)] public byte byte0898;            
        [FieldOffset(899)] public byte byte0899;            
        [FieldOffset(900)] public byte byte0900;            
        [FieldOffset(901)] public byte byte0901;            
        [FieldOffset(902)] public byte byte0902;            
        [FieldOffset(903)] public byte byte0903;            
        [FieldOffset(904)] public byte byte0904;            
        [FieldOffset(905)] public byte byte0905;            
        [FieldOffset(906)] public byte byte0906;            
        [FieldOffset(907)] public byte byte0907;            
        [FieldOffset(908)] public byte byte0908;            
        [FieldOffset(909)] public byte byte0909;            
        [FieldOffset(910)] public byte byte0910;            
        [FieldOffset(911)] public byte byte0911;            
        [FieldOffset(912)] public byte byte0912;            
        [FieldOffset(913)] public byte byte0913;            
        [FieldOffset(914)] public byte byte0914;            
        [FieldOffset(915)] public byte byte0915;            
        [FieldOffset(916)] public byte byte0916;            
        [FieldOffset(917)] public byte byte0917;            
        [FieldOffset(918)] public byte byte0918;            
        [FieldOffset(919)] public byte byte0919;            
        [FieldOffset(920)] public byte byte0920;            
        [FieldOffset(921)] public byte byte0921;            
        [FieldOffset(922)] public byte byte0922;            
        [FieldOffset(923)] public byte byte0923;            
        [FieldOffset(924)] public byte byte0924;            
        [FieldOffset(925)] public byte byte0925;            
        [FieldOffset(926)] public byte byte0926;            
        [FieldOffset(927)] public byte byte0927;            
        [FieldOffset(928)] public byte byte0928;            
        [FieldOffset(929)] public byte byte0929;            
        [FieldOffset(930)] public byte byte0930;            
        [FieldOffset(931)] public byte byte0931;            
        [FieldOffset(932)] public byte byte0932;            
        [FieldOffset(933)] public byte byte0933;            
        [FieldOffset(934)] public byte byte0934;            
        [FieldOffset(935)] public byte byte0935;            
        [FieldOffset(936)] public byte byte0936;            
        [FieldOffset(937)] public byte byte0937;            
        [FieldOffset(938)] public byte byte0938;            
        [FieldOffset(939)] public byte byte0939;            
        [FieldOffset(940)] public byte byte0940;            
        [FieldOffset(941)] public byte byte0941;            
        [FieldOffset(942)] public byte byte0942;            
        [FieldOffset(943)] public byte byte0943;            
        [FieldOffset(944)] public byte byte0944;            
        [FieldOffset(945)] public byte byte0945;            
        [FieldOffset(946)] public byte byte0946;            
        [FieldOffset(947)] public byte byte0947;            
        [FieldOffset(948)] public byte byte0948;            
        [FieldOffset(949)] public byte byte0949;            
        [FieldOffset(950)] public byte byte0950;            
        [FieldOffset(951)] public byte byte0951;            
        [FieldOffset(952)] public byte byte0952;            
        [FieldOffset(953)] public byte byte0953;            
        [FieldOffset(954)] public byte byte0954;            
        [FieldOffset(955)] public byte byte0955;            
        [FieldOffset(956)] public byte byte0956;            
        [FieldOffset(957)] public byte byte0957;            
        [FieldOffset(958)] public byte byte0958;            
        [FieldOffset(959)] public byte byte0959;            
        [FieldOffset(960)] public byte byte0960;            
        [FieldOffset(961)] public byte byte0961;            
        [FieldOffset(962)] public byte byte0962;            
        [FieldOffset(963)] public byte byte0963;            
        [FieldOffset(964)] public byte byte0964;            
        [FieldOffset(965)] public byte byte0965;            
        [FieldOffset(966)] public byte byte0966;            
        [FieldOffset(967)] public byte byte0967;            
        [FieldOffset(968)] public byte byte0968;            
        [FieldOffset(969)] public byte byte0969;            
        [FieldOffset(970)] public byte byte0970;            
        [FieldOffset(971)] public byte byte0971;            
        [FieldOffset(972)] public byte byte0972;            
        [FieldOffset(973)] public byte byte0973;            
        [FieldOffset(974)] public byte byte0974;            
        [FieldOffset(975)] public byte byte0975;            
        [FieldOffset(976)] public byte byte0976;            
        [FieldOffset(977)] public byte byte0977;            
        [FieldOffset(978)] public byte byte0978;            
        [FieldOffset(979)] public byte byte0979;            
        [FieldOffset(980)] public byte byte0980;            
        [FieldOffset(981)] public byte byte0981;            
        [FieldOffset(982)] public byte byte0982;            
        [FieldOffset(983)] public byte byte0983;            
        [FieldOffset(984)] public byte byte0984;            
        [FieldOffset(985)] public byte byte0985;            
        [FieldOffset(986)] public byte byte0986;            
        [FieldOffset(987)] public byte byte0987;            
        [FieldOffset(988)] public byte byte0988;            
        [FieldOffset(989)] public byte byte0989;            
        [FieldOffset(990)] public byte byte0990;            
        [FieldOffset(991)] public byte byte0991;            
        [FieldOffset(992)] public byte byte0992;            
        [FieldOffset(993)] public byte byte0993;            
        [FieldOffset(994)] public byte byte0994;            
        [FieldOffset(995)] public byte byte0995;            
        [FieldOffset(996)] public byte byte0996;            
        [FieldOffset(997)] public byte byte0997;            
        [FieldOffset(998)] public byte byte0998;            
        [FieldOffset(999)] public byte byte0999;            
        [FieldOffset(1000)] public byte byte1000;            
        [FieldOffset(1001)] public byte byte1001;            
        [FieldOffset(1002)] public byte byte1002;            
        [FieldOffset(1003)] public byte byte1003;            
        [FieldOffset(1004)] public byte byte1004;            
        [FieldOffset(1005)] public byte byte1005;            
        [FieldOffset(1006)] public byte byte1006;            
        [FieldOffset(1007)] public byte byte1007;            
        [FieldOffset(1008)] public byte byte1008;            
        [FieldOffset(1009)] public byte byte1009;            
        [FieldOffset(1010)] public byte byte1010;            
        [FieldOffset(1011)] public byte byte1011;            
        [FieldOffset(1012)] public byte byte1012;            
        [FieldOffset(1013)] public byte byte1013;            
        [FieldOffset(1014)] public byte byte1014;            
        [FieldOffset(1015)] public byte byte1015;            
        [FieldOffset(1016)] public byte byte1016;            
        [FieldOffset(1017)] public byte byte1017;            
        [FieldOffset(1018)] public byte byte1018;            
        [FieldOffset(1019)] public byte byte1019;            
        [FieldOffset(1020)] public byte byte1020;            
        [FieldOffset(1021)] public byte byte1021;            
        [FieldOffset(1022)] public byte byte1022;            
        [FieldOffset(1023)] public byte byte1023;            
        [FieldOffset(1024)] public byte byte1024;            
        [FieldOffset(1025)] public byte byte1025;            
        [FieldOffset(1026)] public byte byte1026;            
        [FieldOffset(1027)] public byte byte1027;            
        [FieldOffset(1028)] public byte byte1028;            
        [FieldOffset(1029)] public byte byte1029;            
        [FieldOffset(1030)] public byte byte1030;            
        [FieldOffset(1031)] public byte byte1031;            
        [FieldOffset(1032)] public byte byte1032;            
        [FieldOffset(1033)] public byte byte1033;            
        [FieldOffset(1034)] public byte byte1034;            
        [FieldOffset(1035)] public byte byte1035;            
        [FieldOffset(1036)] public byte byte1036;            
        [FieldOffset(1037)] public byte byte1037;            
        [FieldOffset(1038)] public byte byte1038;            
        [FieldOffset(1039)] public byte byte1039;            
        [FieldOffset(1040)] public byte byte1040;            
        [FieldOffset(1041)] public byte byte1041;            
        [FieldOffset(1042)] public byte byte1042;            
        [FieldOffset(1043)] public byte byte1043;            
        [FieldOffset(1044)] public byte byte1044;            
        [FieldOffset(1045)] public byte byte1045;            
        [FieldOffset(1046)] public byte byte1046;            
        [FieldOffset(1047)] public byte byte1047;            
        [FieldOffset(1048)] public byte byte1048;            
        [FieldOffset(1049)] public byte byte1049;            
        [FieldOffset(1050)] public byte byte1050;            
        [FieldOffset(1051)] public byte byte1051;            
        [FieldOffset(1052)] public byte byte1052;            
        [FieldOffset(1053)] public byte byte1053;            
        [FieldOffset(1054)] public byte byte1054;            
        [FieldOffset(1055)] public byte byte1055;            
        [FieldOffset(1056)] public byte byte1056;            
        [FieldOffset(1057)] public byte byte1057;            
        [FieldOffset(1058)] public byte byte1058;            
        [FieldOffset(1059)] public byte byte1059;            
        [FieldOffset(1060)] public byte byte1060;            
        [FieldOffset(1061)] public byte byte1061;            
        [FieldOffset(1062)] public byte byte1062;            
        [FieldOffset(1063)] public byte byte1063;            
        [FieldOffset(1064)] public byte byte1064;            
        [FieldOffset(1065)] public byte byte1065;            
        [FieldOffset(1066)] public byte byte1066;            
        [FieldOffset(1067)] public byte byte1067;            
        [FieldOffset(1068)] public byte byte1068;            
        [FieldOffset(1069)] public byte byte1069;            
        [FieldOffset(1070)] public byte byte1070;            
        [FieldOffset(1071)] public byte byte1071;            
        [FieldOffset(1072)] public byte byte1072;            
        [FieldOffset(1073)] public byte byte1073;            
        [FieldOffset(1074)] public byte byte1074;            
        [FieldOffset(1075)] public byte byte1075;            
        [FieldOffset(1076)] public byte byte1076;            
        [FieldOffset(1077)] public byte byte1077;            
        [FieldOffset(1078)] public byte byte1078;            
        [FieldOffset(1079)] public byte byte1079;            
        [FieldOffset(1080)] public byte byte1080;            
        [FieldOffset(1081)] public byte byte1081;            
        [FieldOffset(1082)] public byte byte1082;            
        [FieldOffset(1083)] public byte byte1083;            
        [FieldOffset(1084)] public byte byte1084;            
        [FieldOffset(1085)] public byte byte1085;            
        [FieldOffset(1086)] public byte byte1086;            
        [FieldOffset(1087)] public byte byte1087;            
        [FieldOffset(1088)] public byte byte1088;            
        [FieldOffset(1089)] public byte byte1089;            
        [FieldOffset(1090)] public byte byte1090;            
        [FieldOffset(1091)] public byte byte1091;            
        [FieldOffset(1092)] public byte byte1092;            
        [FieldOffset(1093)] public byte byte1093;            
        [FieldOffset(1094)] public byte byte1094;            
        [FieldOffset(1095)] public byte byte1095;            
        [FieldOffset(1096)] public byte byte1096;            
        [FieldOffset(1097)] public byte byte1097;            
        [FieldOffset(1098)] public byte byte1098;            
        [FieldOffset(1099)] public byte byte1099;            
        [FieldOffset(1100)] public byte byte1100;            
        [FieldOffset(1101)] public byte byte1101;            
        [FieldOffset(1102)] public byte byte1102;            
        [FieldOffset(1103)] public byte byte1103;            
        [FieldOffset(1104)] public byte byte1104;            
        [FieldOffset(1105)] public byte byte1105;            
        [FieldOffset(1106)] public byte byte1106;            
        [FieldOffset(1107)] public byte byte1107;            
        [FieldOffset(1108)] public byte byte1108;            
        [FieldOffset(1109)] public byte byte1109;            
        [FieldOffset(1110)] public byte byte1110;            
        [FieldOffset(1111)] public byte byte1111;            
        [FieldOffset(1112)] public byte byte1112;            
        [FieldOffset(1113)] public byte byte1113;            
        [FieldOffset(1114)] public byte byte1114;            
        [FieldOffset(1115)] public byte byte1115;            
        [FieldOffset(1116)] public byte byte1116;            
        [FieldOffset(1117)] public byte byte1117;            
        [FieldOffset(1118)] public byte byte1118;            
        [FieldOffset(1119)] public byte byte1119;            
        [FieldOffset(1120)] public byte byte1120;            
        [FieldOffset(1121)] public byte byte1121;            
        [FieldOffset(1122)] public byte byte1122;            
        [FieldOffset(1123)] public byte byte1123;            
        [FieldOffset(1124)] public byte byte1124;            
        [FieldOffset(1125)] public byte byte1125;            
        [FieldOffset(1126)] public byte byte1126;            
        [FieldOffset(1127)] public byte byte1127;            
        [FieldOffset(1128)] public byte byte1128;            
        [FieldOffset(1129)] public byte byte1129;            
        [FieldOffset(1130)] public byte byte1130;            
        [FieldOffset(1131)] public byte byte1131;            
        [FieldOffset(1132)] public byte byte1132;            
        [FieldOffset(1133)] public byte byte1133;            
        [FieldOffset(1134)] public byte byte1134;            
        [FieldOffset(1135)] public byte byte1135;            
        [FieldOffset(1136)] public byte byte1136;            
        [FieldOffset(1137)] public byte byte1137;            
        [FieldOffset(1138)] public byte byte1138;            
        [FieldOffset(1139)] public byte byte1139;            
        [FieldOffset(1140)] public byte byte1140;            
        [FieldOffset(1141)] public byte byte1141;            
        [FieldOffset(1142)] public byte byte1142;            
        [FieldOffset(1143)] public byte byte1143;            
        [FieldOffset(1144)] public byte byte1144;            
        [FieldOffset(1145)] public byte byte1145;            
        [FieldOffset(1146)] public byte byte1146;            
        [FieldOffset(1147)] public byte byte1147;            
        [FieldOffset(1148)] public byte byte1148;            
        [FieldOffset(1149)] public byte byte1149;            
        [FieldOffset(1150)] public byte byte1150;            
        [FieldOffset(1151)] public byte byte1151;            
        [FieldOffset(1152)] public byte byte1152;            
        [FieldOffset(1153)] public byte byte1153;            
        [FieldOffset(1154)] public byte byte1154;            
        [FieldOffset(1155)] public byte byte1155;            
        [FieldOffset(1156)] public byte byte1156;            
        [FieldOffset(1157)] public byte byte1157;            
        [FieldOffset(1158)] public byte byte1158;            
        [FieldOffset(1159)] public byte byte1159;            
        [FieldOffset(1160)] public byte byte1160;            
        [FieldOffset(1161)] public byte byte1161;            
        [FieldOffset(1162)] public byte byte1162;            
        [FieldOffset(1163)] public byte byte1163;            
        [FieldOffset(1164)] public byte byte1164;            
        [FieldOffset(1165)] public byte byte1165;            
        [FieldOffset(1166)] public byte byte1166;            
        [FieldOffset(1167)] public byte byte1167;            
        [FieldOffset(1168)] public byte byte1168;            
        [FieldOffset(1169)] public byte byte1169;            
        [FieldOffset(1170)] public byte byte1170;            
        [FieldOffset(1171)] public byte byte1171;            
        [FieldOffset(1172)] public byte byte1172;            
        [FieldOffset(1173)] public byte byte1173;            
        [FieldOffset(1174)] public byte byte1174;            
        [FieldOffset(1175)] public byte byte1175;            
        [FieldOffset(1176)] public byte byte1176;            
        [FieldOffset(1177)] public byte byte1177;            
        [FieldOffset(1178)] public byte byte1178;            
        [FieldOffset(1179)] public byte byte1179;            
        [FieldOffset(1180)] public byte byte1180;            
        [FieldOffset(1181)] public byte byte1181;            
        [FieldOffset(1182)] public byte byte1182;            
        [FieldOffset(1183)] public byte byte1183;            
        [FieldOffset(1184)] public byte byte1184;            
        [FieldOffset(1185)] public byte byte1185;            
        [FieldOffset(1186)] public byte byte1186;            
        [FieldOffset(1187)] public byte byte1187;            
        [FieldOffset(1188)] public byte byte1188;            
        [FieldOffset(1189)] public byte byte1189;            
        [FieldOffset(1190)] public byte byte1190;            
        [FieldOffset(1191)] public byte byte1191;            
        [FieldOffset(1192)] public byte byte1192;            
        [FieldOffset(1193)] public byte byte1193;            
        [FieldOffset(1194)] public byte byte1194;            
        [FieldOffset(1195)] public byte byte1195;            
        [FieldOffset(1196)] public byte byte1196;            
        [FieldOffset(1197)] public byte byte1197;            
        [FieldOffset(1198)] public byte byte1198;            
        [FieldOffset(1199)] public byte byte1199;            
        [FieldOffset(1200)] public byte byte1200;            
        [FieldOffset(1201)] public byte byte1201;            
        [FieldOffset(1202)] public byte byte1202;            
        [FieldOffset(1203)] public byte byte1203;            
        [FieldOffset(1204)] public byte byte1204;            
        [FieldOffset(1205)] public byte byte1205;            
        [FieldOffset(1206)] public byte byte1206;            
        [FieldOffset(1207)] public byte byte1207;            
        [FieldOffset(1208)] public byte byte1208;            
        [FieldOffset(1209)] public byte byte1209;            
        [FieldOffset(1210)] public byte byte1210;            
        [FieldOffset(1211)] public byte byte1211;            
        [FieldOffset(1212)] public byte byte1212;            
        [FieldOffset(1213)] public byte byte1213;            
        [FieldOffset(1214)] public byte byte1214;            
        [FieldOffset(1215)] public byte byte1215;            
        [FieldOffset(1216)] public byte byte1216;            
        [FieldOffset(1217)] public byte byte1217;            
        [FieldOffset(1218)] public byte byte1218;            
        [FieldOffset(1219)] public byte byte1219;            
        [FieldOffset(1220)] public byte byte1220;            
        [FieldOffset(1221)] public byte byte1221;            
        [FieldOffset(1222)] public byte byte1222;            
        [FieldOffset(1223)] public byte byte1223;            
        [FieldOffset(1224)] public byte byte1224;            
        [FieldOffset(1225)] public byte byte1225;            
        [FieldOffset(1226)] public byte byte1226;            
        [FieldOffset(1227)] public byte byte1227;            
        [FieldOffset(1228)] public byte byte1228;            
        [FieldOffset(1229)] public byte byte1229;            
        [FieldOffset(1230)] public byte byte1230;            
        [FieldOffset(1231)] public byte byte1231;            
        [FieldOffset(1232)] public byte byte1232;            
        [FieldOffset(1233)] public byte byte1233;            
        [FieldOffset(1234)] public byte byte1234;            
        [FieldOffset(1235)] public byte byte1235;            
        [FieldOffset(1236)] public byte byte1236;            
        [FieldOffset(1237)] public byte byte1237;            
        [FieldOffset(1238)] public byte byte1238;            
        [FieldOffset(1239)] public byte byte1239;            
        [FieldOffset(1240)] public byte byte1240;            
        [FieldOffset(1241)] public byte byte1241;            
        [FieldOffset(1242)] public byte byte1242;            
        [FieldOffset(1243)] public byte byte1243;            
        [FieldOffset(1244)] public byte byte1244;            
        [FieldOffset(1245)] public byte byte1245;            
        [FieldOffset(1246)] public byte byte1246;            
        [FieldOffset(1247)] public byte byte1247;            
        [FieldOffset(1248)] public byte byte1248;            
        [FieldOffset(1249)] public byte byte1249;            
        [FieldOffset(1250)] public byte byte1250;            
        [FieldOffset(1251)] public byte byte1251;            
        [FieldOffset(1252)] public byte byte1252;            
        [FieldOffset(1253)] public byte byte1253;            
        [FieldOffset(1254)] public byte byte1254;            
        [FieldOffset(1255)] public byte byte1255;            
        [FieldOffset(1256)] public byte byte1256;            
        [FieldOffset(1257)] public byte byte1257;            
        [FieldOffset(1258)] public byte byte1258;            
        [FieldOffset(1259)] public byte byte1259;            
        [FieldOffset(1260)] public byte byte1260;            
        [FieldOffset(1261)] public byte byte1261;            
        [FieldOffset(1262)] public byte byte1262;            
        [FieldOffset(1263)] public byte byte1263;            
        [FieldOffset(1264)] public byte byte1264;            
        [FieldOffset(1265)] public byte byte1265;            
        [FieldOffset(1266)] public byte byte1266;            
        [FieldOffset(1267)] public byte byte1267;            
        [FieldOffset(1268)] public byte byte1268;            
        [FieldOffset(1269)] public byte byte1269;            
        [FieldOffset(1270)] public byte byte1270;            
        [FieldOffset(1271)] public byte byte1271;            
        [FieldOffset(1272)] public byte byte1272;            
        [FieldOffset(1273)] public byte byte1273;            
        [FieldOffset(1274)] public byte byte1274;            
        [FieldOffset(1275)] public byte byte1275;            
        [FieldOffset(1276)] public byte byte1276;            
        [FieldOffset(1277)] public byte byte1277;            
        [FieldOffset(1278)] public byte byte1278;            
        [FieldOffset(1279)] public byte byte1279;            
        [FieldOffset(1280)] public byte byte1280;            
        [FieldOffset(1281)] public byte byte1281;            
        [FieldOffset(1282)] public byte byte1282;            
        [FieldOffset(1283)] public byte byte1283;            
        [FieldOffset(1284)] public byte byte1284;            
        [FieldOffset(1285)] public byte byte1285;            
        [FieldOffset(1286)] public byte byte1286;            
        [FieldOffset(1287)] public byte byte1287;            
        [FieldOffset(1288)] public byte byte1288;            
        [FieldOffset(1289)] public byte byte1289;            
        [FieldOffset(1290)] public byte byte1290;            
        [FieldOffset(1291)] public byte byte1291;            
        [FieldOffset(1292)] public byte byte1292;            
        [FieldOffset(1293)] public byte byte1293;            
        [FieldOffset(1294)] public byte byte1294;            
        [FieldOffset(1295)] public byte byte1295;            
        [FieldOffset(1296)] public byte byte1296;            
        [FieldOffset(1297)] public byte byte1297;            
        [FieldOffset(1298)] public byte byte1298;            
        [FieldOffset(1299)] public byte byte1299;            
        [FieldOffset(1300)] public byte byte1300;            
        [FieldOffset(1301)] public byte byte1301;            
        [FieldOffset(1302)] public byte byte1302;            
        [FieldOffset(1303)] public byte byte1303;            
        [FieldOffset(1304)] public byte byte1304;            
        [FieldOffset(1305)] public byte byte1305;            
        [FieldOffset(1306)] public byte byte1306;            
        [FieldOffset(1307)] public byte byte1307;            
        [FieldOffset(1308)] public byte byte1308;            
        [FieldOffset(1309)] public byte byte1309;            
        [FieldOffset(1310)] public byte byte1310;            
        [FieldOffset(1311)] public byte byte1311;            
        [FieldOffset(1312)] public byte byte1312;            
        [FieldOffset(1313)] public byte byte1313;            
        [FieldOffset(1314)] public byte byte1314;            
        [FieldOffset(1315)] public byte byte1315;            
        [FieldOffset(1316)] public byte byte1316;            
        [FieldOffset(1317)] public byte byte1317;            
        [FieldOffset(1318)] public byte byte1318;            
        [FieldOffset(1319)] public byte byte1319;            
        [FieldOffset(1320)] public byte byte1320;            
        [FieldOffset(1321)] public byte byte1321;            
        [FieldOffset(1322)] public byte byte1322;            
        [FieldOffset(1323)] public byte byte1323;            
        [FieldOffset(1324)] public byte byte1324;            
        [FieldOffset(1325)] public byte byte1325;            
        [FieldOffset(1326)] public byte byte1326;            
        [FieldOffset(1327)] public byte byte1327;            
        [FieldOffset(1328)] public byte byte1328;            
        [FieldOffset(1329)] public byte byte1329;            
        [FieldOffset(1330)] public byte byte1330;            
        [FieldOffset(1331)] public byte byte1331;            
        [FieldOffset(1332)] public byte byte1332;            
        [FieldOffset(1333)] public byte byte1333;            
        [FieldOffset(1334)] public byte byte1334;            
        [FieldOffset(1335)] public byte byte1335;            
        [FieldOffset(1336)] public byte byte1336;            
        [FieldOffset(1337)] public byte byte1337;            
        [FieldOffset(1338)] public byte byte1338;            
        [FieldOffset(1339)] public byte byte1339;            
        [FieldOffset(1340)] public byte byte1340;            
        [FieldOffset(1341)] public byte byte1341;            
        [FieldOffset(1342)] public byte byte1342;            
        [FieldOffset(1343)] public byte byte1343;            
        [FieldOffset(1344)] public byte byte1344;            
        [FieldOffset(1345)] public byte byte1345;            
        [FieldOffset(1346)] public byte byte1346;            
        [FieldOffset(1347)] public byte byte1347;            
        [FieldOffset(1348)] public byte byte1348;            
        [FieldOffset(1349)] public byte byte1349;            
        [FieldOffset(1350)] public byte byte1350;            
        [FieldOffset(1351)] public byte byte1351;            
        [FieldOffset(1352)] public byte byte1352;            
        [FieldOffset(1353)] public byte byte1353;            
        [FieldOffset(1354)] public byte byte1354;            
        [FieldOffset(1355)] public byte byte1355;            
        [FieldOffset(1356)] public byte byte1356;            
        [FieldOffset(1357)] public byte byte1357;            
        [FieldOffset(1358)] public byte byte1358;            
        [FieldOffset(1359)] public byte byte1359;            
        [FieldOffset(1360)] public byte byte1360;            
        [FieldOffset(1361)] public byte byte1361;            
        [FieldOffset(1362)] public byte byte1362;            
        [FieldOffset(1363)] public byte byte1363;            
        [FieldOffset(1364)] public byte byte1364;            
        [FieldOffset(1365)] public byte byte1365;            
        [FieldOffset(1366)] public byte byte1366;            
        [FieldOffset(1367)] public byte byte1367;            
        [FieldOffset(1368)] public byte byte1368;            
        [FieldOffset(1369)] public byte byte1369;            
        [FieldOffset(1370)] public byte byte1370;            
        [FieldOffset(1371)] public byte byte1371;            
        [FieldOffset(1372)] public byte byte1372;            
        [FieldOffset(1373)] public byte byte1373;            
        [FieldOffset(1374)] public byte byte1374;            
        [FieldOffset(1375)] public byte byte1375;            
        [FieldOffset(1376)] public byte byte1376;            
        [FieldOffset(1377)] public byte byte1377;            
        [FieldOffset(1378)] public byte byte1378;            
        [FieldOffset(1379)] public byte byte1379;            
        [FieldOffset(1380)] public byte byte1380;            
        [FieldOffset(1381)] public byte byte1381;            
        [FieldOffset(1382)] public byte byte1382;            
        [FieldOffset(1383)] public byte byte1383;            
        [FieldOffset(1384)] public byte byte1384;            
        [FieldOffset(1385)] public byte byte1385;            
        [FieldOffset(1386)] public byte byte1386;            
        [FieldOffset(1387)] public byte byte1387;            
        [FieldOffset(1388)] public byte byte1388;            
        [FieldOffset(1389)] public byte byte1389;            
        [FieldOffset(1390)] public byte byte1390;            
        [FieldOffset(1391)] public byte byte1391;            
        [FieldOffset(1392)] public byte byte1392;            
        [FieldOffset(1393)] public byte byte1393;            
        [FieldOffset(1394)] public byte byte1394;            
        [FieldOffset(1395)] public byte byte1395;            
        [FieldOffset(1396)] public byte byte1396;            
        [FieldOffset(1397)] public byte byte1397;            
        [FieldOffset(1398)] public byte byte1398;            
        [FieldOffset(1399)] public byte byte1399;            
        [FieldOffset(1400)] public byte byte1400;            
        [FieldOffset(1401)] public byte byte1401;            
        [FieldOffset(1402)] public byte byte1402;            
        [FieldOffset(1403)] public byte byte1403;            
        [FieldOffset(1404)] public byte byte1404;            
        [FieldOffset(1405)] public byte byte1405;            
        [FieldOffset(1406)] public byte byte1406;            
        [FieldOffset(1407)] public byte byte1407;            
        [FieldOffset(1408)] public byte byte1408;            
        [FieldOffset(1409)] public byte byte1409;            
        [FieldOffset(1410)] public byte byte1410;            
        [FieldOffset(1411)] public byte byte1411;            
        [FieldOffset(1412)] public byte byte1412;            
        [FieldOffset(1413)] public byte byte1413;            
        [FieldOffset(1414)] public byte byte1414;            
        [FieldOffset(1415)] public byte byte1415;            
        [FieldOffset(1416)] public byte byte1416;            
        [FieldOffset(1417)] public byte byte1417;            
        [FieldOffset(1418)] public byte byte1418;            
        [FieldOffset(1419)] public byte byte1419;            
        [FieldOffset(1420)] public byte byte1420;            
        [FieldOffset(1421)] public byte byte1421;            
        [FieldOffset(1422)] public byte byte1422;            
        [FieldOffset(1423)] public byte byte1423;            
        [FieldOffset(1424)] public byte byte1424;            
        [FieldOffset(1425)] public byte byte1425;            
        [FieldOffset(1426)] public byte byte1426;            
        [FieldOffset(1427)] public byte byte1427;            
        [FieldOffset(1428)] public byte byte1428;            
        [FieldOffset(1429)] public byte byte1429;            
        [FieldOffset(1430)] public byte byte1430;            
        [FieldOffset(1431)] public byte byte1431;            
        [FieldOffset(1432)] public byte byte1432;            
        [FieldOffset(1433)] public byte byte1433;            
        [FieldOffset(1434)] public byte byte1434;            
        [FieldOffset(1435)] public byte byte1435;            
        [FieldOffset(1436)] public byte byte1436;            
        [FieldOffset(1437)] public byte byte1437;            
        [FieldOffset(1438)] public byte byte1438;            
        [FieldOffset(1439)] public byte byte1439;            
        [FieldOffset(1440)] public byte byte1440;            
        [FieldOffset(1441)] public byte byte1441;            
        [FieldOffset(1442)] public byte byte1442;            
        [FieldOffset(1443)] public byte byte1443;            
        [FieldOffset(1444)] public byte byte1444;            
        [FieldOffset(1445)] public byte byte1445;            
        [FieldOffset(1446)] public byte byte1446;            
        [FieldOffset(1447)] public byte byte1447;            
        [FieldOffset(1448)] public byte byte1448;            
        [FieldOffset(1449)] public byte byte1449;            
        [FieldOffset(1450)] public byte byte1450;            
        [FieldOffset(1451)] public byte byte1451;            
        [FieldOffset(1452)] public byte byte1452;            
        [FieldOffset(1453)] public byte byte1453;            
        [FieldOffset(1454)] public byte byte1454;            
        [FieldOffset(1455)] public byte byte1455;            
        [FieldOffset(1456)] public byte byte1456;            
        [FieldOffset(1457)] public byte byte1457;            
        [FieldOffset(1458)] public byte byte1458;            
        [FieldOffset(1459)] public byte byte1459;            
        [FieldOffset(1460)] public byte byte1460;            
        [FieldOffset(1461)] public byte byte1461;            
        [FieldOffset(1462)] public byte byte1462;            
        [FieldOffset(1463)] public byte byte1463;            
        [FieldOffset(1464)] public byte byte1464;            
        [FieldOffset(1465)] public byte byte1465;            
        [FieldOffset(1466)] public byte byte1466;            
        [FieldOffset(1467)] public byte byte1467;            
        [FieldOffset(1468)] public byte byte1468;            
        [FieldOffset(1469)] public byte byte1469;            
        [FieldOffset(1470)] public byte byte1470;            
        [FieldOffset(1471)] public byte byte1471;            
        [FieldOffset(1472)] public byte byte1472;            
        [FieldOffset(1473)] public byte byte1473;            
        [FieldOffset(1474)] public byte byte1474;            
        [FieldOffset(1475)] public byte byte1475;            
        [FieldOffset(1476)] public byte byte1476;            
        [FieldOffset(1477)] public byte byte1477;            
        [FieldOffset(1478)] public byte byte1478;            
        [FieldOffset(1479)] public byte byte1479;            
        [FieldOffset(1480)] public byte byte1480;            
        [FieldOffset(1481)] public byte byte1481;            
        [FieldOffset(1482)] public byte byte1482;            
        [FieldOffset(1483)] public byte byte1483;            
        [FieldOffset(1484)] public byte byte1484;            
        [FieldOffset(1485)] public byte byte1485;            
        [FieldOffset(1486)] public byte byte1486;            
        [FieldOffset(1487)] public byte byte1487;            
        [FieldOffset(1488)] public byte byte1488;            
        [FieldOffset(1489)] public byte byte1489;            
        [FieldOffset(1490)] public byte byte1490;            
        [FieldOffset(1491)] public byte byte1491;            
        [FieldOffset(1492)] public byte byte1492;            
        [FieldOffset(1493)] public byte byte1493;            
        [FieldOffset(1494)] public byte byte1494;            
        [FieldOffset(1495)] public byte byte1495;            
        [FieldOffset(1496)] public byte byte1496;            
        [FieldOffset(1497)] public byte byte1497;            
        [FieldOffset(1498)] public byte byte1498;            
        [FieldOffset(1499)] public byte byte1499;            
        [FieldOffset(1500)] public byte byte1500;            
        [FieldOffset(1501)] public byte byte1501;            
        [FieldOffset(1502)] public byte byte1502;            
        [FieldOffset(1503)] public byte byte1503;            
        [FieldOffset(1504)] public byte byte1504;            
        [FieldOffset(1505)] public byte byte1505;            
        [FieldOffset(1506)] public byte byte1506;            
        [FieldOffset(1507)] public byte byte1507;            
        [FieldOffset(1508)] public byte byte1508;            
        [FieldOffset(1509)] public byte byte1509;            
        [FieldOffset(1510)] public byte byte1510;            
        [FieldOffset(1511)] public byte byte1511;            
        [FieldOffset(1512)] public byte byte1512;            
        [FieldOffset(1513)] public byte byte1513;            
        [FieldOffset(1514)] public byte byte1514;            
        [FieldOffset(1515)] public byte byte1515;            
        [FieldOffset(1516)] public byte byte1516;            
        [FieldOffset(1517)] public byte byte1517;            
        [FieldOffset(1518)] public byte byte1518;            
        [FieldOffset(1519)] public byte byte1519;            
        [FieldOffset(1520)] public byte byte1520;            
        [FieldOffset(1521)] public byte byte1521;            
        [FieldOffset(1522)] public byte byte1522;            
        [FieldOffset(1523)] public byte byte1523;            
        [FieldOffset(1524)] public byte byte1524;            
        [FieldOffset(1525)] public byte byte1525;            
        [FieldOffset(1526)] public byte byte1526;            
        [FieldOffset(1527)] public byte byte1527;            
        [FieldOffset(1528)] public byte byte1528;            
        [FieldOffset(1529)] public byte byte1529;            
        [FieldOffset(1530)] public byte byte1530;            
        [FieldOffset(1531)] public byte byte1531;            
        [FieldOffset(1532)] public byte byte1532;            
        [FieldOffset(1533)] public byte byte1533;            
        [FieldOffset(1534)] public byte byte1534;            
        [FieldOffset(1535)] public byte byte1535;            
        [FieldOffset(1536)] public byte byte1536;            
        [FieldOffset(1537)] public byte byte1537;            
        [FieldOffset(1538)] public byte byte1538;            
        [FieldOffset(1539)] public byte byte1539;            
        [FieldOffset(1540)] public byte byte1540;            
        [FieldOffset(1541)] public byte byte1541;            
        [FieldOffset(1542)] public byte byte1542;            
        [FieldOffset(1543)] public byte byte1543;            
        [FieldOffset(1544)] public byte byte1544;            
        [FieldOffset(1545)] public byte byte1545;            
        [FieldOffset(1546)] public byte byte1546;            
        [FieldOffset(1547)] public byte byte1547;            
        [FieldOffset(1548)] public byte byte1548;            
        [FieldOffset(1549)] public byte byte1549;            
        [FieldOffset(1550)] public byte byte1550;            
        [FieldOffset(1551)] public byte byte1551;            
        [FieldOffset(1552)] public byte byte1552;            
        [FieldOffset(1553)] public byte byte1553;            
        [FieldOffset(1554)] public byte byte1554;            
        [FieldOffset(1555)] public byte byte1555;            
        [FieldOffset(1556)] public byte byte1556;            
        [FieldOffset(1557)] public byte byte1557;            
        [FieldOffset(1558)] public byte byte1558;            
        [FieldOffset(1559)] public byte byte1559;            
        [FieldOffset(1560)] public byte byte1560;            
        [FieldOffset(1561)] public byte byte1561;            
        [FieldOffset(1562)] public byte byte1562;            
        [FieldOffset(1563)] public byte byte1563;            
        [FieldOffset(1564)] public byte byte1564;            
        [FieldOffset(1565)] public byte byte1565;            
        [FieldOffset(1566)] public byte byte1566;            
        [FieldOffset(1567)] public byte byte1567;            
        [FieldOffset(1568)] public byte byte1568;            
        [FieldOffset(1569)] public byte byte1569;            
        [FieldOffset(1570)] public byte byte1570;            
        [FieldOffset(1571)] public byte byte1571;            
        [FieldOffset(1572)] public byte byte1572;            
        [FieldOffset(1573)] public byte byte1573;            
        [FieldOffset(1574)] public byte byte1574;            
        [FieldOffset(1575)] public byte byte1575;            
        [FieldOffset(1576)] public byte byte1576;            
        [FieldOffset(1577)] public byte byte1577;            
        [FieldOffset(1578)] public byte byte1578;            
        [FieldOffset(1579)] public byte byte1579;            
        [FieldOffset(1580)] public byte byte1580;            
        [FieldOffset(1581)] public byte byte1581;            
        [FieldOffset(1582)] public byte byte1582;            
        [FieldOffset(1583)] public byte byte1583;            
        [FieldOffset(1584)] public byte byte1584;            
        [FieldOffset(1585)] public byte byte1585;            
        [FieldOffset(1586)] public byte byte1586;            
        [FieldOffset(1587)] public byte byte1587;            
        [FieldOffset(1588)] public byte byte1588;            
        [FieldOffset(1589)] public byte byte1589;            
        [FieldOffset(1590)] public byte byte1590;            
        [FieldOffset(1591)] public byte byte1591;            
        [FieldOffset(1592)] public byte byte1592;            
        [FieldOffset(1593)] public byte byte1593;            
        [FieldOffset(1594)] public byte byte1594;            
        [FieldOffset(1595)] public byte byte1595;            
        [FieldOffset(1596)] public byte byte1596;            
        [FieldOffset(1597)] public byte byte1597;            
        [FieldOffset(1598)] public byte byte1598;            
        [FieldOffset(1599)] public byte byte1599;            
        [FieldOffset(1600)] public byte byte1600;            
        [FieldOffset(1601)] public byte byte1601;            
        [FieldOffset(1602)] public byte byte1602;            
        [FieldOffset(1603)] public byte byte1603;            
        [FieldOffset(1604)] public byte byte1604;            
        [FieldOffset(1605)] public byte byte1605;            
        [FieldOffset(1606)] public byte byte1606;            
        [FieldOffset(1607)] public byte byte1607;            
        [FieldOffset(1608)] public byte byte1608;            
        [FieldOffset(1609)] public byte byte1609;            
        [FieldOffset(1610)] public byte byte1610;            
        [FieldOffset(1611)] public byte byte1611;            
        [FieldOffset(1612)] public byte byte1612;            
        [FieldOffset(1613)] public byte byte1613;            
        [FieldOffset(1614)] public byte byte1614;            
        [FieldOffset(1615)] public byte byte1615;            
        [FieldOffset(1616)] public byte byte1616;            
        [FieldOffset(1617)] public byte byte1617;            
        [FieldOffset(1618)] public byte byte1618;            
        [FieldOffset(1619)] public byte byte1619;            
        [FieldOffset(1620)] public byte byte1620;            
        [FieldOffset(1621)] public byte byte1621;            
        [FieldOffset(1622)] public byte byte1622;            
        [FieldOffset(1623)] public byte byte1623;            
        [FieldOffset(1624)] public byte byte1624;            
        [FieldOffset(1625)] public byte byte1625;            
        [FieldOffset(1626)] public byte byte1626;            
        [FieldOffset(1627)] public byte byte1627;            
        [FieldOffset(1628)] public byte byte1628;            
        [FieldOffset(1629)] public byte byte1629;            
        [FieldOffset(1630)] public byte byte1630;            
        [FieldOffset(1631)] public byte byte1631;            
        [FieldOffset(1632)] public byte byte1632;            
        [FieldOffset(1633)] public byte byte1633;            
        [FieldOffset(1634)] public byte byte1634;            
        [FieldOffset(1635)] public byte byte1635;            
        [FieldOffset(1636)] public byte byte1636;            
        [FieldOffset(1637)] public byte byte1637;            
        [FieldOffset(1638)] public byte byte1638;            
        [FieldOffset(1639)] public byte byte1639;            
        [FieldOffset(1640)] public byte byte1640;            
        [FieldOffset(1641)] public byte byte1641;            
        [FieldOffset(1642)] public byte byte1642;            
        [FieldOffset(1643)] public byte byte1643;            
        [FieldOffset(1644)] public byte byte1644;            
        [FieldOffset(1645)] public byte byte1645;            
        [FieldOffset(1646)] public byte byte1646;            
        [FieldOffset(1647)] public byte byte1647;            
        [FieldOffset(1648)] public byte byte1648;            
        [FieldOffset(1649)] public byte byte1649;            
        [FieldOffset(1650)] public byte byte1650;            
        [FieldOffset(1651)] public byte byte1651;            
        [FieldOffset(1652)] public byte byte1652;            
        [FieldOffset(1653)] public byte byte1653;            
        [FieldOffset(1654)] public byte byte1654;            
        [FieldOffset(1655)] public byte byte1655;            
        [FieldOffset(1656)] public byte byte1656;            
        [FieldOffset(1657)] public byte byte1657;            
        [FieldOffset(1658)] public byte byte1658;            
        [FieldOffset(1659)] public byte byte1659;            
        [FieldOffset(1660)] public byte byte1660;            
        [FieldOffset(1661)] public byte byte1661;            
        [FieldOffset(1662)] public byte byte1662;            
        [FieldOffset(1663)] public byte byte1663;            
        [FieldOffset(1664)] public byte byte1664;            
        [FieldOffset(1665)] public byte byte1665;            
        [FieldOffset(1666)] public byte byte1666;            
        [FieldOffset(1667)] public byte byte1667;            
        [FieldOffset(1668)] public byte byte1668;            
        [FieldOffset(1669)] public byte byte1669;            
        [FieldOffset(1670)] public byte byte1670;            
        [FieldOffset(1671)] public byte byte1671;            
        [FieldOffset(1672)] public byte byte1672;            
        [FieldOffset(1673)] public byte byte1673;            
        [FieldOffset(1674)] public byte byte1674;            
        [FieldOffset(1675)] public byte byte1675;            
        [FieldOffset(1676)] public byte byte1676;            
        [FieldOffset(1677)] public byte byte1677;            
        [FieldOffset(1678)] public byte byte1678;            
        [FieldOffset(1679)] public byte byte1679;            
        [FieldOffset(1680)] public byte byte1680;            
        [FieldOffset(1681)] public byte byte1681;            
        [FieldOffset(1682)] public byte byte1682;            
        [FieldOffset(1683)] public byte byte1683;            
        [FieldOffset(1684)] public byte byte1684;            
        [FieldOffset(1685)] public byte byte1685;            
        [FieldOffset(1686)] public byte byte1686;            
        [FieldOffset(1687)] public byte byte1687;            
        [FieldOffset(1688)] public byte byte1688;            
        [FieldOffset(1689)] public byte byte1689;            
        [FieldOffset(1690)] public byte byte1690;            
        [FieldOffset(1691)] public byte byte1691;            
        [FieldOffset(1692)] public byte byte1692;            
        [FieldOffset(1693)] public byte byte1693;            
        [FieldOffset(1694)] public byte byte1694;            
        [FieldOffset(1695)] public byte byte1695;            
        [FieldOffset(1696)] public byte byte1696;            
        [FieldOffset(1697)] public byte byte1697;            
        [FieldOffset(1698)] public byte byte1698;            
        [FieldOffset(1699)] public byte byte1699;            
        [FieldOffset(1700)] public byte byte1700;            
        [FieldOffset(1701)] public byte byte1701;            
        [FieldOffset(1702)] public byte byte1702;            
        [FieldOffset(1703)] public byte byte1703;            
        [FieldOffset(1704)] public byte byte1704;            
        [FieldOffset(1705)] public byte byte1705;            
        [FieldOffset(1706)] public byte byte1706;            
        [FieldOffset(1707)] public byte byte1707;            
        [FieldOffset(1708)] public byte byte1708;            
        [FieldOffset(1709)] public byte byte1709;            
        [FieldOffset(1710)] public byte byte1710;            
        [FieldOffset(1711)] public byte byte1711;            
        [FieldOffset(1712)] public byte byte1712;            
        [FieldOffset(1713)] public byte byte1713;            
        [FieldOffset(1714)] public byte byte1714;            
        [FieldOffset(1715)] public byte byte1715;            
        [FieldOffset(1716)] public byte byte1716;            
        [FieldOffset(1717)] public byte byte1717;            
        [FieldOffset(1718)] public byte byte1718;            
        [FieldOffset(1719)] public byte byte1719;            
        [FieldOffset(1720)] public byte byte1720;            
        [FieldOffset(1721)] public byte byte1721;            
        [FieldOffset(1722)] public byte byte1722;            
        [FieldOffset(1723)] public byte byte1723;            
        [FieldOffset(1724)] public byte byte1724;            
        [FieldOffset(1725)] public byte byte1725;            
        [FieldOffset(1726)] public byte byte1726;            
        [FieldOffset(1727)] public byte byte1727;            
        [FieldOffset(1728)] public byte byte1728;            
        [FieldOffset(1729)] public byte byte1729;            
        [FieldOffset(1730)] public byte byte1730;            
        [FieldOffset(1731)] public byte byte1731;            
        [FieldOffset(1732)] public byte byte1732;            
        [FieldOffset(1733)] public byte byte1733;            
        [FieldOffset(1734)] public byte byte1734;            
        [FieldOffset(1735)] public byte byte1735;            
        [FieldOffset(1736)] public byte byte1736;            
        [FieldOffset(1737)] public byte byte1737;            
        [FieldOffset(1738)] public byte byte1738;            
        [FieldOffset(1739)] public byte byte1739;            
        [FieldOffset(1740)] public byte byte1740;            
        [FieldOffset(1741)] public byte byte1741;            
        [FieldOffset(1742)] public byte byte1742;            
        [FieldOffset(1743)] public byte byte1743;            
        [FieldOffset(1744)] public byte byte1744;            
        [FieldOffset(1745)] public byte byte1745;            
        [FieldOffset(1746)] public byte byte1746;            
        [FieldOffset(1747)] public byte byte1747;            
        [FieldOffset(1748)] public byte byte1748;            
        [FieldOffset(1749)] public byte byte1749;            
        [FieldOffset(1750)] public byte byte1750;            
        [FieldOffset(1751)] public byte byte1751;            
        [FieldOffset(1752)] public byte byte1752;            
        [FieldOffset(1753)] public byte byte1753;            
        [FieldOffset(1754)] public byte byte1754;            
        [FieldOffset(1755)] public byte byte1755;            
        [FieldOffset(1756)] public byte byte1756;            
        [FieldOffset(1757)] public byte byte1757;            
        [FieldOffset(1758)] public byte byte1758;            
        [FieldOffset(1759)] public byte byte1759;            
        [FieldOffset(1760)] public byte byte1760;            
        [FieldOffset(1761)] public byte byte1761;            
        [FieldOffset(1762)] public byte byte1762;            
        [FieldOffset(1763)] public byte byte1763;            
        [FieldOffset(1764)] public byte byte1764;            
        [FieldOffset(1765)] public byte byte1765;            
        [FieldOffset(1766)] public byte byte1766;            
        [FieldOffset(1767)] public byte byte1767;            
        [FieldOffset(1768)] public byte byte1768;            
        [FieldOffset(1769)] public byte byte1769;            
        [FieldOffset(1770)] public byte byte1770;            
        [FieldOffset(1771)] public byte byte1771;            
        [FieldOffset(1772)] public byte byte1772;            
        [FieldOffset(1773)] public byte byte1773;            
        [FieldOffset(1774)] public byte byte1774;            
        [FieldOffset(1775)] public byte byte1775;            
        [FieldOffset(1776)] public byte byte1776;            
        [FieldOffset(1777)] public byte byte1777;            
        [FieldOffset(1778)] public byte byte1778;            
        [FieldOffset(1779)] public byte byte1779;            
        [FieldOffset(1780)] public byte byte1780;            
        [FieldOffset(1781)] public byte byte1781;            
        [FieldOffset(1782)] public byte byte1782;            
        [FieldOffset(1783)] public byte byte1783;            
        [FieldOffset(1784)] public byte byte1784;            
        [FieldOffset(1785)] public byte byte1785;            
        [FieldOffset(1786)] public byte byte1786;            
        [FieldOffset(1787)] public byte byte1787;            
        [FieldOffset(1788)] public byte byte1788;            
        [FieldOffset(1789)] public byte byte1789;            
        [FieldOffset(1790)] public byte byte1790;            
        [FieldOffset(1791)] public byte byte1791;            
        [FieldOffset(1792)] public byte byte1792;            
        [FieldOffset(1793)] public byte byte1793;            
        [FieldOffset(1794)] public byte byte1794;            
        [FieldOffset(1795)] public byte byte1795;            
        [FieldOffset(1796)] public byte byte1796;            
        [FieldOffset(1797)] public byte byte1797;            
        [FieldOffset(1798)] public byte byte1798;            
        [FieldOffset(1799)] public byte byte1799;            
        [FieldOffset(1800)] public byte byte1800;            
        [FieldOffset(1801)] public byte byte1801;            
        [FieldOffset(1802)] public byte byte1802;            
        [FieldOffset(1803)] public byte byte1803;            
        [FieldOffset(1804)] public byte byte1804;            
        [FieldOffset(1805)] public byte byte1805;            
        [FieldOffset(1806)] public byte byte1806;            
        [FieldOffset(1807)] public byte byte1807;            
        [FieldOffset(1808)] public byte byte1808;            
        [FieldOffset(1809)] public byte byte1809;            
        [FieldOffset(1810)] public byte byte1810;            
        [FieldOffset(1811)] public byte byte1811;            
        [FieldOffset(1812)] public byte byte1812;            
        [FieldOffset(1813)] public byte byte1813;            
        [FieldOffset(1814)] public byte byte1814;            
        [FieldOffset(1815)] public byte byte1815;            
        [FieldOffset(1816)] public byte byte1816;            
        [FieldOffset(1817)] public byte byte1817;            
        [FieldOffset(1818)] public byte byte1818;            
        [FieldOffset(1819)] public byte byte1819;            
        [FieldOffset(1820)] public byte byte1820;            
        [FieldOffset(1821)] public byte byte1821;            
        [FieldOffset(1822)] public byte byte1822;            
        [FieldOffset(1823)] public byte byte1823;            
        [FieldOffset(1824)] public byte byte1824;            
        [FieldOffset(1825)] public byte byte1825;            
        [FieldOffset(1826)] public byte byte1826;            
        [FieldOffset(1827)] public byte byte1827;            
        [FieldOffset(1828)] public byte byte1828;            
        [FieldOffset(1829)] public byte byte1829;            
        [FieldOffset(1830)] public byte byte1830;            
        [FieldOffset(1831)] public byte byte1831;            
        [FieldOffset(1832)] public byte byte1832;            
        [FieldOffset(1833)] public byte byte1833;            
        [FieldOffset(1834)] public byte byte1834;            
        [FieldOffset(1835)] public byte byte1835;            
        [FieldOffset(1836)] public byte byte1836;            
        [FieldOffset(1837)] public byte byte1837;            
        [FieldOffset(1838)] public byte byte1838;            
        [FieldOffset(1839)] public byte byte1839;            
        [FieldOffset(1840)] public byte byte1840;            
        [FieldOffset(1841)] public byte byte1841;            
        [FieldOffset(1842)] public byte byte1842;            
        [FieldOffset(1843)] public byte byte1843;            
        [FieldOffset(1844)] public byte byte1844;            
        [FieldOffset(1845)] public byte byte1845;            
        [FieldOffset(1846)] public byte byte1846;            
        [FieldOffset(1847)] public byte byte1847;            
        [FieldOffset(1848)] public byte byte1848;            
        [FieldOffset(1849)] public byte byte1849;            
        [FieldOffset(1850)] public byte byte1850;            
        [FieldOffset(1851)] public byte byte1851;            
        [FieldOffset(1852)] public byte byte1852;            
        [FieldOffset(1853)] public byte byte1853;            
        [FieldOffset(1854)] public byte byte1854;            
        [FieldOffset(1855)] public byte byte1855;            
        [FieldOffset(1856)] public byte byte1856;            
        [FieldOffset(1857)] public byte byte1857;            
        [FieldOffset(1858)] public byte byte1858;            
        [FieldOffset(1859)] public byte byte1859;            
        [FieldOffset(1860)] public byte byte1860;            
        [FieldOffset(1861)] public byte byte1861;            
        [FieldOffset(1862)] public byte byte1862;            
        [FieldOffset(1863)] public byte byte1863;            
        [FieldOffset(1864)] public byte byte1864;            
        [FieldOffset(1865)] public byte byte1865;            
        [FieldOffset(1866)] public byte byte1866;            
        [FieldOffset(1867)] public byte byte1867;            
        [FieldOffset(1868)] public byte byte1868;            
        [FieldOffset(1869)] public byte byte1869;            
        [FieldOffset(1870)] public byte byte1870;            
        [FieldOffset(1871)] public byte byte1871;            
        [FieldOffset(1872)] public byte byte1872;            
        [FieldOffset(1873)] public byte byte1873;            
        [FieldOffset(1874)] public byte byte1874;            
        [FieldOffset(1875)] public byte byte1875;            
        [FieldOffset(1876)] public byte byte1876;            
        [FieldOffset(1877)] public byte byte1877;            
        [FieldOffset(1878)] public byte byte1878;            
        [FieldOffset(1879)] public byte byte1879;            
        [FieldOffset(1880)] public byte byte1880;            
        [FieldOffset(1881)] public byte byte1881;            
        [FieldOffset(1882)] public byte byte1882;            
        [FieldOffset(1883)] public byte byte1883;            
        [FieldOffset(1884)] public byte byte1884;            
        [FieldOffset(1885)] public byte byte1885;            
        [FieldOffset(1886)] public byte byte1886;            
        [FieldOffset(1887)] public byte byte1887;            
        [FieldOffset(1888)] public byte byte1888;            
        [FieldOffset(1889)] public byte byte1889;            
        [FieldOffset(1890)] public byte byte1890;            
        [FieldOffset(1891)] public byte byte1891;            
        [FieldOffset(1892)] public byte byte1892;            
        [FieldOffset(1893)] public byte byte1893;            
        [FieldOffset(1894)] public byte byte1894;            
        [FieldOffset(1895)] public byte byte1895;            
        [FieldOffset(1896)] public byte byte1896;            
        [FieldOffset(1897)] public byte byte1897;            
        [FieldOffset(1898)] public byte byte1898;            
        [FieldOffset(1899)] public byte byte1899;            
        [FieldOffset(1900)] public byte byte1900;            
        [FieldOffset(1901)] public byte byte1901;            
        [FieldOffset(1902)] public byte byte1902;            
        [FieldOffset(1903)] public byte byte1903;            
        [FieldOffset(1904)] public byte byte1904;            
        [FieldOffset(1905)] public byte byte1905;            
        [FieldOffset(1906)] public byte byte1906;            
        [FieldOffset(1907)] public byte byte1907;            
        [FieldOffset(1908)] public byte byte1908;            
        [FieldOffset(1909)] public byte byte1909;            
        [FieldOffset(1910)] public byte byte1910;            
        [FieldOffset(1911)] public byte byte1911;            
        [FieldOffset(1912)] public byte byte1912;            
        [FieldOffset(1913)] public byte byte1913;            
        [FieldOffset(1914)] public byte byte1914;            
        [FieldOffset(1915)] public byte byte1915;            
        [FieldOffset(1916)] public byte byte1916;            
        [FieldOffset(1917)] public byte byte1917;            
        [FieldOffset(1918)] public byte byte1918;            
        [FieldOffset(1919)] public byte byte1919;            
        [FieldOffset(1920)] public byte byte1920;            
        [FieldOffset(1921)] public byte byte1921;            
        [FieldOffset(1922)] public byte byte1922;            
        [FieldOffset(1923)] public byte byte1923;            
        [FieldOffset(1924)] public byte byte1924;            
        [FieldOffset(1925)] public byte byte1925;            
        [FieldOffset(1926)] public byte byte1926;            
        [FieldOffset(1927)] public byte byte1927;            
        [FieldOffset(1928)] public byte byte1928;            
        [FieldOffset(1929)] public byte byte1929;            
        [FieldOffset(1930)] public byte byte1930;            
        [FieldOffset(1931)] public byte byte1931;            
        [FieldOffset(1932)] public byte byte1932;            
        [FieldOffset(1933)] public byte byte1933;            
        [FieldOffset(1934)] public byte byte1934;            
        [FieldOffset(1935)] public byte byte1935;            
        [FieldOffset(1936)] public byte byte1936;            
        [FieldOffset(1937)] public byte byte1937;            
        [FieldOffset(1938)] public byte byte1938;            
        [FieldOffset(1939)] public byte byte1939;            
        [FieldOffset(1940)] public byte byte1940;            
        [FieldOffset(1941)] public byte byte1941;            
        [FieldOffset(1942)] public byte byte1942;            
        [FieldOffset(1943)] public byte byte1943;            
        [FieldOffset(1944)] public byte byte1944;            
        [FieldOffset(1945)] public byte byte1945;            
        [FieldOffset(1946)] public byte byte1946;            
        [FieldOffset(1947)] public byte byte1947;            
        [FieldOffset(1948)] public byte byte1948;            
        [FieldOffset(1949)] public byte byte1949;            
        [FieldOffset(1950)] public byte byte1950;            
        [FieldOffset(1951)] public byte byte1951;            
        [FieldOffset(1952)] public byte byte1952;            
        [FieldOffset(1953)] public byte byte1953;            
        [FieldOffset(1954)] public byte byte1954;            
        [FieldOffset(1955)] public byte byte1955;            
        [FieldOffset(1956)] public byte byte1956;            
        [FieldOffset(1957)] public byte byte1957;            
        [FieldOffset(1958)] public byte byte1958;            
        [FieldOffset(1959)] public byte byte1959;            
        [FieldOffset(1960)] public byte byte1960;            
        [FieldOffset(1961)] public byte byte1961;            
        [FieldOffset(1962)] public byte byte1962;            
        [FieldOffset(1963)] public byte byte1963;            
        [FieldOffset(1964)] public byte byte1964;            
        [FieldOffset(1965)] public byte byte1965;            
        [FieldOffset(1966)] public byte byte1966;            
        [FieldOffset(1967)] public byte byte1967;            
        [FieldOffset(1968)] public byte byte1968;            
        [FieldOffset(1969)] public byte byte1969;            
        [FieldOffset(1970)] public byte byte1970;            
        [FieldOffset(1971)] public byte byte1971;            
        [FieldOffset(1972)] public byte byte1972;            
        [FieldOffset(1973)] public byte byte1973;            
        [FieldOffset(1974)] public byte byte1974;            
        [FieldOffset(1975)] public byte byte1975;            
        [FieldOffset(1976)] public byte byte1976;            
        [FieldOffset(1977)] public byte byte1977;            
        [FieldOffset(1978)] public byte byte1978;            
        [FieldOffset(1979)] public byte byte1979;            
        [FieldOffset(1980)] public byte byte1980;            
        [FieldOffset(1981)] public byte byte1981;            
        [FieldOffset(1982)] public byte byte1982;            
        [FieldOffset(1983)] public byte byte1983;            
        [FieldOffset(1984)] public byte byte1984;            
        [FieldOffset(1985)] public byte byte1985;            
        [FieldOffset(1986)] public byte byte1986;            
        [FieldOffset(1987)] public byte byte1987;            
        [FieldOffset(1988)] public byte byte1988;            
        [FieldOffset(1989)] public byte byte1989;            
        [FieldOffset(1990)] public byte byte1990;            
        [FieldOffset(1991)] public byte byte1991;            
        [FieldOffset(1992)] public byte byte1992;            
        [FieldOffset(1993)] public byte byte1993;            
        [FieldOffset(1994)] public byte byte1994;            
        [FieldOffset(1995)] public byte byte1995;            
        [FieldOffset(1996)] public byte byte1996;            
        [FieldOffset(1997)] public byte byte1997;            
        [FieldOffset(1998)] public byte byte1998;            
        [FieldOffset(1999)] public byte byte1999;            
        [FieldOffset(2000)] public byte byte2000;            
        [FieldOffset(2001)] public byte byte2001;            
        [FieldOffset(2002)] public byte byte2002;            
        [FieldOffset(2003)] public byte byte2003;            
        [FieldOffset(2004)] public byte byte2004;            
        [FieldOffset(2005)] public byte byte2005;            
        [FieldOffset(2006)] public byte byte2006;            
        [FieldOffset(2007)] public byte byte2007;            
        [FieldOffset(2008)] public byte byte2008;            
        [FieldOffset(2009)] public byte byte2009;            
        [FieldOffset(2010)] public byte byte2010;            
        [FieldOffset(2011)] public byte byte2011;            
        [FieldOffset(2012)] public byte byte2012;            
        [FieldOffset(2013)] public byte byte2013;            
        [FieldOffset(2014)] public byte byte2014;            
        [FieldOffset(2015)] public byte byte2015;            
        [FieldOffset(2016)] public byte byte2016;            
        [FieldOffset(2017)] public byte byte2017;            
        [FieldOffset(2018)] public byte byte2018;            
        [FieldOffset(2019)] public byte byte2019;            
        [FieldOffset(2020)] public byte byte2020;            
        [FieldOffset(2021)] public byte byte2021;            
        [FieldOffset(2022)] public byte byte2022;            
        [FieldOffset(2023)] public byte byte2023;            
        [FieldOffset(2024)] public byte byte2024;            
        [FieldOffset(2025)] public byte byte2025;            
        [FieldOffset(2026)] public byte byte2026;            
        [FieldOffset(2027)] public byte byte2027;            
        [FieldOffset(2028)] public byte byte2028;            
        [FieldOffset(2029)] public byte byte2029;            
        [FieldOffset(2030)] public byte byte2030;            
        [FieldOffset(2031)] public byte byte2031;            
        [FieldOffset(2032)] public byte byte2032;            
        [FieldOffset(2033)] public byte byte2033;            
        [FieldOffset(2034)] public byte byte2034;            
        [FieldOffset(2035)] public byte byte2035;            
        [FieldOffset(2036)] public byte byte2036;            
        [FieldOffset(2037)] public byte byte2037;            
        [FieldOffset(2038)] public byte byte2038;            
        [FieldOffset(2039)] public byte byte2039;            
        [FieldOffset(2040)] public byte byte2040;            
        [FieldOffset(2041)] public byte byte2041;            
        [FieldOffset(2042)] public byte byte2042;            
        [FieldOffset(2043)] public byte byte2043;            
        [FieldOffset(2044)] public byte byte2044;            
        [FieldOffset(2045)] public byte byte2045;            
        [FieldOffset(2046)] public byte byte2046;            
        [FieldOffset(2047)] public byte byte2047;            
        [FieldOffset(2048)] public byte byte2048;            
        [FieldOffset(2049)] public byte byte2049;            
        [FieldOffset(2050)] public byte byte2050;            
        [FieldOffset(2051)] public byte byte2051;            
        [FieldOffset(2052)] public byte byte2052;            
        [FieldOffset(2053)] public byte byte2053;            
        [FieldOffset(2054)] public byte byte2054;            
        [FieldOffset(2055)] public byte byte2055;            
        [FieldOffset(2056)] public byte byte2056;            
        [FieldOffset(2057)] public byte byte2057;            
        [FieldOffset(2058)] public byte byte2058;            
        [FieldOffset(2059)] public byte byte2059;            
        [FieldOffset(2060)] public byte byte2060;            
        [FieldOffset(2061)] public byte byte2061;            
        [FieldOffset(2062)] public byte byte2062;            
        [FieldOffset(2063)] public byte byte2063;            
        [FieldOffset(2064)] public byte byte2064;            
        [FieldOffset(2065)] public byte byte2065;            
        [FieldOffset(2066)] public byte byte2066;            
        [FieldOffset(2067)] public byte byte2067;            
        [FieldOffset(2068)] public byte byte2068;            
        [FieldOffset(2069)] public byte byte2069;            
        [FieldOffset(2070)] public byte byte2070;            
        [FieldOffset(2071)] public byte byte2071;            
        [FieldOffset(2072)] public byte byte2072;            
        [FieldOffset(2073)] public byte byte2073;            
        [FieldOffset(2074)] public byte byte2074;            
        [FieldOffset(2075)] public byte byte2075;            
        [FieldOffset(2076)] public byte byte2076;            
        [FieldOffset(2077)] public byte byte2077;            
        [FieldOffset(2078)] public byte byte2078;            
        [FieldOffset(2079)] public byte byte2079;            
        [FieldOffset(2080)] public byte byte2080;            
        [FieldOffset(2081)] public byte byte2081;            
        [FieldOffset(2082)] public byte byte2082;            
        [FieldOffset(2083)] public byte byte2083;            
        [FieldOffset(2084)] public byte byte2084;            
        [FieldOffset(2085)] public byte byte2085;            
        [FieldOffset(2086)] public byte byte2086;            
        [FieldOffset(2087)] public byte byte2087;            
        [FieldOffset(2088)] public byte byte2088;            
        [FieldOffset(2089)] public byte byte2089;            
        [FieldOffset(2090)] public byte byte2090;            
        [FieldOffset(2091)] public byte byte2091;            
        [FieldOffset(2092)] public byte byte2092;            
        [FieldOffset(2093)] public byte byte2093;            
        [FieldOffset(2094)] public byte byte2094;            
        [FieldOffset(2095)] public byte byte2095;            
        [FieldOffset(2096)] public byte byte2096;            
        [FieldOffset(2097)] public byte byte2097;            
        [FieldOffset(2098)] public byte byte2098;            
        [FieldOffset(2099)] public byte byte2099;            
        [FieldOffset(2100)] public byte byte2100;            
        [FieldOffset(2101)] public byte byte2101;            
        [FieldOffset(2102)] public byte byte2102;            
        [FieldOffset(2103)] public byte byte2103;            
        [FieldOffset(2104)] public byte byte2104;            
        [FieldOffset(2105)] public byte byte2105;            
        [FieldOffset(2106)] public byte byte2106;            
        [FieldOffset(2107)] public byte byte2107;            
        [FieldOffset(2108)] public byte byte2108;            
        [FieldOffset(2109)] public byte byte2109;            
        [FieldOffset(2110)] public byte byte2110;            
        [FieldOffset(2111)] public byte byte2111;            
        [FieldOffset(2112)] public byte byte2112;            
        [FieldOffset(2113)] public byte byte2113;            
        [FieldOffset(2114)] public byte byte2114;            
        [FieldOffset(2115)] public byte byte2115;            
        [FieldOffset(2116)] public byte byte2116;            
        [FieldOffset(2117)] public byte byte2117;            
        [FieldOffset(2118)] public byte byte2118;            
        [FieldOffset(2119)] public byte byte2119;            
        [FieldOffset(2120)] public byte byte2120;            
        [FieldOffset(2121)] public byte byte2121;            
        [FieldOffset(2122)] public byte byte2122;            
        [FieldOffset(2123)] public byte byte2123;            
        [FieldOffset(2124)] public byte byte2124;            
        [FieldOffset(2125)] public byte byte2125;            
        [FieldOffset(2126)] public byte byte2126;            
        [FieldOffset(2127)] public byte byte2127;            
        [FieldOffset(2128)] public byte byte2128;            
        [FieldOffset(2129)] public byte byte2129;            
        [FieldOffset(2130)] public byte byte2130;            
        [FieldOffset(2131)] public byte byte2131;            
        [FieldOffset(2132)] public byte byte2132;            
        [FieldOffset(2133)] public byte byte2133;            
        [FieldOffset(2134)] public byte byte2134;            
        [FieldOffset(2135)] public byte byte2135;            
        [FieldOffset(2136)] public byte byte2136;            
        [FieldOffset(2137)] public byte byte2137;            
        [FieldOffset(2138)] public byte byte2138;            
        [FieldOffset(2139)] public byte byte2139;            
        [FieldOffset(2140)] public byte byte2140;            
        [FieldOffset(2141)] public byte byte2141;            
        [FieldOffset(2142)] public byte byte2142;            
        [FieldOffset(2143)] public byte byte2143;            
        [FieldOffset(2144)] public byte byte2144;            
        [FieldOffset(2145)] public byte byte2145;            
        [FieldOffset(2146)] public byte byte2146;            
        [FieldOffset(2147)] public byte byte2147;            
        [FieldOffset(2148)] public byte byte2148;            
        [FieldOffset(2149)] public byte byte2149;            
        [FieldOffset(2150)] public byte byte2150;            
        [FieldOffset(2151)] public byte byte2151;            
        [FieldOffset(2152)] public byte byte2152;            
        [FieldOffset(2153)] public byte byte2153;            
        [FieldOffset(2154)] public byte byte2154;            
        [FieldOffset(2155)] public byte byte2155;            
        [FieldOffset(2156)] public byte byte2156;            
        [FieldOffset(2157)] public byte byte2157;            
        [FieldOffset(2158)] public byte byte2158;            
        [FieldOffset(2159)] public byte byte2159;            
        [FieldOffset(2160)] public byte byte2160;            
        [FieldOffset(2161)] public byte byte2161;            
        [FieldOffset(2162)] public byte byte2162;            
        [FieldOffset(2163)] public byte byte2163;            
        [FieldOffset(2164)] public byte byte2164;            
        [FieldOffset(2165)] public byte byte2165;            
        [FieldOffset(2166)] public byte byte2166;            
        [FieldOffset(2167)] public byte byte2167;            
        [FieldOffset(2168)] public byte byte2168;            
        [FieldOffset(2169)] public byte byte2169;            
        [FieldOffset(2170)] public byte byte2170;            
        [FieldOffset(2171)] public byte byte2171;            
        [FieldOffset(2172)] public byte byte2172;            
        [FieldOffset(2173)] public byte byte2173;            
        [FieldOffset(2174)] public byte byte2174;            
        [FieldOffset(2175)] public byte byte2175;            
        [FieldOffset(2176)] public byte byte2176;            
        [FieldOffset(2177)] public byte byte2177;            
        [FieldOffset(2178)] public byte byte2178;            
        [FieldOffset(2179)] public byte byte2179;            
        [FieldOffset(2180)] public byte byte2180;            
        [FieldOffset(2181)] public byte byte2181;            
        [FieldOffset(2182)] public byte byte2182;            
        [FieldOffset(2183)] public byte byte2183;            
        [FieldOffset(2184)] public byte byte2184;            
        [FieldOffset(2185)] public byte byte2185;            
        [FieldOffset(2186)] public byte byte2186;            
        [FieldOffset(2187)] public byte byte2187;            
        [FieldOffset(2188)] public byte byte2188;            
        [FieldOffset(2189)] public byte byte2189;            
        [FieldOffset(2190)] public byte byte2190;            
        [FieldOffset(2191)] public byte byte2191;            
        [FieldOffset(2192)] public byte byte2192;            
        [FieldOffset(2193)] public byte byte2193;            
        [FieldOffset(2194)] public byte byte2194;            
        [FieldOffset(2195)] public byte byte2195;            
        [FieldOffset(2196)] public byte byte2196;            
        [FieldOffset(2197)] public byte byte2197;            
        [FieldOffset(2198)] public byte byte2198;            
        [FieldOffset(2199)] public byte byte2199;            
        [FieldOffset(2200)] public byte byte2200;            
        [FieldOffset(2201)] public byte byte2201;            
        [FieldOffset(2202)] public byte byte2202;            
        [FieldOffset(2203)] public byte byte2203;            
        [FieldOffset(2204)] public byte byte2204;            
        [FieldOffset(2205)] public byte byte2205;            
        [FieldOffset(2206)] public byte byte2206;            
        [FieldOffset(2207)] public byte byte2207;            
        [FieldOffset(2208)] public byte byte2208;            
        [FieldOffset(2209)] public byte byte2209;            
        [FieldOffset(2210)] public byte byte2210;            
        [FieldOffset(2211)] public byte byte2211;            
        [FieldOffset(2212)] public byte byte2212;            
        [FieldOffset(2213)] public byte byte2213;            
        [FieldOffset(2214)] public byte byte2214;            
        [FieldOffset(2215)] public byte byte2215;            
        [FieldOffset(2216)] public byte byte2216;            
        [FieldOffset(2217)] public byte byte2217;            
        [FieldOffset(2218)] public byte byte2218;            
        [FieldOffset(2219)] public byte byte2219;            
        [FieldOffset(2220)] public byte byte2220;            
        [FieldOffset(2221)] public byte byte2221;            
        [FieldOffset(2222)] public byte byte2222;            
        [FieldOffset(2223)] public byte byte2223;            
        [FieldOffset(2224)] public byte byte2224;            
        [FieldOffset(2225)] public byte byte2225;            
        [FieldOffset(2226)] public byte byte2226;            
        [FieldOffset(2227)] public byte byte2227;            
        [FieldOffset(2228)] public byte byte2228;            
        [FieldOffset(2229)] public byte byte2229;            
        [FieldOffset(2230)] public byte byte2230;            
        [FieldOffset(2231)] public byte byte2231;            
        [FieldOffset(2232)] public byte byte2232;            
        [FieldOffset(2233)] public byte byte2233;            
        [FieldOffset(2234)] public byte byte2234;            
        [FieldOffset(2235)] public byte byte2235;            
        [FieldOffset(2236)] public byte byte2236;            
        [FieldOffset(2237)] public byte byte2237;            
        [FieldOffset(2238)] public byte byte2238;            
        [FieldOffset(2239)] public byte byte2239;            
        [FieldOffset(2240)] public byte byte2240;            
        [FieldOffset(2241)] public byte byte2241;            
        [FieldOffset(2242)] public byte byte2242;            
        [FieldOffset(2243)] public byte byte2243;            
        [FieldOffset(2244)] public byte byte2244;            
        [FieldOffset(2245)] public byte byte2245;            
        [FieldOffset(2246)] public byte byte2246;            
        [FieldOffset(2247)] public byte byte2247;            
        [FieldOffset(2248)] public byte byte2248;            
        [FieldOffset(2249)] public byte byte2249;            
        [FieldOffset(2250)] public byte byte2250;            
        [FieldOffset(2251)] public byte byte2251;            
        [FieldOffset(2252)] public byte byte2252;            
        [FieldOffset(2253)] public byte byte2253;            
        [FieldOffset(2254)] public byte byte2254;            
        [FieldOffset(2255)] public byte byte2255;            
        [FieldOffset(2256)] public byte byte2256;            
        [FieldOffset(2257)] public byte byte2257;            
        [FieldOffset(2258)] public byte byte2258;            
        [FieldOffset(2259)] public byte byte2259;            
        [FieldOffset(2260)] public byte byte2260;            
        [FieldOffset(2261)] public byte byte2261;            
        [FieldOffset(2262)] public byte byte2262;            
        [FieldOffset(2263)] public byte byte2263;            
        [FieldOffset(2264)] public byte byte2264;            
        [FieldOffset(2265)] public byte byte2265;            
        [FieldOffset(2266)] public byte byte2266;            
        [FieldOffset(2267)] public byte byte2267;            
        [FieldOffset(2268)] public byte byte2268;            
        [FieldOffset(2269)] public byte byte2269;            
        [FieldOffset(2270)] public byte byte2270;            
        [FieldOffset(2271)] public byte byte2271;            
        [FieldOffset(2272)] public byte byte2272;            
        [FieldOffset(2273)] public byte byte2273;            
        [FieldOffset(2274)] public byte byte2274;            
        [FieldOffset(2275)] public byte byte2275;            
        [FieldOffset(2276)] public byte byte2276;            
        [FieldOffset(2277)] public byte byte2277;            
        [FieldOffset(2278)] public byte byte2278;            
        [FieldOffset(2279)] public byte byte2279;            
        [FieldOffset(2280)] public byte byte2280;            
        [FieldOffset(2281)] public byte byte2281;            
        [FieldOffset(2282)] public byte byte2282;            
        [FieldOffset(2283)] public byte byte2283;            
        [FieldOffset(2284)] public byte byte2284;            
        [FieldOffset(2285)] public byte byte2285;            
        [FieldOffset(2286)] public byte byte2286;            
        [FieldOffset(2287)] public byte byte2287;            
        [FieldOffset(2288)] public byte byte2288;            
        [FieldOffset(2289)] public byte byte2289;            
        [FieldOffset(2290)] public byte byte2290;            
        [FieldOffset(2291)] public byte byte2291;            
        [FieldOffset(2292)] public byte byte2292;            
        [FieldOffset(2293)] public byte byte2293;            
        [FieldOffset(2294)] public byte byte2294;            
        [FieldOffset(2295)] public byte byte2295;            
        [FieldOffset(2296)] public byte byte2296;            
        [FieldOffset(2297)] public byte byte2297;            
        [FieldOffset(2298)] public byte byte2298;            
        [FieldOffset(2299)] public byte byte2299;            
        [FieldOffset(2300)] public byte byte2300;            
        [FieldOffset(2301)] public byte byte2301;            
        [FieldOffset(2302)] public byte byte2302;            
        [FieldOffset(2303)] public byte byte2303;            
        [FieldOffset(2304)] public byte byte2304;            
        [FieldOffset(2305)] public byte byte2305;            
        [FieldOffset(2306)] public byte byte2306;            
        [FieldOffset(2307)] public byte byte2307;            
        [FieldOffset(2308)] public byte byte2308;            
        [FieldOffset(2309)] public byte byte2309;            
        [FieldOffset(2310)] public byte byte2310;            
        [FieldOffset(2311)] public byte byte2311;            
        [FieldOffset(2312)] public byte byte2312;            
        [FieldOffset(2313)] public byte byte2313;            
        [FieldOffset(2314)] public byte byte2314;            
        [FieldOffset(2315)] public byte byte2315;            
        [FieldOffset(2316)] public byte byte2316;            
        [FieldOffset(2317)] public byte byte2317;            
        [FieldOffset(2318)] public byte byte2318;            
        [FieldOffset(2319)] public byte byte2319;            
        [FieldOffset(2320)] public byte byte2320;            
        [FieldOffset(2321)] public byte byte2321;            
        [FieldOffset(2322)] public byte byte2322;            
        [FieldOffset(2323)] public byte byte2323;            
        [FieldOffset(2324)] public byte byte2324;            
        [FieldOffset(2325)] public byte byte2325;            
        [FieldOffset(2326)] public byte byte2326;            
        [FieldOffset(2327)] public byte byte2327;            
        [FieldOffset(2328)] public byte byte2328;            
        [FieldOffset(2329)] public byte byte2329;            
        [FieldOffset(2330)] public byte byte2330;            
        [FieldOffset(2331)] public byte byte2331;            
        [FieldOffset(2332)] public byte byte2332;            
        [FieldOffset(2333)] public byte byte2333;            
        [FieldOffset(2334)] public byte byte2334;            
        [FieldOffset(2335)] public byte byte2335;            
        [FieldOffset(2336)] public byte byte2336;            
        [FieldOffset(2337)] public byte byte2337;            
        [FieldOffset(2338)] public byte byte2338;            
        [FieldOffset(2339)] public byte byte2339;            
        [FieldOffset(2340)] public byte byte2340;            
        [FieldOffset(2341)] public byte byte2341;            
        [FieldOffset(2342)] public byte byte2342;            
        [FieldOffset(2343)] public byte byte2343;            
        [FieldOffset(2344)] public byte byte2344;            
        [FieldOffset(2345)] public byte byte2345;            
        [FieldOffset(2346)] public byte byte2346;            
        [FieldOffset(2347)] public byte byte2347;            
        [FieldOffset(2348)] public byte byte2348;            
        [FieldOffset(2349)] public byte byte2349;            
        [FieldOffset(2350)] public byte byte2350;            
        [FieldOffset(2351)] public byte byte2351;            
        [FieldOffset(2352)] public byte byte2352;            
        [FieldOffset(2353)] public byte byte2353;            
        [FieldOffset(2354)] public byte byte2354;            
        [FieldOffset(2355)] public byte byte2355;            
        [FieldOffset(2356)] public byte byte2356;            
        [FieldOffset(2357)] public byte byte2357;            
        [FieldOffset(2358)] public byte byte2358;            
        [FieldOffset(2359)] public byte byte2359;            
        [FieldOffset(2360)] public byte byte2360;            
        [FieldOffset(2361)] public byte byte2361;            
        [FieldOffset(2362)] public byte byte2362;            
        [FieldOffset(2363)] public byte byte2363;            
        [FieldOffset(2364)] public byte byte2364;            
        [FieldOffset(2365)] public byte byte2365;            
        [FieldOffset(2366)] public byte byte2366;            
        [FieldOffset(2367)] public byte byte2367;            
        [FieldOffset(2368)] public byte byte2368;            
        [FieldOffset(2369)] public byte byte2369;            
        [FieldOffset(2370)] public byte byte2370;            
        [FieldOffset(2371)] public byte byte2371;            
        [FieldOffset(2372)] public byte byte2372;            
        [FieldOffset(2373)] public byte byte2373;            
        [FieldOffset(2374)] public byte byte2374;            
        [FieldOffset(2375)] public byte byte2375;            
        [FieldOffset(2376)] public byte byte2376;            
        [FieldOffset(2377)] public byte byte2377;            
        [FieldOffset(2378)] public byte byte2378;            
        [FieldOffset(2379)] public byte byte2379;            
        [FieldOffset(2380)] public byte byte2380;            
        [FieldOffset(2381)] public byte byte2381;            
        [FieldOffset(2382)] public byte byte2382;            
        [FieldOffset(2383)] public byte byte2383;            
        [FieldOffset(2384)] public byte byte2384;            
        [FieldOffset(2385)] public byte byte2385;            
        [FieldOffset(2386)] public byte byte2386;            
        [FieldOffset(2387)] public byte byte2387;            
        [FieldOffset(2388)] public byte byte2388;            
        [FieldOffset(2389)] public byte byte2389;            
        [FieldOffset(2390)] public byte byte2390;            
        [FieldOffset(2391)] public byte byte2391;            
        [FieldOffset(2392)] public byte byte2392;            
        [FieldOffset(2393)] public byte byte2393;            
        [FieldOffset(2394)] public byte byte2394;            
        [FieldOffset(2395)] public byte byte2395;            
        [FieldOffset(2396)] public byte byte2396;            
        [FieldOffset(2397)] public byte byte2397;            
        [FieldOffset(2398)] public byte byte2398;            
        [FieldOffset(2399)] public byte byte2399;            
        [FieldOffset(2400)] public byte byte2400;            
        [FieldOffset(2401)] public byte byte2401;            
        [FieldOffset(2402)] public byte byte2402;            
        [FieldOffset(2403)] public byte byte2403;            
        [FieldOffset(2404)] public byte byte2404;            
        [FieldOffset(2405)] public byte byte2405;            
        [FieldOffset(2406)] public byte byte2406;            
        [FieldOffset(2407)] public byte byte2407;            
        [FieldOffset(2408)] public byte byte2408;            
        [FieldOffset(2409)] public byte byte2409;            
        [FieldOffset(2410)] public byte byte2410;            
        [FieldOffset(2411)] public byte byte2411;            
        [FieldOffset(2412)] public byte byte2412;            
        [FieldOffset(2413)] public byte byte2413;            
        [FieldOffset(2414)] public byte byte2414;            
        [FieldOffset(2415)] public byte byte2415;            
        [FieldOffset(2416)] public byte byte2416;            
        [FieldOffset(2417)] public byte byte2417;            
        [FieldOffset(2418)] public byte byte2418;            
        [FieldOffset(2419)] public byte byte2419;            
        [FieldOffset(2420)] public byte byte2420;            
        [FieldOffset(2421)] public byte byte2421;            
        [FieldOffset(2422)] public byte byte2422;            
        [FieldOffset(2423)] public byte byte2423;            
        [FieldOffset(2424)] public byte byte2424;            
        [FieldOffset(2425)] public byte byte2425;            
        [FieldOffset(2426)] public byte byte2426;            
        [FieldOffset(2427)] public byte byte2427;            
        [FieldOffset(2428)] public byte byte2428;            
        [FieldOffset(2429)] public byte byte2429;            
        [FieldOffset(2430)] public byte byte2430;            
        [FieldOffset(2431)] public byte byte2431;            
        [FieldOffset(2432)] public byte byte2432;            
        [FieldOffset(2433)] public byte byte2433;            
        [FieldOffset(2434)] public byte byte2434;            
        [FieldOffset(2435)] public byte byte2435;            
        [FieldOffset(2436)] public byte byte2436;            
        [FieldOffset(2437)] public byte byte2437;            
        [FieldOffset(2438)] public byte byte2438;            
        [FieldOffset(2439)] public byte byte2439;            
        [FieldOffset(2440)] public byte byte2440;            
        [FieldOffset(2441)] public byte byte2441;            
        [FieldOffset(2442)] public byte byte2442;            
        [FieldOffset(2443)] public byte byte2443;            
        [FieldOffset(2444)] public byte byte2444;            
        [FieldOffset(2445)] public byte byte2445;            
        [FieldOffset(2446)] public byte byte2446;            
        [FieldOffset(2447)] public byte byte2447;            
        [FieldOffset(2448)] public byte byte2448;            
        [FieldOffset(2449)] public byte byte2449;            
        [FieldOffset(2450)] public byte byte2450;            
        [FieldOffset(2451)] public byte byte2451;            
        [FieldOffset(2452)] public byte byte2452;            
        [FieldOffset(2453)] public byte byte2453;            
        [FieldOffset(2454)] public byte byte2454;            
        [FieldOffset(2455)] public byte byte2455;            
        [FieldOffset(2456)] public byte byte2456;            
        [FieldOffset(2457)] public byte byte2457;            
        [FieldOffset(2458)] public byte byte2458;            
        [FieldOffset(2459)] public byte byte2459;            
        [FieldOffset(2460)] public byte byte2460;            
        [FieldOffset(2461)] public byte byte2461;            
        [FieldOffset(2462)] public byte byte2462;            
        [FieldOffset(2463)] public byte byte2463;            
        [FieldOffset(2464)] public byte byte2464;            
        [FieldOffset(2465)] public byte byte2465;            
        [FieldOffset(2466)] public byte byte2466;            
        [FieldOffset(2467)] public byte byte2467;            
        [FieldOffset(2468)] public byte byte2468;            
        [FieldOffset(2469)] public byte byte2469;            
        [FieldOffset(2470)] public byte byte2470;            
        [FieldOffset(2471)] public byte byte2471;            
        [FieldOffset(2472)] public byte byte2472;            
        [FieldOffset(2473)] public byte byte2473;            
        [FieldOffset(2474)] public byte byte2474;            
        [FieldOffset(2475)] public byte byte2475;            
        [FieldOffset(2476)] public byte byte2476;            
        [FieldOffset(2477)] public byte byte2477;            
        [FieldOffset(2478)] public byte byte2478;            
        [FieldOffset(2479)] public byte byte2479;            
        [FieldOffset(2480)] public byte byte2480;            
        [FieldOffset(2481)] public byte byte2481;            
        [FieldOffset(2482)] public byte byte2482;            
        [FieldOffset(2483)] public byte byte2483;            
        [FieldOffset(2484)] public byte byte2484;            
        [FieldOffset(2485)] public byte byte2485;            
        [FieldOffset(2486)] public byte byte2486;            
        [FieldOffset(2487)] public byte byte2487;            
        [FieldOffset(2488)] public byte byte2488;            
        [FieldOffset(2489)] public byte byte2489;            
        [FieldOffset(2490)] public byte byte2490;            
        [FieldOffset(2491)] public byte byte2491;            
        [FieldOffset(2492)] public byte byte2492;            
        [FieldOffset(2493)] public byte byte2493;            
        [FieldOffset(2494)] public byte byte2494;            
        [FieldOffset(2495)] public byte byte2495;            
        [FieldOffset(2496)] public byte byte2496;            
        [FieldOffset(2497)] public byte byte2497;            
        [FieldOffset(2498)] public byte byte2498;            
        [FieldOffset(2499)] public byte byte2499;            
        [FieldOffset(2500)] public byte byte2500;            
        [FieldOffset(2501)] public byte byte2501;            
        [FieldOffset(2502)] public byte byte2502;            
        [FieldOffset(2503)] public byte byte2503;            
        [FieldOffset(2504)] public byte byte2504;            
        [FieldOffset(2505)] public byte byte2505;            
        [FieldOffset(2506)] public byte byte2506;            
        [FieldOffset(2507)] public byte byte2507;            
        [FieldOffset(2508)] public byte byte2508;            
        [FieldOffset(2509)] public byte byte2509;            
        [FieldOffset(2510)] public byte byte2510;            
        [FieldOffset(2511)] public byte byte2511;            
        [FieldOffset(2512)] public byte byte2512;            
        [FieldOffset(2513)] public byte byte2513;            
        [FieldOffset(2514)] public byte byte2514;            
        [FieldOffset(2515)] public byte byte2515;            
        [FieldOffset(2516)] public byte byte2516;            
        [FieldOffset(2517)] public byte byte2517;            
        [FieldOffset(2518)] public byte byte2518;            
        [FieldOffset(2519)] public byte byte2519;            
        [FieldOffset(2520)] public byte byte2520;            
        [FieldOffset(2521)] public byte byte2521;            
        [FieldOffset(2522)] public byte byte2522;            
        [FieldOffset(2523)] public byte byte2523;            
        [FieldOffset(2524)] public byte byte2524;            
        [FieldOffset(2525)] public byte byte2525;            
        [FieldOffset(2526)] public byte byte2526;            
        [FieldOffset(2527)] public byte byte2527;            
        [FieldOffset(2528)] public byte byte2528;            
        [FieldOffset(2529)] public byte byte2529;            
        [FieldOffset(2530)] public byte byte2530;            
        [FieldOffset(2531)] public byte byte2531;            
        [FieldOffset(2532)] public byte byte2532;            
        [FieldOffset(2533)] public byte byte2533;            
        [FieldOffset(2534)] public byte byte2534;            
        [FieldOffset(2535)] public byte byte2535;            
        [FieldOffset(2536)] public byte byte2536;            
        [FieldOffset(2537)] public byte byte2537;            
        [FieldOffset(2538)] public byte byte2538;            
        [FieldOffset(2539)] public byte byte2539;            
        [FieldOffset(2540)] public byte byte2540;            
        [FieldOffset(2541)] public byte byte2541;            
        [FieldOffset(2542)] public byte byte2542;            
        [FieldOffset(2543)] public byte byte2543;            
        [FieldOffset(2544)] public byte byte2544;            
        [FieldOffset(2545)] public byte byte2545;            
        [FieldOffset(2546)] public byte byte2546;            
        [FieldOffset(2547)] public byte byte2547;            
        [FieldOffset(2548)] public byte byte2548;            
        [FieldOffset(2549)] public byte byte2549;            
        [FieldOffset(2550)] public byte byte2550;            
        [FieldOffset(2551)] public byte byte2551;            
        [FieldOffset(2552)] public byte byte2552;            
        [FieldOffset(2553)] public byte byte2553;            
        [FieldOffset(2554)] public byte byte2554;            
        [FieldOffset(2555)] public byte byte2555;            
        [FieldOffset(2556)] public byte byte2556;            
        [FieldOffset(2557)] public byte byte2557;            
        [FieldOffset(2558)] public byte byte2558;            
        [FieldOffset(2559)] public byte byte2559;            
        [FieldOffset(2560)] public byte byte2560;            
        [FieldOffset(2561)] public byte byte2561;            
        [FieldOffset(2562)] public byte byte2562;            
        [FieldOffset(2563)] public byte byte2563;            
        [FieldOffset(2564)] public byte byte2564;            
        [FieldOffset(2565)] public byte byte2565;            
        [FieldOffset(2566)] public byte byte2566;            
        [FieldOffset(2567)] public byte byte2567;            
        [FieldOffset(2568)] public byte byte2568;            
        [FieldOffset(2569)] public byte byte2569;            
        [FieldOffset(2570)] public byte byte2570;            
        [FieldOffset(2571)] public byte byte2571;            
        [FieldOffset(2572)] public byte byte2572;            
        [FieldOffset(2573)] public byte byte2573;            
        [FieldOffset(2574)] public byte byte2574;            
        [FieldOffset(2575)] public byte byte2575;            
        [FieldOffset(2576)] public byte byte2576;            
        [FieldOffset(2577)] public byte byte2577;            
        [FieldOffset(2578)] public byte byte2578;            
        [FieldOffset(2579)] public byte byte2579;            
        [FieldOffset(2580)] public byte byte2580;            
        [FieldOffset(2581)] public byte byte2581;            
        [FieldOffset(2582)] public byte byte2582;            
        [FieldOffset(2583)] public byte byte2583;            
        [FieldOffset(2584)] public byte byte2584;            
        [FieldOffset(2585)] public byte byte2585;            
        [FieldOffset(2586)] public byte byte2586;            
        [FieldOffset(2587)] public byte byte2587;            
        [FieldOffset(2588)] public byte byte2588;            
        [FieldOffset(2589)] public byte byte2589;            
        [FieldOffset(2590)] public byte byte2590;            
        [FieldOffset(2591)] public byte byte2591;            
        [FieldOffset(2592)] public byte byte2592;            
        [FieldOffset(2593)] public byte byte2593;            
        [FieldOffset(2594)] public byte byte2594;            
        [FieldOffset(2595)] public byte byte2595;            
        [FieldOffset(2596)] public byte byte2596;            
        [FieldOffset(2597)] public byte byte2597;            
        [FieldOffset(2598)] public byte byte2598;            
        [FieldOffset(2599)] public byte byte2599;            
        [FieldOffset(2600)] public byte byte2600;            
        [FieldOffset(2601)] public byte byte2601;            
        [FieldOffset(2602)] public byte byte2602;            
        [FieldOffset(2603)] public byte byte2603;            
        [FieldOffset(2604)] public byte byte2604;            
        [FieldOffset(2605)] public byte byte2605;            
        [FieldOffset(2606)] public byte byte2606;            
        [FieldOffset(2607)] public byte byte2607;            
        [FieldOffset(2608)] public byte byte2608;            
        [FieldOffset(2609)] public byte byte2609;            
        [FieldOffset(2610)] public byte byte2610;            
        [FieldOffset(2611)] public byte byte2611;            
        [FieldOffset(2612)] public byte byte2612;            
        [FieldOffset(2613)] public byte byte2613;            
        [FieldOffset(2614)] public byte byte2614;            
        [FieldOffset(2615)] public byte byte2615;            
        [FieldOffset(2616)] public byte byte2616;            
        [FieldOffset(2617)] public byte byte2617;            
        [FieldOffset(2618)] public byte byte2618;            
        [FieldOffset(2619)] public byte byte2619;            
        [FieldOffset(2620)] public byte byte2620;            
        [FieldOffset(2621)] public byte byte2621;            
        [FieldOffset(2622)] public byte byte2622;            
        [FieldOffset(2623)] public byte byte2623;            
        [FieldOffset(2624)] public byte byte2624;            
        [FieldOffset(2625)] public byte byte2625;            
        [FieldOffset(2626)] public byte byte2626;            
        [FieldOffset(2627)] public byte byte2627;            
        [FieldOffset(2628)] public byte byte2628;            
        [FieldOffset(2629)] public byte byte2629;            
        [FieldOffset(2630)] public byte byte2630;            
        [FieldOffset(2631)] public byte byte2631;            
        [FieldOffset(2632)] public byte byte2632;            
        [FieldOffset(2633)] public byte byte2633;            
        [FieldOffset(2634)] public byte byte2634;            
        [FieldOffset(2635)] public byte byte2635;            
        [FieldOffset(2636)] public byte byte2636;            
        [FieldOffset(2637)] public byte byte2637;            
        [FieldOffset(2638)] public byte byte2638;            
        [FieldOffset(2639)] public byte byte2639;            
        [FieldOffset(2640)] public byte byte2640;            
        [FieldOffset(2641)] public byte byte2641;            
        [FieldOffset(2642)] public byte byte2642;            
        [FieldOffset(2643)] public byte byte2643;            
        [FieldOffset(2644)] public byte byte2644;            
        [FieldOffset(2645)] public byte byte2645;            
        [FieldOffset(2646)] public byte byte2646;            
        [FieldOffset(2647)] public byte byte2647;            
        [FieldOffset(2648)] public byte byte2648;            
        [FieldOffset(2649)] public byte byte2649;            
        [FieldOffset(2650)] public byte byte2650;            
        [FieldOffset(2651)] public byte byte2651;            
        [FieldOffset(2652)] public byte byte2652;            
        [FieldOffset(2653)] public byte byte2653;            
        [FieldOffset(2654)] public byte byte2654;            
        [FieldOffset(2655)] public byte byte2655;            
        [FieldOffset(2656)] public byte byte2656;            
        [FieldOffset(2657)] public byte byte2657;            
        [FieldOffset(2658)] public byte byte2658;            
        [FieldOffset(2659)] public byte byte2659;            
        [FieldOffset(2660)] public byte byte2660;            
        [FieldOffset(2661)] public byte byte2661;            
        [FieldOffset(2662)] public byte byte2662;            
        [FieldOffset(2663)] public byte byte2663;            
        [FieldOffset(2664)] public byte byte2664;            
        [FieldOffset(2665)] public byte byte2665;            
        [FieldOffset(2666)] public byte byte2666;            
        [FieldOffset(2667)] public byte byte2667;            
        [FieldOffset(2668)] public byte byte2668;            
        [FieldOffset(2669)] public byte byte2669;            
        [FieldOffset(2670)] public byte byte2670;            
        [FieldOffset(2671)] public byte byte2671;            
        [FieldOffset(2672)] public byte byte2672;            
        [FieldOffset(2673)] public byte byte2673;            
        [FieldOffset(2674)] public byte byte2674;            
        [FieldOffset(2675)] public byte byte2675;            
        [FieldOffset(2676)] public byte byte2676;            
        [FieldOffset(2677)] public byte byte2677;            
        [FieldOffset(2678)] public byte byte2678;            
        [FieldOffset(2679)] public byte byte2679;            
        [FieldOffset(2680)] public byte byte2680;            
        [FieldOffset(2681)] public byte byte2681;            
        [FieldOffset(2682)] public byte byte2682;            
        [FieldOffset(2683)] public byte byte2683;            
        [FieldOffset(2684)] public byte byte2684;            
        [FieldOffset(2685)] public byte byte2685;            
        [FieldOffset(2686)] public byte byte2686;            
        [FieldOffset(2687)] public byte byte2687;            
        [FieldOffset(2688)] public byte byte2688;            
        [FieldOffset(2689)] public byte byte2689;            
        [FieldOffset(2690)] public byte byte2690;            
        [FieldOffset(2691)] public byte byte2691;            
        [FieldOffset(2692)] public byte byte2692;            
        [FieldOffset(2693)] public byte byte2693;            
        [FieldOffset(2694)] public byte byte2694;            
        [FieldOffset(2695)] public byte byte2695;            
        [FieldOffset(2696)] public byte byte2696;            
        [FieldOffset(2697)] public byte byte2697;            
        [FieldOffset(2698)] public byte byte2698;            
        [FieldOffset(2699)] public byte byte2699;            
        [FieldOffset(2700)] public byte byte2700;            
        [FieldOffset(2701)] public byte byte2701;            
        [FieldOffset(2702)] public byte byte2702;            
        [FieldOffset(2703)] public byte byte2703;            
        [FieldOffset(2704)] public byte byte2704;            
        [FieldOffset(2705)] public byte byte2705;            
        [FieldOffset(2706)] public byte byte2706;            
        [FieldOffset(2707)] public byte byte2707;            
        [FieldOffset(2708)] public byte byte2708;            
        [FieldOffset(2709)] public byte byte2709;            
        [FieldOffset(2710)] public byte byte2710;            
        [FieldOffset(2711)] public byte byte2711;            
        [FieldOffset(2712)] public byte byte2712;            
        [FieldOffset(2713)] public byte byte2713;            
        [FieldOffset(2714)] public byte byte2714;            
        [FieldOffset(2715)] public byte byte2715;            
        [FieldOffset(2716)] public byte byte2716;            
        [FieldOffset(2717)] public byte byte2717;            
        [FieldOffset(2718)] public byte byte2718;            
        [FieldOffset(2719)] public byte byte2719;            
        [FieldOffset(2720)] public byte byte2720;            
        [FieldOffset(2721)] public byte byte2721;            
        [FieldOffset(2722)] public byte byte2722;            
        [FieldOffset(2723)] public byte byte2723;            
        [FieldOffset(2724)] public byte byte2724;            
        [FieldOffset(2725)] public byte byte2725;            
        [FieldOffset(2726)] public byte byte2726;            
        [FieldOffset(2727)] public byte byte2727;            
        [FieldOffset(2728)] public byte byte2728;            
        [FieldOffset(2729)] public byte byte2729;            
        [FieldOffset(2730)] public byte byte2730;            
        [FieldOffset(2731)] public byte byte2731;            
        [FieldOffset(2732)] public byte byte2732;            
        [FieldOffset(2733)] public byte byte2733;            
        [FieldOffset(2734)] public byte byte2734;            
        [FieldOffset(2735)] public byte byte2735;            
        [FieldOffset(2736)] public byte byte2736;            
        [FieldOffset(2737)] public byte byte2737;            
        [FieldOffset(2738)] public byte byte2738;            
        [FieldOffset(2739)] public byte byte2739;            
        [FieldOffset(2740)] public byte byte2740;            
        [FieldOffset(2741)] public byte byte2741;            
        [FieldOffset(2742)] public byte byte2742;            
        [FieldOffset(2743)] public byte byte2743;            
        [FieldOffset(2744)] public byte byte2744;            
        [FieldOffset(2745)] public byte byte2745;            
        [FieldOffset(2746)] public byte byte2746;            
        [FieldOffset(2747)] public byte byte2747;            
        [FieldOffset(2748)] public byte byte2748;            
        [FieldOffset(2749)] public byte byte2749;            
        [FieldOffset(2750)] public byte byte2750;            
        [FieldOffset(2751)] public byte byte2751;            
        [FieldOffset(2752)] public byte byte2752;            
        [FieldOffset(2753)] public byte byte2753;            
        [FieldOffset(2754)] public byte byte2754;            
        [FieldOffset(2755)] public byte byte2755;            
        [FieldOffset(2756)] public byte byte2756;            
        [FieldOffset(2757)] public byte byte2757;            
        [FieldOffset(2758)] public byte byte2758;            
        [FieldOffset(2759)] public byte byte2759;            
        [FieldOffset(2760)] public byte byte2760;            
        [FieldOffset(2761)] public byte byte2761;            
        [FieldOffset(2762)] public byte byte2762;            
        [FieldOffset(2763)] public byte byte2763;            
        [FieldOffset(2764)] public byte byte2764;            
        [FieldOffset(2765)] public byte byte2765;            
        [FieldOffset(2766)] public byte byte2766;            
        [FieldOffset(2767)] public byte byte2767;            
        [FieldOffset(2768)] public byte byte2768;            
        [FieldOffset(2769)] public byte byte2769;            
        [FieldOffset(2770)] public byte byte2770;            
        [FieldOffset(2771)] public byte byte2771;            
        [FieldOffset(2772)] public byte byte2772;            
        [FieldOffset(2773)] public byte byte2773;            
        [FieldOffset(2774)] public byte byte2774;            
        [FieldOffset(2775)] public byte byte2775;            
        [FieldOffset(2776)] public byte byte2776;            
        [FieldOffset(2777)] public byte byte2777;            
        [FieldOffset(2778)] public byte byte2778;            
        [FieldOffset(2779)] public byte byte2779;            
        [FieldOffset(2780)] public byte byte2780;            
        [FieldOffset(2781)] public byte byte2781;            
        [FieldOffset(2782)] public byte byte2782;            
        [FieldOffset(2783)] public byte byte2783;            
        [FieldOffset(2784)] public byte byte2784;            
        [FieldOffset(2785)] public byte byte2785;            
        [FieldOffset(2786)] public byte byte2786;            
        [FieldOffset(2787)] public byte byte2787;            
        [FieldOffset(2788)] public byte byte2788;            
        [FieldOffset(2789)] public byte byte2789;            
        [FieldOffset(2790)] public byte byte2790;            
        [FieldOffset(2791)] public byte byte2791;            
        [FieldOffset(2792)] public byte byte2792;            
        [FieldOffset(2793)] public byte byte2793;            
        [FieldOffset(2794)] public byte byte2794;            
        [FieldOffset(2795)] public byte byte2795;            
        [FieldOffset(2796)] public byte byte2796;            
        [FieldOffset(2797)] public byte byte2797;            
        [FieldOffset(2798)] public byte byte2798;            
        [FieldOffset(2799)] public byte byte2799;            
        [FieldOffset(2800)] public byte byte2800;            
        [FieldOffset(2801)] public byte byte2801;            
        [FieldOffset(2802)] public byte byte2802;            
        [FieldOffset(2803)] public byte byte2803;            
        [FieldOffset(2804)] public byte byte2804;            
        [FieldOffset(2805)] public byte byte2805;            
        [FieldOffset(2806)] public byte byte2806;            
        [FieldOffset(2807)] public byte byte2807;            
        [FieldOffset(2808)] public byte byte2808;            
        [FieldOffset(2809)] public byte byte2809;            
        [FieldOffset(2810)] public byte byte2810;            
        [FieldOffset(2811)] public byte byte2811;            
        [FieldOffset(2812)] public byte byte2812;            
        [FieldOffset(2813)] public byte byte2813;            
        [FieldOffset(2814)] public byte byte2814;            
        [FieldOffset(2815)] public byte byte2815;            
        [FieldOffset(2816)] public byte byte2816;            
        [FieldOffset(2817)] public byte byte2817;            
        [FieldOffset(2818)] public byte byte2818;            
        [FieldOffset(2819)] public byte byte2819;            
        [FieldOffset(2820)] public byte byte2820;            
        [FieldOffset(2821)] public byte byte2821;            
        [FieldOffset(2822)] public byte byte2822;            
        [FieldOffset(2823)] public byte byte2823;            
        [FieldOffset(2824)] public byte byte2824;            
        [FieldOffset(2825)] public byte byte2825;            
        [FieldOffset(2826)] public byte byte2826;            
        [FieldOffset(2827)] public byte byte2827;            
        [FieldOffset(2828)] public byte byte2828;            
        [FieldOffset(2829)] public byte byte2829;            
        [FieldOffset(2830)] public byte byte2830;            
        [FieldOffset(2831)] public byte byte2831;            
        [FieldOffset(2832)] public byte byte2832;            
        [FieldOffset(2833)] public byte byte2833;            
        [FieldOffset(2834)] public byte byte2834;            
        [FieldOffset(2835)] public byte byte2835;            
        [FieldOffset(2836)] public byte byte2836;            
        [FieldOffset(2837)] public byte byte2837;            
        [FieldOffset(2838)] public byte byte2838;            
        [FieldOffset(2839)] public byte byte2839;            
        [FieldOffset(2840)] public byte byte2840;            
        [FieldOffset(2841)] public byte byte2841;            
        [FieldOffset(2842)] public byte byte2842;            
        [FieldOffset(2843)] public byte byte2843;            
        [FieldOffset(2844)] public byte byte2844;            
        [FieldOffset(2845)] public byte byte2845;            
        [FieldOffset(2846)] public byte byte2846;            
        [FieldOffset(2847)] public byte byte2847;            
        [FieldOffset(2848)] public byte byte2848;            
        [FieldOffset(2849)] public byte byte2849;            
        [FieldOffset(2850)] public byte byte2850;            
        [FieldOffset(2851)] public byte byte2851;            
        [FieldOffset(2852)] public byte byte2852;            
        [FieldOffset(2853)] public byte byte2853;            
        [FieldOffset(2854)] public byte byte2854;            
        [FieldOffset(2855)] public byte byte2855;            
        [FieldOffset(2856)] public byte byte2856;            
        [FieldOffset(2857)] public byte byte2857;            
        [FieldOffset(2858)] public byte byte2858;            
        [FieldOffset(2859)] public byte byte2859;            
        [FieldOffset(2860)] public byte byte2860;            
        [FieldOffset(2861)] public byte byte2861;            
        [FieldOffset(2862)] public byte byte2862;            
        [FieldOffset(2863)] public byte byte2863;            
        [FieldOffset(2864)] public byte byte2864;            
        [FieldOffset(2865)] public byte byte2865;            
        [FieldOffset(2866)] public byte byte2866;            
        [FieldOffset(2867)] public byte byte2867;            
        [FieldOffset(2868)] public byte byte2868;            
        [FieldOffset(2869)] public byte byte2869;            
        [FieldOffset(2870)] public byte byte2870;            
        [FieldOffset(2871)] public byte byte2871;            
        [FieldOffset(2872)] public byte byte2872;            
        [FieldOffset(2873)] public byte byte2873;            
        [FieldOffset(2874)] public byte byte2874;            
        [FieldOffset(2875)] public byte byte2875;            
        [FieldOffset(2876)] public byte byte2876;            
        [FieldOffset(2877)] public byte byte2877;            
        [FieldOffset(2878)] public byte byte2878;            
        [FieldOffset(2879)] public byte byte2879;            
        [FieldOffset(2880)] public byte byte2880;            
        [FieldOffset(2881)] public byte byte2881;            
        [FieldOffset(2882)] public byte byte2882;            
        [FieldOffset(2883)] public byte byte2883;            
        [FieldOffset(2884)] public byte byte2884;            
        [FieldOffset(2885)] public byte byte2885;            
        [FieldOffset(2886)] public byte byte2886;            
        [FieldOffset(2887)] public byte byte2887;            
        [FieldOffset(2888)] public byte byte2888;            
        [FieldOffset(2889)] public byte byte2889;            
        [FieldOffset(2890)] public byte byte2890;            
        [FieldOffset(2891)] public byte byte2891;            
        [FieldOffset(2892)] public byte byte2892;            
        [FieldOffset(2893)] public byte byte2893;            
        [FieldOffset(2894)] public byte byte2894;            
        [FieldOffset(2895)] public byte byte2895;            
        [FieldOffset(2896)] public byte byte2896;            
        [FieldOffset(2897)] public byte byte2897;            
        [FieldOffset(2898)] public byte byte2898;            
        [FieldOffset(2899)] public byte byte2899;            
        [FieldOffset(2900)] public byte byte2900;            
        [FieldOffset(2901)] public byte byte2901;            
        [FieldOffset(2902)] public byte byte2902;            
        [FieldOffset(2903)] public byte byte2903;            
        [FieldOffset(2904)] public byte byte2904;            
        [FieldOffset(2905)] public byte byte2905;            
        [FieldOffset(2906)] public byte byte2906;            
        [FieldOffset(2907)] public byte byte2907;            
        [FieldOffset(2908)] public byte byte2908;            
        [FieldOffset(2909)] public byte byte2909;            
        [FieldOffset(2910)] public byte byte2910;            
        [FieldOffset(2911)] public byte byte2911;            
        [FieldOffset(2912)] public byte byte2912;            
        [FieldOffset(2913)] public byte byte2913;            
        [FieldOffset(2914)] public byte byte2914;            
        [FieldOffset(2915)] public byte byte2915;            
        [FieldOffset(2916)] public byte byte2916;            
        [FieldOffset(2917)] public byte byte2917;            
        [FieldOffset(2918)] public byte byte2918;            
        [FieldOffset(2919)] public byte byte2919;            
        [FieldOffset(2920)] public byte byte2920;            
        [FieldOffset(2921)] public byte byte2921;            
        [FieldOffset(2922)] public byte byte2922;            
        [FieldOffset(2923)] public byte byte2923;            
        [FieldOffset(2924)] public byte byte2924;            
        [FieldOffset(2925)] public byte byte2925;            
        [FieldOffset(2926)] public byte byte2926;            
        [FieldOffset(2927)] public byte byte2927;            
        [FieldOffset(2928)] public byte byte2928;            
        [FieldOffset(2929)] public byte byte2929;            
        [FieldOffset(2930)] public byte byte2930;            
        [FieldOffset(2931)] public byte byte2931;            
        [FieldOffset(2932)] public byte byte2932;            
        [FieldOffset(2933)] public byte byte2933;            
        [FieldOffset(2934)] public byte byte2934;            
        [FieldOffset(2935)] public byte byte2935;            
        [FieldOffset(2936)] public byte byte2936;            
        [FieldOffset(2937)] public byte byte2937;            
        [FieldOffset(2938)] public byte byte2938;            
        [FieldOffset(2939)] public byte byte2939;            
        [FieldOffset(2940)] public byte byte2940;            
        [FieldOffset(2941)] public byte byte2941;            
        [FieldOffset(2942)] public byte byte2942;            
        [FieldOffset(2943)] public byte byte2943;            
        [FieldOffset(2944)] public byte byte2944;            
        [FieldOffset(2945)] public byte byte2945;            
        [FieldOffset(2946)] public byte byte2946;            
        [FieldOffset(2947)] public byte byte2947;            
        [FieldOffset(2948)] public byte byte2948;            
        [FieldOffset(2949)] public byte byte2949;            
        [FieldOffset(2950)] public byte byte2950;            
        [FieldOffset(2951)] public byte byte2951;            
        [FieldOffset(2952)] public byte byte2952;            
        [FieldOffset(2953)] public byte byte2953;            
        [FieldOffset(2954)] public byte byte2954;            
        [FieldOffset(2955)] public byte byte2955;            
        [FieldOffset(2956)] public byte byte2956;            
        [FieldOffset(2957)] public byte byte2957;            
        [FieldOffset(2958)] public byte byte2958;            
        [FieldOffset(2959)] public byte byte2959;            
        [FieldOffset(2960)] public byte byte2960;            
        [FieldOffset(2961)] public byte byte2961;            
        [FieldOffset(2962)] public byte byte2962;            
        [FieldOffset(2963)] public byte byte2963;            
        [FieldOffset(2964)] public byte byte2964;            
        [FieldOffset(2965)] public byte byte2965;            
        [FieldOffset(2966)] public byte byte2966;            
        [FieldOffset(2967)] public byte byte2967;            
        [FieldOffset(2968)] public byte byte2968;            
        [FieldOffset(2969)] public byte byte2969;            
        [FieldOffset(2970)] public byte byte2970;            
        [FieldOffset(2971)] public byte byte2971;            
        [FieldOffset(2972)] public byte byte2972;            
        [FieldOffset(2973)] public byte byte2973;            
        [FieldOffset(2974)] public byte byte2974;            
        [FieldOffset(2975)] public byte byte2975;            
        [FieldOffset(2976)] public byte byte2976;            
        [FieldOffset(2977)] public byte byte2977;            
        [FieldOffset(2978)] public byte byte2978;            
        [FieldOffset(2979)] public byte byte2979;            
        [FieldOffset(2980)] public byte byte2980;            
        [FieldOffset(2981)] public byte byte2981;            
        [FieldOffset(2982)] public byte byte2982;            
        [FieldOffset(2983)] public byte byte2983;            
        [FieldOffset(2984)] public byte byte2984;            
        [FieldOffset(2985)] public byte byte2985;            
        [FieldOffset(2986)] public byte byte2986;            
        [FieldOffset(2987)] public byte byte2987;            
        [FieldOffset(2988)] public byte byte2988;            
        [FieldOffset(2989)] public byte byte2989;            
        [FieldOffset(2990)] public byte byte2990;            
        [FieldOffset(2991)] public byte byte2991;            
        [FieldOffset(2992)] public byte byte2992;            
        [FieldOffset(2993)] public byte byte2993;            
        [FieldOffset(2994)] public byte byte2994;            
        [FieldOffset(2995)] public byte byte2995;            
        [FieldOffset(2996)] public byte byte2996;            
        [FieldOffset(2997)] public byte byte2997;            
        [FieldOffset(2998)] public byte byte2998;            
        [FieldOffset(2999)] public byte byte2999;            
        [FieldOffset(3000)] public byte byte3000;            
        [FieldOffset(3001)] public byte byte3001;            
        [FieldOffset(3002)] public byte byte3002;            
        [FieldOffset(3003)] public byte byte3003;            
        [FieldOffset(3004)] public byte byte3004;            
        [FieldOffset(3005)] public byte byte3005;            
        [FieldOffset(3006)] public byte byte3006;            
        [FieldOffset(3007)] public byte byte3007;            
        [FieldOffset(3008)] public byte byte3008;            
        [FieldOffset(3009)] public byte byte3009;            
        [FieldOffset(3010)] public byte byte3010;            
        [FieldOffset(3011)] public byte byte3011;            
        [FieldOffset(3012)] public byte byte3012;            
        [FieldOffset(3013)] public byte byte3013;            
        [FieldOffset(3014)] public byte byte3014;            
        [FieldOffset(3015)] public byte byte3015;            
        [FieldOffset(3016)] public byte byte3016;            
        [FieldOffset(3017)] public byte byte3017;            
        [FieldOffset(3018)] public byte byte3018;            
        [FieldOffset(3019)] public byte byte3019;            
        [FieldOffset(3020)] public byte byte3020;            
        [FieldOffset(3021)] public byte byte3021;            
        [FieldOffset(3022)] public byte byte3022;            
        [FieldOffset(3023)] public byte byte3023;            
        [FieldOffset(3024)] public byte byte3024;            
        [FieldOffset(3025)] public byte byte3025;            
        [FieldOffset(3026)] public byte byte3026;            
        [FieldOffset(3027)] public byte byte3027;            
        [FieldOffset(3028)] public byte byte3028;            
        [FieldOffset(3029)] public byte byte3029;            
        [FieldOffset(3030)] public byte byte3030;            
        [FieldOffset(3031)] public byte byte3031;            
        [FieldOffset(3032)] public byte byte3032;            
        [FieldOffset(3033)] public byte byte3033;            
        [FieldOffset(3034)] public byte byte3034;            
        [FieldOffset(3035)] public byte byte3035;            
        [FieldOffset(3036)] public byte byte3036;            
        [FieldOffset(3037)] public byte byte3037;            
        [FieldOffset(3038)] public byte byte3038;            
        [FieldOffset(3039)] public byte byte3039;            
        [FieldOffset(3040)] public byte byte3040;            
        [FieldOffset(3041)] public byte byte3041;            
        [FieldOffset(3042)] public byte byte3042;            
        [FieldOffset(3043)] public byte byte3043;            
        [FieldOffset(3044)] public byte byte3044;            
        [FieldOffset(3045)] public byte byte3045;            
        [FieldOffset(3046)] public byte byte3046;            
        [FieldOffset(3047)] public byte byte3047;            
        [FieldOffset(3048)] public byte byte3048;            
        [FieldOffset(3049)] public byte byte3049;            
        [FieldOffset(3050)] public byte byte3050;            
        [FieldOffset(3051)] public byte byte3051;            
        [FieldOffset(3052)] public byte byte3052;            
        [FieldOffset(3053)] public byte byte3053;            
        [FieldOffset(3054)] public byte byte3054;            
        [FieldOffset(3055)] public byte byte3055;            
        [FieldOffset(3056)] public byte byte3056;            
        [FieldOffset(3057)] public byte byte3057;            
        [FieldOffset(3058)] public byte byte3058;            
        [FieldOffset(3059)] public byte byte3059;            
        [FieldOffset(3060)] public byte byte3060;            
        [FieldOffset(3061)] public byte byte3061;            
        [FieldOffset(3062)] public byte byte3062;            
        [FieldOffset(3063)] public byte byte3063;            
        [FieldOffset(3064)] public byte byte3064;            
        [FieldOffset(3065)] public byte byte3065;            
        [FieldOffset(3066)] public byte byte3066;            
        [FieldOffset(3067)] public byte byte3067;            
        [FieldOffset(3068)] public byte byte3068;            
        [FieldOffset(3069)] public byte byte3069;            
        [FieldOffset(3070)] public byte byte3070;            
        [FieldOffset(3071)] public byte byte3071;            
        [FieldOffset(3072)] public byte byte3072;            
        [FieldOffset(3073)] public byte byte3073;            
        [FieldOffset(3074)] public byte byte3074;            
        [FieldOffset(3075)] public byte byte3075;            
        [FieldOffset(3076)] public byte byte3076;            
        [FieldOffset(3077)] public byte byte3077;            
        [FieldOffset(3078)] public byte byte3078;            
        [FieldOffset(3079)] public byte byte3079;            
        [FieldOffset(3080)] public byte byte3080;            
        [FieldOffset(3081)] public byte byte3081;            
        [FieldOffset(3082)] public byte byte3082;            
        [FieldOffset(3083)] public byte byte3083;            
        [FieldOffset(3084)] public byte byte3084;            
        [FieldOffset(3085)] public byte byte3085;            
        [FieldOffset(3086)] public byte byte3086;            
        [FieldOffset(3087)] public byte byte3087;            
        [FieldOffset(3088)] public byte byte3088;            
        [FieldOffset(3089)] public byte byte3089;            
        [FieldOffset(3090)] public byte byte3090;            
        [FieldOffset(3091)] public byte byte3091;            
        [FieldOffset(3092)] public byte byte3092;            
        [FieldOffset(3093)] public byte byte3093;            
        [FieldOffset(3094)] public byte byte3094;            
        [FieldOffset(3095)] public byte byte3095;            
        [FieldOffset(3096)] public byte byte3096;            
        [FieldOffset(3097)] public byte byte3097;            
        [FieldOffset(3098)] public byte byte3098;            
        [FieldOffset(3099)] public byte byte3099;            
        [FieldOffset(3100)] public byte byte3100;            
        [FieldOffset(3101)] public byte byte3101;            
        [FieldOffset(3102)] public byte byte3102;            
        [FieldOffset(3103)] public byte byte3103;            
        [FieldOffset(3104)] public byte byte3104;            
        [FieldOffset(3105)] public byte byte3105;            
        [FieldOffset(3106)] public byte byte3106;            
        [FieldOffset(3107)] public byte byte3107;            
        [FieldOffset(3108)] public byte byte3108;            
        [FieldOffset(3109)] public byte byte3109;            
        [FieldOffset(3110)] public byte byte3110;            
        [FieldOffset(3111)] public byte byte3111;            
        [FieldOffset(3112)] public byte byte3112;            
        [FieldOffset(3113)] public byte byte3113;            
        [FieldOffset(3114)] public byte byte3114;            
        [FieldOffset(3115)] public byte byte3115;            
        [FieldOffset(3116)] public byte byte3116;            
        [FieldOffset(3117)] public byte byte3117;            
        [FieldOffset(3118)] public byte byte3118;            
        [FieldOffset(3119)] public byte byte3119;            
        [FieldOffset(3120)] public byte byte3120;            
        [FieldOffset(3121)] public byte byte3121;            
        [FieldOffset(3122)] public byte byte3122;            
        [FieldOffset(3123)] public byte byte3123;            
        [FieldOffset(3124)] public byte byte3124;            
        [FieldOffset(3125)] public byte byte3125;            
        [FieldOffset(3126)] public byte byte3126;            
        [FieldOffset(3127)] public byte byte3127;            
        [FieldOffset(3128)] public byte byte3128;            
        [FieldOffset(3129)] public byte byte3129;            
        [FieldOffset(3130)] public byte byte3130;            
        [FieldOffset(3131)] public byte byte3131;            
        [FieldOffset(3132)] public byte byte3132;            
        [FieldOffset(3133)] public byte byte3133;            
        [FieldOffset(3134)] public byte byte3134;            
        [FieldOffset(3135)] public byte byte3135;            
        [FieldOffset(3136)] public byte byte3136;            
        [FieldOffset(3137)] public byte byte3137;            
        [FieldOffset(3138)] public byte byte3138;            
        [FieldOffset(3139)] public byte byte3139;            
        [FieldOffset(3140)] public byte byte3140;            
        [FieldOffset(3141)] public byte byte3141;            
        [FieldOffset(3142)] public byte byte3142;            
        [FieldOffset(3143)] public byte byte3143;            
        [FieldOffset(3144)] public byte byte3144;            
        [FieldOffset(3145)] public byte byte3145;            
        [FieldOffset(3146)] public byte byte3146;            
        [FieldOffset(3147)] public byte byte3147;            
        [FieldOffset(3148)] public byte byte3148;            
        [FieldOffset(3149)] public byte byte3149;            
        [FieldOffset(3150)] public byte byte3150;            
        [FieldOffset(3151)] public byte byte3151;            
        [FieldOffset(3152)] public byte byte3152;            
        [FieldOffset(3153)] public byte byte3153;            
        [FieldOffset(3154)] public byte byte3154;            
        [FieldOffset(3155)] public byte byte3155;            
        [FieldOffset(3156)] public byte byte3156;            
        [FieldOffset(3157)] public byte byte3157;            
        [FieldOffset(3158)] public byte byte3158;            
        [FieldOffset(3159)] public byte byte3159;            
        [FieldOffset(3160)] public byte byte3160;            
        [FieldOffset(3161)] public byte byte3161;            
        [FieldOffset(3162)] public byte byte3162;            
        [FieldOffset(3163)] public byte byte3163;            
        [FieldOffset(3164)] public byte byte3164;            
        [FieldOffset(3165)] public byte byte3165;            
        [FieldOffset(3166)] public byte byte3166;            
        [FieldOffset(3167)] public byte byte3167;            
        [FieldOffset(3168)] public byte byte3168;            
        [FieldOffset(3169)] public byte byte3169;            
        [FieldOffset(3170)] public byte byte3170;            
        [FieldOffset(3171)] public byte byte3171;            
        [FieldOffset(3172)] public byte byte3172;            
        [FieldOffset(3173)] public byte byte3173;            
        [FieldOffset(3174)] public byte byte3174;            
        [FieldOffset(3175)] public byte byte3175;            
        [FieldOffset(3176)] public byte byte3176;            
        [FieldOffset(3177)] public byte byte3177;            
        [FieldOffset(3178)] public byte byte3178;            
        [FieldOffset(3179)] public byte byte3179;            
        [FieldOffset(3180)] public byte byte3180;            
        [FieldOffset(3181)] public byte byte3181;            
        [FieldOffset(3182)] public byte byte3182;            
        [FieldOffset(3183)] public byte byte3183;            
        [FieldOffset(3184)] public byte byte3184;            
        [FieldOffset(3185)] public byte byte3185;            
        [FieldOffset(3186)] public byte byte3186;            
        [FieldOffset(3187)] public byte byte3187;            
        [FieldOffset(3188)] public byte byte3188;            
        [FieldOffset(3189)] public byte byte3189;            
        [FieldOffset(3190)] public byte byte3190;            
        [FieldOffset(3191)] public byte byte3191;            
        [FieldOffset(3192)] public byte byte3192;            
        [FieldOffset(3193)] public byte byte3193;            
        [FieldOffset(3194)] public byte byte3194;            
        [FieldOffset(3195)] public byte byte3195;            
        [FieldOffset(3196)] public byte byte3196;            
        [FieldOffset(3197)] public byte byte3197;            
        [FieldOffset(3198)] public byte byte3198;            
        [FieldOffset(3199)] public byte byte3199;            
        [FieldOffset(3200)] public byte byte3200;            
        [FieldOffset(3201)] public byte byte3201;            
        [FieldOffset(3202)] public byte byte3202;            
        [FieldOffset(3203)] public byte byte3203;            
        [FieldOffset(3204)] public byte byte3204;            
        [FieldOffset(3205)] public byte byte3205;            
        [FieldOffset(3206)] public byte byte3206;            
        [FieldOffset(3207)] public byte byte3207;            
        [FieldOffset(3208)] public byte byte3208;            
        [FieldOffset(3209)] public byte byte3209;            
        [FieldOffset(3210)] public byte byte3210;            
        [FieldOffset(3211)] public byte byte3211;            
        [FieldOffset(3212)] public byte byte3212;            
        [FieldOffset(3213)] public byte byte3213;            
        [FieldOffset(3214)] public byte byte3214;            
        [FieldOffset(3215)] public byte byte3215;            
        [FieldOffset(3216)] public byte byte3216;            
        [FieldOffset(3217)] public byte byte3217;            
        [FieldOffset(3218)] public byte byte3218;            
        [FieldOffset(3219)] public byte byte3219;            
        [FieldOffset(3220)] public byte byte3220;            
        [FieldOffset(3221)] public byte byte3221;            
        [FieldOffset(3222)] public byte byte3222;            
        [FieldOffset(3223)] public byte byte3223;            
        [FieldOffset(3224)] public byte byte3224;            
        [FieldOffset(3225)] public byte byte3225;            
        [FieldOffset(3226)] public byte byte3226;            
        [FieldOffset(3227)] public byte byte3227;            
        [FieldOffset(3228)] public byte byte3228;            
        [FieldOffset(3229)] public byte byte3229;            
        [FieldOffset(3230)] public byte byte3230;            
        [FieldOffset(3231)] public byte byte3231;            
        [FieldOffset(3232)] public byte byte3232;            
        [FieldOffset(3233)] public byte byte3233;            
        [FieldOffset(3234)] public byte byte3234;            
        [FieldOffset(3235)] public byte byte3235;            
        [FieldOffset(3236)] public byte byte3236;            
        [FieldOffset(3237)] public byte byte3237;            
        [FieldOffset(3238)] public byte byte3238;            
        [FieldOffset(3239)] public byte byte3239;            
        [FieldOffset(3240)] public byte byte3240;            
        [FieldOffset(3241)] public byte byte3241;            
        [FieldOffset(3242)] public byte byte3242;            
        [FieldOffset(3243)] public byte byte3243;            
        [FieldOffset(3244)] public byte byte3244;            
        [FieldOffset(3245)] public byte byte3245;            
        [FieldOffset(3246)] public byte byte3246;            
        [FieldOffset(3247)] public byte byte3247;            
        [FieldOffset(3248)] public byte byte3248;            
        [FieldOffset(3249)] public byte byte3249;            
        [FieldOffset(3250)] public byte byte3250;            
        [FieldOffset(3251)] public byte byte3251;            
        [FieldOffset(3252)] public byte byte3252;            
        [FieldOffset(3253)] public byte byte3253;            
        [FieldOffset(3254)] public byte byte3254;            
        [FieldOffset(3255)] public byte byte3255;            
        [FieldOffset(3256)] public byte byte3256;            
        [FieldOffset(3257)] public byte byte3257;            
        [FieldOffset(3258)] public byte byte3258;            
        [FieldOffset(3259)] public byte byte3259;            
        [FieldOffset(3260)] public byte byte3260;            
        [FieldOffset(3261)] public byte byte3261;            
        [FieldOffset(3262)] public byte byte3262;            
        [FieldOffset(3263)] public byte byte3263;            
        [FieldOffset(3264)] public byte byte3264;            
        [FieldOffset(3265)] public byte byte3265;            
        [FieldOffset(3266)] public byte byte3266;            
        [FieldOffset(3267)] public byte byte3267;            
        [FieldOffset(3268)] public byte byte3268;            
        [FieldOffset(3269)] public byte byte3269;            
        [FieldOffset(3270)] public byte byte3270;            
        [FieldOffset(3271)] public byte byte3271;            
        [FieldOffset(3272)] public byte byte3272;            
        [FieldOffset(3273)] public byte byte3273;            
        [FieldOffset(3274)] public byte byte3274;            
        [FieldOffset(3275)] public byte byte3275;            
        [FieldOffset(3276)] public byte byte3276;            
        [FieldOffset(3277)] public byte byte3277;            
        [FieldOffset(3278)] public byte byte3278;            
        [FieldOffset(3279)] public byte byte3279;            
        [FieldOffset(3280)] public byte byte3280;            
        [FieldOffset(3281)] public byte byte3281;            
        [FieldOffset(3282)] public byte byte3282;            
        [FieldOffset(3283)] public byte byte3283;            
        [FieldOffset(3284)] public byte byte3284;            
        [FieldOffset(3285)] public byte byte3285;            
        [FieldOffset(3286)] public byte byte3286;            
        [FieldOffset(3287)] public byte byte3287;            
        [FieldOffset(3288)] public byte byte3288;            
        [FieldOffset(3289)] public byte byte3289;            
        [FieldOffset(3290)] public byte byte3290;            
        [FieldOffset(3291)] public byte byte3291;            
        [FieldOffset(3292)] public byte byte3292;            
        [FieldOffset(3293)] public byte byte3293;            
        [FieldOffset(3294)] public byte byte3294;            
        [FieldOffset(3295)] public byte byte3295;            
        [FieldOffset(3296)] public byte byte3296;            
        [FieldOffset(3297)] public byte byte3297;            
        [FieldOffset(3298)] public byte byte3298;            
        [FieldOffset(3299)] public byte byte3299;            
        [FieldOffset(3300)] public byte byte3300;            
        [FieldOffset(3301)] public byte byte3301;            
        [FieldOffset(3302)] public byte byte3302;            
        [FieldOffset(3303)] public byte byte3303;            
        [FieldOffset(3304)] public byte byte3304;            
        [FieldOffset(3305)] public byte byte3305;            
        [FieldOffset(3306)] public byte byte3306;            
        [FieldOffset(3307)] public byte byte3307;            
        [FieldOffset(3308)] public byte byte3308;            
        [FieldOffset(3309)] public byte byte3309;            
        [FieldOffset(3310)] public byte byte3310;            
        [FieldOffset(3311)] public byte byte3311;            
        [FieldOffset(3312)] public byte byte3312;            
        [FieldOffset(3313)] public byte byte3313;            
        [FieldOffset(3314)] public byte byte3314;            
        [FieldOffset(3315)] public byte byte3315;            
        [FieldOffset(3316)] public byte byte3316;            
        [FieldOffset(3317)] public byte byte3317;            
        [FieldOffset(3318)] public byte byte3318;            
        [FieldOffset(3319)] public byte byte3319;            
        [FieldOffset(3320)] public byte byte3320;            
        [FieldOffset(3321)] public byte byte3321;            
        [FieldOffset(3322)] public byte byte3322;            
        [FieldOffset(3323)] public byte byte3323;            
        [FieldOffset(3324)] public byte byte3324;            
        [FieldOffset(3325)] public byte byte3325;            
        [FieldOffset(3326)] public byte byte3326;            
        [FieldOffset(3327)] public byte byte3327;            
        [FieldOffset(3328)] public byte byte3328;            
        [FieldOffset(3329)] public byte byte3329;            
        [FieldOffset(3330)] public byte byte3330;            
        [FieldOffset(3331)] public byte byte3331;            
        [FieldOffset(3332)] public byte byte3332;            
        [FieldOffset(3333)] public byte byte3333;            
        [FieldOffset(3334)] public byte byte3334;            
        [FieldOffset(3335)] public byte byte3335;            
        [FieldOffset(3336)] public byte byte3336;            
        [FieldOffset(3337)] public byte byte3337;            
        [FieldOffset(3338)] public byte byte3338;            
        [FieldOffset(3339)] public byte byte3339;            
        [FieldOffset(3340)] public byte byte3340;            
        [FieldOffset(3341)] public byte byte3341;            
        [FieldOffset(3342)] public byte byte3342;            
        [FieldOffset(3343)] public byte byte3343;            
        [FieldOffset(3344)] public byte byte3344;            
        [FieldOffset(3345)] public byte byte3345;            
        [FieldOffset(3346)] public byte byte3346;            
        [FieldOffset(3347)] public byte byte3347;            
        [FieldOffset(3348)] public byte byte3348;            
        [FieldOffset(3349)] public byte byte3349;            
        [FieldOffset(3350)] public byte byte3350;            
        [FieldOffset(3351)] public byte byte3351;            
        [FieldOffset(3352)] public byte byte3352;            
        [FieldOffset(3353)] public byte byte3353;            
        [FieldOffset(3354)] public byte byte3354;            
        [FieldOffset(3355)] public byte byte3355;            
        [FieldOffset(3356)] public byte byte3356;            
        [FieldOffset(3357)] public byte byte3357;            
        [FieldOffset(3358)] public byte byte3358;            
        [FieldOffset(3359)] public byte byte3359;            
        [FieldOffset(3360)] public byte byte3360;            
        [FieldOffset(3361)] public byte byte3361;            
        [FieldOffset(3362)] public byte byte3362;            
        [FieldOffset(3363)] public byte byte3363;            
        [FieldOffset(3364)] public byte byte3364;            
        [FieldOffset(3365)] public byte byte3365;            
        [FieldOffset(3366)] public byte byte3366;            
        [FieldOffset(3367)] public byte byte3367;            
        [FieldOffset(3368)] public byte byte3368;            
        [FieldOffset(3369)] public byte byte3369;            
        [FieldOffset(3370)] public byte byte3370;            
        [FieldOffset(3371)] public byte byte3371;            
        [FieldOffset(3372)] public byte byte3372;            
        [FieldOffset(3373)] public byte byte3373;            
        [FieldOffset(3374)] public byte byte3374;            
        [FieldOffset(3375)] public byte byte3375;            
        [FieldOffset(3376)] public byte byte3376;            
        [FieldOffset(3377)] public byte byte3377;            
        [FieldOffset(3378)] public byte byte3378;            
        [FieldOffset(3379)] public byte byte3379;            
        [FieldOffset(3380)] public byte byte3380;            
        [FieldOffset(3381)] public byte byte3381;            
        [FieldOffset(3382)] public byte byte3382;            
        [FieldOffset(3383)] public byte byte3383;            
        [FieldOffset(3384)] public byte byte3384;            
        [FieldOffset(3385)] public byte byte3385;            
        [FieldOffset(3386)] public byte byte3386;            
        [FieldOffset(3387)] public byte byte3387;            
        [FieldOffset(3388)] public byte byte3388;            
        [FieldOffset(3389)] public byte byte3389;            
        [FieldOffset(3390)] public byte byte3390;            
        [FieldOffset(3391)] public byte byte3391;            
        [FieldOffset(3392)] public byte byte3392;            
        [FieldOffset(3393)] public byte byte3393;            
        [FieldOffset(3394)] public byte byte3394;            
        [FieldOffset(3395)] public byte byte3395;            
        [FieldOffset(3396)] public byte byte3396;            
        [FieldOffset(3397)] public byte byte3397;            
        [FieldOffset(3398)] public byte byte3398;            
        [FieldOffset(3399)] public byte byte3399;            
        [FieldOffset(3400)] public byte byte3400;            
        [FieldOffset(3401)] public byte byte3401;            
        [FieldOffset(3402)] public byte byte3402;            
        [FieldOffset(3403)] public byte byte3403;            
        [FieldOffset(3404)] public byte byte3404;            
        [FieldOffset(3405)] public byte byte3405;            
        [FieldOffset(3406)] public byte byte3406;            
        [FieldOffset(3407)] public byte byte3407;            
        [FieldOffset(3408)] public byte byte3408;            
        [FieldOffset(3409)] public byte byte3409;            
        [FieldOffset(3410)] public byte byte3410;            
        [FieldOffset(3411)] public byte byte3411;            
        [FieldOffset(3412)] public byte byte3412;            
        [FieldOffset(3413)] public byte byte3413;            
        [FieldOffset(3414)] public byte byte3414;            
        [FieldOffset(3415)] public byte byte3415;            
        [FieldOffset(3416)] public byte byte3416;            
        [FieldOffset(3417)] public byte byte3417;            
        [FieldOffset(3418)] public byte byte3418;            
        [FieldOffset(3419)] public byte byte3419;            
        [FieldOffset(3420)] public byte byte3420;            
        [FieldOffset(3421)] public byte byte3421;            
        [FieldOffset(3422)] public byte byte3422;            
        [FieldOffset(3423)] public byte byte3423;            
        [FieldOffset(3424)] public byte byte3424;            
        [FieldOffset(3425)] public byte byte3425;            
        [FieldOffset(3426)] public byte byte3426;            
        [FieldOffset(3427)] public byte byte3427;            
        [FieldOffset(3428)] public byte byte3428;            
        [FieldOffset(3429)] public byte byte3429;            
        [FieldOffset(3430)] public byte byte3430;            
        [FieldOffset(3431)] public byte byte3431;            
        [FieldOffset(3432)] public byte byte3432;            
        [FieldOffset(3433)] public byte byte3433;            
        [FieldOffset(3434)] public byte byte3434;            
        [FieldOffset(3435)] public byte byte3435;            
        [FieldOffset(3436)] public byte byte3436;            
        [FieldOffset(3437)] public byte byte3437;            
        [FieldOffset(3438)] public byte byte3438;            
        [FieldOffset(3439)] public byte byte3439;            
        [FieldOffset(3440)] public byte byte3440;            
        [FieldOffset(3441)] public byte byte3441;            
        [FieldOffset(3442)] public byte byte3442;            
        [FieldOffset(3443)] public byte byte3443;            
        [FieldOffset(3444)] public byte byte3444;            
        [FieldOffset(3445)] public byte byte3445;            
        [FieldOffset(3446)] public byte byte3446;            
        [FieldOffset(3447)] public byte byte3447;            
        [FieldOffset(3448)] public byte byte3448;            
        [FieldOffset(3449)] public byte byte3449;            
        [FieldOffset(3450)] public byte byte3450;            
        [FieldOffset(3451)] public byte byte3451;            
        [FieldOffset(3452)] public byte byte3452;            
        [FieldOffset(3453)] public byte byte3453;            
        [FieldOffset(3454)] public byte byte3454;            
        [FieldOffset(3455)] public byte byte3455;            
        [FieldOffset(3456)] public byte byte3456;            
        [FieldOffset(3457)] public byte byte3457;            
        [FieldOffset(3458)] public byte byte3458;            
        [FieldOffset(3459)] public byte byte3459;            
        [FieldOffset(3460)] public byte byte3460;            
        [FieldOffset(3461)] public byte byte3461;            
        [FieldOffset(3462)] public byte byte3462;            
        [FieldOffset(3463)] public byte byte3463;            
        [FieldOffset(3464)] public byte byte3464;            
        [FieldOffset(3465)] public byte byte3465;            
        [FieldOffset(3466)] public byte byte3466;            
        [FieldOffset(3467)] public byte byte3467;            
        [FieldOffset(3468)] public byte byte3468;            
        [FieldOffset(3469)] public byte byte3469;            
        [FieldOffset(3470)] public byte byte3470;            
        [FieldOffset(3471)] public byte byte3471;            
        [FieldOffset(3472)] public byte byte3472;            
        [FieldOffset(3473)] public byte byte3473;            
        [FieldOffset(3474)] public byte byte3474;            
        [FieldOffset(3475)] public byte byte3475;            
        [FieldOffset(3476)] public byte byte3476;            
        [FieldOffset(3477)] public byte byte3477;            
        [FieldOffset(3478)] public byte byte3478;            
        [FieldOffset(3479)] public byte byte3479;            
        [FieldOffset(3480)] public byte byte3480;            
        [FieldOffset(3481)] public byte byte3481;            
        [FieldOffset(3482)] public byte byte3482;            
        [FieldOffset(3483)] public byte byte3483;            
        [FieldOffset(3484)] public byte byte3484;            
        [FieldOffset(3485)] public byte byte3485;            
        [FieldOffset(3486)] public byte byte3486;            
        [FieldOffset(3487)] public byte byte3487;            
        [FieldOffset(3488)] public byte byte3488;            
        [FieldOffset(3489)] public byte byte3489;            
        [FieldOffset(3490)] public byte byte3490;            
        [FieldOffset(3491)] public byte byte3491;            
        [FieldOffset(3492)] public byte byte3492;            
        [FieldOffset(3493)] public byte byte3493;            
        [FieldOffset(3494)] public byte byte3494;            
        [FieldOffset(3495)] public byte byte3495;            
        [FieldOffset(3496)] public byte byte3496;            
        [FieldOffset(3497)] public byte byte3497;            
        [FieldOffset(3498)] public byte byte3498;            
        [FieldOffset(3499)] public byte byte3499;            
        [FieldOffset(3500)] public byte byte3500;            
        [FieldOffset(3501)] public byte byte3501;            
        [FieldOffset(3502)] public byte byte3502;            
        [FieldOffset(3503)] public byte byte3503;            
        [FieldOffset(3504)] public byte byte3504;            
        [FieldOffset(3505)] public byte byte3505;            
        [FieldOffset(3506)] public byte byte3506;            
        [FieldOffset(3507)] public byte byte3507;            
        [FieldOffset(3508)] public byte byte3508;            
        [FieldOffset(3509)] public byte byte3509;            
        [FieldOffset(3510)] public byte byte3510;            
        [FieldOffset(3511)] public byte byte3511;            
        [FieldOffset(3512)] public byte byte3512;            
        [FieldOffset(3513)] public byte byte3513;            
        [FieldOffset(3514)] public byte byte3514;            
        [FieldOffset(3515)] public byte byte3515;            
        [FieldOffset(3516)] public byte byte3516;            
        [FieldOffset(3517)] public byte byte3517;            
        [FieldOffset(3518)] public byte byte3518;            
        [FieldOffset(3519)] public byte byte3519;            
        [FieldOffset(3520)] public byte byte3520;            
        [FieldOffset(3521)] public byte byte3521;            
        [FieldOffset(3522)] public byte byte3522;            
        [FieldOffset(3523)] public byte byte3523;            
        [FieldOffset(3524)] public byte byte3524;            
        [FieldOffset(3525)] public byte byte3525;            
        [FieldOffset(3526)] public byte byte3526;            
        [FieldOffset(3527)] public byte byte3527;            
        [FieldOffset(3528)] public byte byte3528;            
        [FieldOffset(3529)] public byte byte3529;            
        [FieldOffset(3530)] public byte byte3530;            
        [FieldOffset(3531)] public byte byte3531;            
        [FieldOffset(3532)] public byte byte3532;            
        [FieldOffset(3533)] public byte byte3533;            
        [FieldOffset(3534)] public byte byte3534;            
        [FieldOffset(3535)] public byte byte3535;            
        [FieldOffset(3536)] public byte byte3536;            
        [FieldOffset(3537)] public byte byte3537;            
        [FieldOffset(3538)] public byte byte3538;            
        [FieldOffset(3539)] public byte byte3539;            
        [FieldOffset(3540)] public byte byte3540;            
        [FieldOffset(3541)] public byte byte3541;            
        [FieldOffset(3542)] public byte byte3542;            
        [FieldOffset(3543)] public byte byte3543;            
        [FieldOffset(3544)] public byte byte3544;            
        [FieldOffset(3545)] public byte byte3545;            
        [FieldOffset(3546)] public byte byte3546;            
        [FieldOffset(3547)] public byte byte3547;            
        [FieldOffset(3548)] public byte byte3548;            
        [FieldOffset(3549)] public byte byte3549;            
        [FieldOffset(3550)] public byte byte3550;            
        [FieldOffset(3551)] public byte byte3551;            
        [FieldOffset(3552)] public byte byte3552;            
        [FieldOffset(3553)] public byte byte3553;            
        [FieldOffset(3554)] public byte byte3554;            
        [FieldOffset(3555)] public byte byte3555;            
        [FieldOffset(3556)] public byte byte3556;            
        [FieldOffset(3557)] public byte byte3557;            
        [FieldOffset(3558)] public byte byte3558;            
        [FieldOffset(3559)] public byte byte3559;            
        [FieldOffset(3560)] public byte byte3560;            
        [FieldOffset(3561)] public byte byte3561;            
        [FieldOffset(3562)] public byte byte3562;            
        [FieldOffset(3563)] public byte byte3563;            
        [FieldOffset(3564)] public byte byte3564;            
        [FieldOffset(3565)] public byte byte3565;            
        [FieldOffset(3566)] public byte byte3566;            
        [FieldOffset(3567)] public byte byte3567;            
        [FieldOffset(3568)] public byte byte3568;            
        [FieldOffset(3569)] public byte byte3569;            
        [FieldOffset(3570)] public byte byte3570;            
        [FieldOffset(3571)] public byte byte3571;            
        [FieldOffset(3572)] public byte byte3572;            
        [FieldOffset(3573)] public byte byte3573;            
        [FieldOffset(3574)] public byte byte3574;            
        [FieldOffset(3575)] public byte byte3575;            
        [FieldOffset(3576)] public byte byte3576;            
        [FieldOffset(3577)] public byte byte3577;            
        [FieldOffset(3578)] public byte byte3578;            
        [FieldOffset(3579)] public byte byte3579;            
        [FieldOffset(3580)] public byte byte3580;            
        [FieldOffset(3581)] public byte byte3581;            
        [FieldOffset(3582)] public byte byte3582;            
        [FieldOffset(3583)] public byte byte3583;            
        [FieldOffset(3584)] public byte byte3584;            
        [FieldOffset(3585)] public byte byte3585;            
        [FieldOffset(3586)] public byte byte3586;            
        [FieldOffset(3587)] public byte byte3587;            
        [FieldOffset(3588)] public byte byte3588;            
        [FieldOffset(3589)] public byte byte3589;            
        [FieldOffset(3590)] public byte byte3590;            
        [FieldOffset(3591)] public byte byte3591;            
        [FieldOffset(3592)] public byte byte3592;            
        [FieldOffset(3593)] public byte byte3593;            
        [FieldOffset(3594)] public byte byte3594;            
        [FieldOffset(3595)] public byte byte3595;            
        [FieldOffset(3596)] public byte byte3596;            
        [FieldOffset(3597)] public byte byte3597;            
        [FieldOffset(3598)] public byte byte3598;            
        [FieldOffset(3599)] public byte byte3599;            
        [FieldOffset(3600)] public byte byte3600;            
        [FieldOffset(3601)] public byte byte3601;            
        [FieldOffset(3602)] public byte byte3602;            
        [FieldOffset(3603)] public byte byte3603;            
        [FieldOffset(3604)] public byte byte3604;            
        [FieldOffset(3605)] public byte byte3605;            
        [FieldOffset(3606)] public byte byte3606;            
        [FieldOffset(3607)] public byte byte3607;            
        [FieldOffset(3608)] public byte byte3608;            
        [FieldOffset(3609)] public byte byte3609;            
        [FieldOffset(3610)] public byte byte3610;            
        [FieldOffset(3611)] public byte byte3611;            
        [FieldOffset(3612)] public byte byte3612;            
        [FieldOffset(3613)] public byte byte3613;            
        [FieldOffset(3614)] public byte byte3614;            
        [FieldOffset(3615)] public byte byte3615;            
        [FieldOffset(3616)] public byte byte3616;            
        [FieldOffset(3617)] public byte byte3617;            
        [FieldOffset(3618)] public byte byte3618;            
        [FieldOffset(3619)] public byte byte3619;            
        [FieldOffset(3620)] public byte byte3620;            
        [FieldOffset(3621)] public byte byte3621;            
        [FieldOffset(3622)] public byte byte3622;            
        [FieldOffset(3623)] public byte byte3623;            
        [FieldOffset(3624)] public byte byte3624;            
        [FieldOffset(3625)] public byte byte3625;            
        [FieldOffset(3626)] public byte byte3626;            
        [FieldOffset(3627)] public byte byte3627;            
        [FieldOffset(3628)] public byte byte3628;            
        [FieldOffset(3629)] public byte byte3629;            
        [FieldOffset(3630)] public byte byte3630;            
        [FieldOffset(3631)] public byte byte3631;            
        [FieldOffset(3632)] public byte byte3632;            
        [FieldOffset(3633)] public byte byte3633;            
        [FieldOffset(3634)] public byte byte3634;            
        [FieldOffset(3635)] public byte byte3635;            
        [FieldOffset(3636)] public byte byte3636;            
        [FieldOffset(3637)] public byte byte3637;            
        [FieldOffset(3638)] public byte byte3638;            
        [FieldOffset(3639)] public byte byte3639;            
        [FieldOffset(3640)] public byte byte3640;            
        [FieldOffset(3641)] public byte byte3641;            
        [FieldOffset(3642)] public byte byte3642;            
        [FieldOffset(3643)] public byte byte3643;            
        [FieldOffset(3644)] public byte byte3644;            
        [FieldOffset(3645)] public byte byte3645;            
        [FieldOffset(3646)] public byte byte3646;            
        [FieldOffset(3647)] public byte byte3647;            
        [FieldOffset(3648)] public byte byte3648;            
        [FieldOffset(3649)] public byte byte3649;            
        [FieldOffset(3650)] public byte byte3650;            
        [FieldOffset(3651)] public byte byte3651;            
        [FieldOffset(3652)] public byte byte3652;            
        [FieldOffset(3653)] public byte byte3653;            
        [FieldOffset(3654)] public byte byte3654;            
        [FieldOffset(3655)] public byte byte3655;            
        [FieldOffset(3656)] public byte byte3656;            
        [FieldOffset(3657)] public byte byte3657;            
        [FieldOffset(3658)] public byte byte3658;            
        [FieldOffset(3659)] public byte byte3659;            
        [FieldOffset(3660)] public byte byte3660;            
        [FieldOffset(3661)] public byte byte3661;            
        [FieldOffset(3662)] public byte byte3662;            
        [FieldOffset(3663)] public byte byte3663;            
        [FieldOffset(3664)] public byte byte3664;            
        [FieldOffset(3665)] public byte byte3665;            
        [FieldOffset(3666)] public byte byte3666;            
        [FieldOffset(3667)] public byte byte3667;            
        [FieldOffset(3668)] public byte byte3668;            
        [FieldOffset(3669)] public byte byte3669;            
        [FieldOffset(3670)] public byte byte3670;            
        [FieldOffset(3671)] public byte byte3671;            
        [FieldOffset(3672)] public byte byte3672;            
        [FieldOffset(3673)] public byte byte3673;            
        [FieldOffset(3674)] public byte byte3674;            
        [FieldOffset(3675)] public byte byte3675;            
        [FieldOffset(3676)] public byte byte3676;            
        [FieldOffset(3677)] public byte byte3677;            
        [FieldOffset(3678)] public byte byte3678;            
        [FieldOffset(3679)] public byte byte3679;            
        [FieldOffset(3680)] public byte byte3680;            
        [FieldOffset(3681)] public byte byte3681;            
        [FieldOffset(3682)] public byte byte3682;            
        [FieldOffset(3683)] public byte byte3683;            
        [FieldOffset(3684)] public byte byte3684;            
        [FieldOffset(3685)] public byte byte3685;            
        [FieldOffset(3686)] public byte byte3686;            
        [FieldOffset(3687)] public byte byte3687;            
        [FieldOffset(3688)] public byte byte3688;            
        [FieldOffset(3689)] public byte byte3689;            
        [FieldOffset(3690)] public byte byte3690;            
        [FieldOffset(3691)] public byte byte3691;            
        [FieldOffset(3692)] public byte byte3692;            
        [FieldOffset(3693)] public byte byte3693;            
        [FieldOffset(3694)] public byte byte3694;            
        [FieldOffset(3695)] public byte byte3695;            
        [FieldOffset(3696)] public byte byte3696;            
        [FieldOffset(3697)] public byte byte3697;            
        [FieldOffset(3698)] public byte byte3698;            
        [FieldOffset(3699)] public byte byte3699;            
        [FieldOffset(3700)] public byte byte3700;            
        [FieldOffset(3701)] public byte byte3701;            
        [FieldOffset(3702)] public byte byte3702;            
        [FieldOffset(3703)] public byte byte3703;            
        [FieldOffset(3704)] public byte byte3704;            
        [FieldOffset(3705)] public byte byte3705;            
        [FieldOffset(3706)] public byte byte3706;            
        [FieldOffset(3707)] public byte byte3707;            
        [FieldOffset(3708)] public byte byte3708;            
        [FieldOffset(3709)] public byte byte3709;            
        [FieldOffset(3710)] public byte byte3710;            
        [FieldOffset(3711)] public byte byte3711;            
        [FieldOffset(3712)] public byte byte3712;            
        [FieldOffset(3713)] public byte byte3713;            
        [FieldOffset(3714)] public byte byte3714;            
        [FieldOffset(3715)] public byte byte3715;            
        [FieldOffset(3716)] public byte byte3716;            
        [FieldOffset(3717)] public byte byte3717;            
        [FieldOffset(3718)] public byte byte3718;            
        [FieldOffset(3719)] public byte byte3719;            
        [FieldOffset(3720)] public byte byte3720;            
        [FieldOffset(3721)] public byte byte3721;            
        [FieldOffset(3722)] public byte byte3722;            
        [FieldOffset(3723)] public byte byte3723;            
        [FieldOffset(3724)] public byte byte3724;            
        [FieldOffset(3725)] public byte byte3725;            
        [FieldOffset(3726)] public byte byte3726;            
        [FieldOffset(3727)] public byte byte3727;            
        [FieldOffset(3728)] public byte byte3728;            
        [FieldOffset(3729)] public byte byte3729;            
        [FieldOffset(3730)] public byte byte3730;            
        [FieldOffset(3731)] public byte byte3731;            
        [FieldOffset(3732)] public byte byte3732;            
        [FieldOffset(3733)] public byte byte3733;            
        [FieldOffset(3734)] public byte byte3734;            
        [FieldOffset(3735)] public byte byte3735;            
        [FieldOffset(3736)] public byte byte3736;            
        [FieldOffset(3737)] public byte byte3737;            
        [FieldOffset(3738)] public byte byte3738;            
        [FieldOffset(3739)] public byte byte3739;            
        [FieldOffset(3740)] public byte byte3740;            
        [FieldOffset(3741)] public byte byte3741;            
        [FieldOffset(3742)] public byte byte3742;            
        [FieldOffset(3743)] public byte byte3743;            
        [FieldOffset(3744)] public byte byte3744;            
        [FieldOffset(3745)] public byte byte3745;            
        [FieldOffset(3746)] public byte byte3746;            
        [FieldOffset(3747)] public byte byte3747;            
        [FieldOffset(3748)] public byte byte3748;            
        [FieldOffset(3749)] public byte byte3749;            
        [FieldOffset(3750)] public byte byte3750;            
        [FieldOffset(3751)] public byte byte3751;            
        [FieldOffset(3752)] public byte byte3752;            
        [FieldOffset(3753)] public byte byte3753;            
        [FieldOffset(3754)] public byte byte3754;            
        [FieldOffset(3755)] public byte byte3755;            
        [FieldOffset(3756)] public byte byte3756;            
        [FieldOffset(3757)] public byte byte3757;            
        [FieldOffset(3758)] public byte byte3758;            
        [FieldOffset(3759)] public byte byte3759;            
        [FieldOffset(3760)] public byte byte3760;            
        [FieldOffset(3761)] public byte byte3761;            
        [FieldOffset(3762)] public byte byte3762;            
        [FieldOffset(3763)] public byte byte3763;            
        [FieldOffset(3764)] public byte byte3764;            
        [FieldOffset(3765)] public byte byte3765;            
        [FieldOffset(3766)] public byte byte3766;            
        [FieldOffset(3767)] public byte byte3767;            
        [FieldOffset(3768)] public byte byte3768;            
        [FieldOffset(3769)] public byte byte3769;            
        [FieldOffset(3770)] public byte byte3770;            
        [FieldOffset(3771)] public byte byte3771;            
        [FieldOffset(3772)] public byte byte3772;            
        [FieldOffset(3773)] public byte byte3773;            
        [FieldOffset(3774)] public byte byte3774;            
        [FieldOffset(3775)] public byte byte3775;            
        [FieldOffset(3776)] public byte byte3776;            
        [FieldOffset(3777)] public byte byte3777;            
        [FieldOffset(3778)] public byte byte3778;            
        [FieldOffset(3779)] public byte byte3779;            
        [FieldOffset(3780)] public byte byte3780;            
        [FieldOffset(3781)] public byte byte3781;            
        [FieldOffset(3782)] public byte byte3782;            
        [FieldOffset(3783)] public byte byte3783;            
        [FieldOffset(3784)] public byte byte3784;            
        [FieldOffset(3785)] public byte byte3785;            
        [FieldOffset(3786)] public byte byte3786;            
        [FieldOffset(3787)] public byte byte3787;            
        [FieldOffset(3788)] public byte byte3788;            
        [FieldOffset(3789)] public byte byte3789;            
        [FieldOffset(3790)] public byte byte3790;            
        [FieldOffset(3791)] public byte byte3791;            
        [FieldOffset(3792)] public byte byte3792;            
        [FieldOffset(3793)] public byte byte3793;            
        [FieldOffset(3794)] public byte byte3794;            
        [FieldOffset(3795)] public byte byte3795;            
        [FieldOffset(3796)] public byte byte3796;            
        [FieldOffset(3797)] public byte byte3797;            
        [FieldOffset(3798)] public byte byte3798;            
        [FieldOffset(3799)] public byte byte3799;            
        [FieldOffset(3800)] public byte byte3800;            
        [FieldOffset(3801)] public byte byte3801;            
        [FieldOffset(3802)] public byte byte3802;            
        [FieldOffset(3803)] public byte byte3803;            
        [FieldOffset(3804)] public byte byte3804;            
        [FieldOffset(3805)] public byte byte3805;            
        [FieldOffset(3806)] public byte byte3806;            
        [FieldOffset(3807)] public byte byte3807;            
        [FieldOffset(3808)] public byte byte3808;            
        [FieldOffset(3809)] public byte byte3809;            
        [FieldOffset(3810)] public byte byte3810;            
        [FieldOffset(3811)] public byte byte3811;            
        [FieldOffset(3812)] public byte byte3812;            
        [FieldOffset(3813)] public byte byte3813;            
        [FieldOffset(3814)] public byte byte3814;            
        [FieldOffset(3815)] public byte byte3815;            
        [FieldOffset(3816)] public byte byte3816;            
        [FieldOffset(3817)] public byte byte3817;            
        [FieldOffset(3818)] public byte byte3818;            
        [FieldOffset(3819)] public byte byte3819;            
        [FieldOffset(3820)] public byte byte3820;            
        [FieldOffset(3821)] public byte byte3821;            
        [FieldOffset(3822)] public byte byte3822;            
        [FieldOffset(3823)] public byte byte3823;            
        [FieldOffset(3824)] public byte byte3824;            
        [FieldOffset(3825)] public byte byte3825;            
        [FieldOffset(3826)] public byte byte3826;            
        [FieldOffset(3827)] public byte byte3827;            
        [FieldOffset(3828)] public byte byte3828;            
        [FieldOffset(3829)] public byte byte3829;            
        [FieldOffset(3830)] public byte byte3830;            
        [FieldOffset(3831)] public byte byte3831;            
        [FieldOffset(3832)] public byte byte3832;            
        [FieldOffset(3833)] public byte byte3833;            
        [FieldOffset(3834)] public byte byte3834;            
        [FieldOffset(3835)] public byte byte3835;            
        [FieldOffset(3836)] public byte byte3836;            
        [FieldOffset(3837)] public byte byte3837;            
        [FieldOffset(3838)] public byte byte3838;            
        [FieldOffset(3839)] public byte byte3839;            
        [FieldOffset(3840)] public byte byte3840;            
        [FieldOffset(3841)] public byte byte3841;            
        [FieldOffset(3842)] public byte byte3842;            
        [FieldOffset(3843)] public byte byte3843;            
        [FieldOffset(3844)] public byte byte3844;            
        [FieldOffset(3845)] public byte byte3845;            
        [FieldOffset(3846)] public byte byte3846;            
        [FieldOffset(3847)] public byte byte3847;            
        [FieldOffset(3848)] public byte byte3848;            
        [FieldOffset(3849)] public byte byte3849;            
        [FieldOffset(3850)] public byte byte3850;            
        [FieldOffset(3851)] public byte byte3851;            
        [FieldOffset(3852)] public byte byte3852;            
        [FieldOffset(3853)] public byte byte3853;            
        [FieldOffset(3854)] public byte byte3854;            
        [FieldOffset(3855)] public byte byte3855;            
        [FieldOffset(3856)] public byte byte3856;            
        [FieldOffset(3857)] public byte byte3857;            
        [FieldOffset(3858)] public byte byte3858;            
        [FieldOffset(3859)] public byte byte3859;            
        [FieldOffset(3860)] public byte byte3860;            
        [FieldOffset(3861)] public byte byte3861;            
        [FieldOffset(3862)] public byte byte3862;            
        [FieldOffset(3863)] public byte byte3863;            
        [FieldOffset(3864)] public byte byte3864;            
        [FieldOffset(3865)] public byte byte3865;            
        [FieldOffset(3866)] public byte byte3866;            
        [FieldOffset(3867)] public byte byte3867;            
        [FieldOffset(3868)] public byte byte3868;            
        [FieldOffset(3869)] public byte byte3869;            
        [FieldOffset(3870)] public byte byte3870;            
        [FieldOffset(3871)] public byte byte3871;            
        [FieldOffset(3872)] public byte byte3872;            
        [FieldOffset(3873)] public byte byte3873;            
        [FieldOffset(3874)] public byte byte3874;            
        [FieldOffset(3875)] public byte byte3875;            
        [FieldOffset(3876)] public byte byte3876;            
        [FieldOffset(3877)] public byte byte3877;            
        [FieldOffset(3878)] public byte byte3878;            
        [FieldOffset(3879)] public byte byte3879;            
        [FieldOffset(3880)] public byte byte3880;            
        [FieldOffset(3881)] public byte byte3881;            
        [FieldOffset(3882)] public byte byte3882;            
        [FieldOffset(3883)] public byte byte3883;            
        [FieldOffset(3884)] public byte byte3884;            
        [FieldOffset(3885)] public byte byte3885;            
        [FieldOffset(3886)] public byte byte3886;            
        [FieldOffset(3887)] public byte byte3887;            
        [FieldOffset(3888)] public byte byte3888;            
        [FieldOffset(3889)] public byte byte3889;            
        [FieldOffset(3890)] public byte byte3890;            
        [FieldOffset(3891)] public byte byte3891;            
        [FieldOffset(3892)] public byte byte3892;            
        [FieldOffset(3893)] public byte byte3893;            
        [FieldOffset(3894)] public byte byte3894;            
        [FieldOffset(3895)] public byte byte3895;            
        [FieldOffset(3896)] public byte byte3896;            
        [FieldOffset(3897)] public byte byte3897;            
        [FieldOffset(3898)] public byte byte3898;            
        [FieldOffset(3899)] public byte byte3899;            
        [FieldOffset(3900)] public byte byte3900;            
        [FieldOffset(3901)] public byte byte3901;            
        [FieldOffset(3902)] public byte byte3902;            
        [FieldOffset(3903)] public byte byte3903;            
        [FieldOffset(3904)] public byte byte3904;            
        [FieldOffset(3905)] public byte byte3905;            
        [FieldOffset(3906)] public byte byte3906;            
        [FieldOffset(3907)] public byte byte3907;            
        [FieldOffset(3908)] public byte byte3908;            
        [FieldOffset(3909)] public byte byte3909;            
        [FieldOffset(3910)] public byte byte3910;            
        [FieldOffset(3911)] public byte byte3911;            
        [FieldOffset(3912)] public byte byte3912;            
        [FieldOffset(3913)] public byte byte3913;            
        [FieldOffset(3914)] public byte byte3914;            
        [FieldOffset(3915)] public byte byte3915;            
        [FieldOffset(3916)] public byte byte3916;            
        [FieldOffset(3917)] public byte byte3917;            
        [FieldOffset(3918)] public byte byte3918;            
        [FieldOffset(3919)] public byte byte3919;            
        [FieldOffset(3920)] public byte byte3920;            
        [FieldOffset(3921)] public byte byte3921;            
        [FieldOffset(3922)] public byte byte3922;            
        [FieldOffset(3923)] public byte byte3923;            
        [FieldOffset(3924)] public byte byte3924;            
        [FieldOffset(3925)] public byte byte3925;            
        [FieldOffset(3926)] public byte byte3926;            
        [FieldOffset(3927)] public byte byte3927;            
        [FieldOffset(3928)] public byte byte3928;            
        [FieldOffset(3929)] public byte byte3929;            
        [FieldOffset(3930)] public byte byte3930;            
        [FieldOffset(3931)] public byte byte3931;            
        [FieldOffset(3932)] public byte byte3932;            
        [FieldOffset(3933)] public byte byte3933;            
        [FieldOffset(3934)] public byte byte3934;            
        [FieldOffset(3935)] public byte byte3935;            
        [FieldOffset(3936)] public byte byte3936;            
        [FieldOffset(3937)] public byte byte3937;            
        [FieldOffset(3938)] public byte byte3938;            
        [FieldOffset(3939)] public byte byte3939;            
        [FieldOffset(3940)] public byte byte3940;            
        [FieldOffset(3941)] public byte byte3941;            
        [FieldOffset(3942)] public byte byte3942;            
        [FieldOffset(3943)] public byte byte3943;            
        [FieldOffset(3944)] public byte byte3944;            
        [FieldOffset(3945)] public byte byte3945;            
        [FieldOffset(3946)] public byte byte3946;            
        [FieldOffset(3947)] public byte byte3947;            
        [FieldOffset(3948)] public byte byte3948;            
        [FieldOffset(3949)] public byte byte3949;            
        [FieldOffset(3950)] public byte byte3950;            
        [FieldOffset(3951)] public byte byte3951;            
        [FieldOffset(3952)] public byte byte3952;            
        [FieldOffset(3953)] public byte byte3953;            
        [FieldOffset(3954)] public byte byte3954;            
        [FieldOffset(3955)] public byte byte3955;            
        [FieldOffset(3956)] public byte byte3956;            
        [FieldOffset(3957)] public byte byte3957;            
        [FieldOffset(3958)] public byte byte3958;            
        [FieldOffset(3959)] public byte byte3959;            
        [FieldOffset(3960)] public byte byte3960;            
        [FieldOffset(3961)] public byte byte3961;            
        [FieldOffset(3962)] public byte byte3962;            
        [FieldOffset(3963)] public byte byte3963;            
        [FieldOffset(3964)] public byte byte3964;            
        [FieldOffset(3965)] public byte byte3965;            
        [FieldOffset(3966)] public byte byte3966;            
        [FieldOffset(3967)] public byte byte3967;            
        [FieldOffset(3968)] public byte byte3968;            
        [FieldOffset(3969)] public byte byte3969;            
        [FieldOffset(3970)] public byte byte3970;            
        [FieldOffset(3971)] public byte byte3971;            
        [FieldOffset(3972)] public byte byte3972;            
        [FieldOffset(3973)] public byte byte3973;            
        [FieldOffset(3974)] public byte byte3974;            
        [FieldOffset(3975)] public byte byte3975;            
        [FieldOffset(3976)] public byte byte3976;            
        [FieldOffset(3977)] public byte byte3977;            
        [FieldOffset(3978)] public byte byte3978;            
        [FieldOffset(3979)] public byte byte3979;            
        [FieldOffset(3980)] public byte byte3980;            
        [FieldOffset(3981)] public byte byte3981;            
        [FieldOffset(3982)] public byte byte3982;            
        [FieldOffset(3983)] public byte byte3983;            
        [FieldOffset(3984)] public byte byte3984;            
        [FieldOffset(3985)] public byte byte3985;            
        [FieldOffset(3986)] public byte byte3986;            
        [FieldOffset(3987)] public byte byte3987;            
        [FieldOffset(3988)] public byte byte3988;            
        [FieldOffset(3989)] public byte byte3989;            
        [FieldOffset(3990)] public byte byte3990;            
        [FieldOffset(3991)] public byte byte3991;            
        [FieldOffset(3992)] public byte byte3992;            
        [FieldOffset(3993)] public byte byte3993;            
        [FieldOffset(3994)] public byte byte3994;            
        [FieldOffset(3995)] public byte byte3995;            
        [FieldOffset(3996)] public byte byte3996;            
        [FieldOffset(3997)] public byte byte3997;            
        [FieldOffset(3998)] public byte byte3998;            
        [FieldOffset(3999)] public byte byte3999;            
        [FieldOffset(4000)] public byte byte4000;            
        [FieldOffset(4001)] public byte byte4001;            
        [FieldOffset(4002)] public byte byte4002;            
        [FieldOffset(4003)] public byte byte4003;            
        [FieldOffset(4004)] public byte byte4004;            
        [FieldOffset(4005)] public byte byte4005;            
        [FieldOffset(4006)] public byte byte4006;            
        [FieldOffset(4007)] public byte byte4007;            
        [FieldOffset(4008)] public byte byte4008;            
        [FieldOffset(4009)] public byte byte4009;            
        [FieldOffset(4010)] public byte byte4010;            
        [FieldOffset(4011)] public byte byte4011;            
        [FieldOffset(4012)] public byte byte4012;            
        [FieldOffset(4013)] public byte byte4013;            
        [FieldOffset(4014)] public byte byte4014;            
        [FieldOffset(4015)] public byte byte4015;            
        [FieldOffset(4016)] public byte byte4016;            
        [FieldOffset(4017)] public byte byte4017;            
        [FieldOffset(4018)] public byte byte4018;            
        [FieldOffset(4019)] public byte byte4019;            
        [FieldOffset(4020)] public byte byte4020;            
        [FieldOffset(4021)] public byte byte4021;            
        [FieldOffset(4022)] public byte byte4022;            
        [FieldOffset(4023)] public byte byte4023;            
        [FieldOffset(4024)] public byte byte4024;            
        [FieldOffset(4025)] public byte byte4025;            
        [FieldOffset(4026)] public byte byte4026;            
        [FieldOffset(4027)] public byte byte4027;            
        [FieldOffset(4028)] public byte byte4028;            
        [FieldOffset(4029)] public byte byte4029;            
        [FieldOffset(4030)] public byte byte4030;            
        [FieldOffset(4031)] public byte byte4031;            
        [FieldOffset(4032)] public byte byte4032;            
        [FieldOffset(4033)] public byte byte4033;            
        [FieldOffset(4034)] public byte byte4034;            
        [FieldOffset(4035)] public byte byte4035;            
        [FieldOffset(4036)] public byte byte4036;            
        [FieldOffset(4037)] public byte byte4037;            
        [FieldOffset(4038)] public byte byte4038;            
        [FieldOffset(4039)] public byte byte4039;            
        [FieldOffset(4040)] public byte byte4040;            
        [FieldOffset(4041)] public byte byte4041;            
        [FieldOffset(4042)] public byte byte4042;            
        [FieldOffset(4043)] public byte byte4043;            
        [FieldOffset(4044)] public byte byte4044;            
        [FieldOffset(4045)] public byte byte4045;            
        [FieldOffset(4046)] public byte byte4046;            
        [FieldOffset(4047)] public byte byte4047;            
        [FieldOffset(4048)] public byte byte4048;            
        [FieldOffset(4049)] public byte byte4049;            
        [FieldOffset(4050)] public byte byte4050;            
        [FieldOffset(4051)] public byte byte4051;            
        [FieldOffset(4052)] public byte byte4052;            
        [FieldOffset(4053)] public byte byte4053;            
        [FieldOffset(4054)] public byte byte4054;            
        [FieldOffset(4055)] public byte byte4055;            
        [FieldOffset(4056)] public byte byte4056;            
        [FieldOffset(4057)] public byte byte4057;            
        [FieldOffset(4058)] public byte byte4058;            
        [FieldOffset(4059)] public byte byte4059;            
        [FieldOffset(4060)] public byte byte4060;            
        [FieldOffset(4061)] public byte byte4061;            
        [FieldOffset(4062)] public byte byte4062;            
        [FieldOffset(4063)] public byte byte4063;            
        [FieldOffset(4064)] public byte byte4064;            
        [FieldOffset(4065)] public byte byte4065;            
        [FieldOffset(4066)] public byte byte4066;            
        [FieldOffset(4067)] public byte byte4067;            
        [FieldOffset(4068)] public byte byte4068;            
        [FieldOffset(4069)] public byte byte4069;            
        [FieldOffset(4070)] public byte byte4070;            
        [FieldOffset(4071)] public byte byte4071;            
        [FieldOffset(4072)] public byte byte4072;            
        [FieldOffset(4073)] public byte byte4073;            
        [FieldOffset(4074)] public byte byte4074;            
        [FieldOffset(4075)] public byte byte4075;            
        [FieldOffset(4076)] public byte byte4076;            
        [FieldOffset(4077)] public byte byte4077;            
        [FieldOffset(4078)] public byte byte4078;            
        [FieldOffset(4079)] public byte byte4079;            
        [FieldOffset(4080)] public byte byte4080;            
        [FieldOffset(4081)] public byte byte4081;            
        [FieldOffset(4082)] public byte byte4082;            
        [FieldOffset(4083)] public byte byte4083;            
        [FieldOffset(4084)] public byte byte4084;            
        [FieldOffset(4085)] public byte byte4085;            
        [FieldOffset(4086)] public byte byte4086;            
        [FieldOffset(4087)] public byte byte4087;            
        [FieldOffset(4088)] public byte byte4088;            
        [FieldOffset(4089)] public byte byte4089;            
        [FieldOffset(4090)] public byte byte4090;            
        [FieldOffset(4091)] public byte byte4091;            
        [FieldOffset(4092)] public byte byte4092;            
        [FieldOffset(4093)] public byte byte4093;            
    }
    
    [StructLayout(LayoutKind.Explicit, Size=4096)]
    public struct NativeString4096 : IComparable<NativeString4096>, IEquatable<NativeString4096>
    {
        public const int MaxLength = 4094;
        [FieldOffset(0)] public ushort LengthInBytes;
        [FieldOffset(2)] public Bytes4094 buffer;        
                
        public ParseError Parse(ref int offset, ref int output)
        {
            unsafe
            {
                fixed (byte* b = &buffer.byte0000)
                {
                    NativeString temp = new NativeString{data = b, Length = LengthInBytes, Capacity = MaxLength};
                    return temp.Parse(ref offset, ref output);                    
                }
            }
        }
        public ParseError Parse(ref int offset, ref float output, char decimalSeparator = '.')
        {
            unsafe
            {
                fixed (byte* b = &buffer.byte0000)
                {
                    NativeString temp = new NativeString {data = b, Length = LengthInBytes, Capacity = MaxLength};
                    return temp.Parse(ref offset, ref output, decimalSeparator);
                }
            }
        }

        public FormatError Format(float input, char decimalSeparator = '.')
        {
            unsafe
            {
                fixed (byte* b = &buffer.byte0000)
                {
                    NativeString temp = new NativeString {data = b, Length = LengthInBytes, Capacity = MaxLength};
                    var error = temp.Format(input, decimalSeparator);
                    LengthInBytes = (ushort)temp.Length;
                    return error;
                }
            }
        }

        public unsafe CopyError CopyFrom(NativeString4096 source)
        {
            fixed (byte* b = &buffer.byte0000)
                return source.CopyTo(b, out LengthInBytes, MaxLength);
        }
        
        
        public unsafe CopyError CopyFrom(NativeString32 source)
        {
            fixed (byte* b = &buffer.byte0000)
                return source.CopyTo(b, out LengthInBytes, MaxLength);
        }

        public NativeString4096(ref NativeString32 source)
        {
            LengthInBytes = 0;
            buffer = new Bytes4094{};
            var error = CopyFrom(source);
            if(error != CopyError.None)
                throw new ArgumentException($"NativeString4096: {error} while copying \"{source}\"");             
        }
        
        
        public unsafe CopyError CopyFrom(NativeString64 source)
        {
            fixed (byte* b = &buffer.byte0000)
                return source.CopyTo(b, out LengthInBytes, MaxLength);
        }

        public NativeString4096(ref NativeString64 source)
        {
            LengthInBytes = 0;
            buffer = new Bytes4094{};
            var error = CopyFrom(source);
            if(error != CopyError.None)
                throw new ArgumentException($"NativeString4096: {error} while copying \"{source}\"");             
        }
        
        
        public unsafe CopyError CopyFrom(NativeString128 source)
        {
            fixed (byte* b = &buffer.byte0000)
                return source.CopyTo(b, out LengthInBytes, MaxLength);
        }

        public NativeString4096(ref NativeString128 source)
        {
            LengthInBytes = 0;
            buffer = new Bytes4094{};
            var error = CopyFrom(source);
            if(error != CopyError.None)
                throw new ArgumentException($"NativeString4096: {error} while copying \"{source}\"");             
        }
        
        
        public unsafe CopyError CopyFrom(NativeString512 source)
        {
            fixed (byte* b = &buffer.byte0000)
                return source.CopyTo(b, out LengthInBytes, MaxLength);
        }

        public NativeString4096(ref NativeString512 source)
        {
            LengthInBytes = 0;
            buffer = new Bytes4094{};
            var error = CopyFrom(source);
            if(error != CopyError.None)
                throw new ArgumentException($"NativeString4096: {error} while copying \"{source}\"");             
        }
        
        
        public unsafe CopyError CopyFrom(char* s, ushort length)
        {
            fixed (byte* b = &buffer.byte0000)
                return NativeString.Copy(b, out LengthInBytes, MaxLength, s, length);
        }
        public unsafe CopyError CopyFrom(String source)
        {
            if (string.IsNullOrEmpty(source))
            {
                LengthInBytes = 0;
                return CopyError.None;
            }        
            fixed(char *c = source)
                return CopyFrom(c, (ushort)source.Length);
        }        
        public unsafe CopyError CopyTo(byte* d, out ushort length, ushort maxLength)
        {
            fixed (byte* b = &buffer.byte0000)
                return NativeString.Copy(d, out length, maxLength, b, LengthInBytes);
        }
        public unsafe CopyError CopyTo(char* d, out ushort length, ushort maxLength)
        {
            fixed (byte* b = &buffer.byte0000)
                return NativeString.Copy(d, out length, maxLength, b, LengthInBytes);
        }


        public NativeString4096(String source)
        {
            LengthInBytes = 0;
            buffer = new Bytes4094{};
            var error = CopyFrom(source);
            if(error != CopyError.None)
                throw new ArgumentException($"NativeString4096: {error} while copying \"{source}\"");             
        }
                
        public static implicit operator NativeString4096(string b) => new NativeString4096(b);        
                
        public override String ToString()
        {
            unsafe
            {
                fixed (byte* b = &buffer.byte0000)
                {
                    return new NativeString {data = b, Length = LengthInBytes, Capacity = MaxLength}.ToString();
                }
            }
        }
        public override int GetHashCode()
        {
            unsafe
            {
                fixed (byte* b = &buffer.byte0000)
                {
                    return new NativeString {data = b, Length = LengthInBytes, Capacity = MaxLength}.GetHashCode();
                }
            }
        }

        
        public int CompareTo(NativeString4096 other)
        {
            unsafe
            {
                fixed (byte* b = &buffer.byte0000)
                {
                    return NativeString.CompareTo(b, LengthInBytes, &other.buffer.byte0000, other.LengthInBytes);
                }
            }
        }

        public bool Equals(NativeString4096 other)
        {
            unsafe
            {
                fixed (byte* b = &buffer.byte0000)
                {
                    return NativeString.Equals(b, LengthInBytes, &other.buffer.byte0000, other.LengthInBytes);
                }
            }
        }

        public override bool Equals(object obj)
        {
            if (ReferenceEquals(null, obj)) return false;
            return obj is NativeString4096 other && Equals(other);
        }
    }
}
